{"version":3,"file":"8e5091c8c8be7d4f.js","mappings":"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","sources":["webpack://keybr.com/./packages/keybr-math/lib/dist.ts","webpack://keybr.com/./packages/keybr-math/lib/filter.ts","webpack://keybr.com/./packages/keybr-math/lib/keyset.ts","webpack://keybr.com/./packages/keybr-math/lib/vector.ts","webpack://keybr.com/./packages/keybr-math/lib/histogram.ts","webpack://keybr.com/./packages/keybr-math/lib/polynomial.ts","webpack://keybr.com/./packages/keybr-math/lib/linear-regression.ts","webpack://keybr.com/./packages/keybr-math/lib/model.ts","webpack://keybr.com/./packages/keybr-math/lib/sle.ts","webpack://keybr.com/./packages/keybr-math/lib/polynomial-regression.ts","webpack://keybr.com/./packages/keybr-math/lib/range.ts","webpack://keybr.com/./packages/keybr-math/lib/util.ts","webpack://keybr.com/./packages/keybr-result/lib/accuracy.ts","webpack://keybr.com/./packages/keybr-result/lib/context.ts","webpack://keybr.com/./packages/keybr-result/lib/localdate.ts","webpack://keybr.com/./packages/keybr-result/lib/group.ts","webpack://keybr.com/./packages/keybr-result/lib/summarystats.ts","webpack://keybr.com/./packages/keybr-result/lib/dailystats.ts","webpack://keybr.com/./packages/keybr-result/lib/errors.ts","webpack://keybr.com/./packages/keybr-result/lib/result.ts","webpack://keybr.com/./packages/keybr-result/lib/texttype.ts","webpack://keybr.com/./packages/keybr-result/lib/keystats.ts","webpack://keybr.com/./packages/keybr-result/lib/recover.ts","webpack://keybr.com/./packages/keybr-result/lib/speedunit.ts","webpack://keybr.com/./packages/keybr-result/lib/settings.ts","webpack://keybr.com/./packages/keybr-textinput/lib/chars.ts","webpack://keybr.com/./packages/keybr-themes/lib/fonts/index.ts","webpack://keybr.com/./packages/keybr-textinput/lib/font.ts","webpack://keybr.com/./packages/keybr-textinput/lib/histogram.ts","webpack://keybr.com/./packages/keybr-textinput/lib/settings.ts","webpack://keybr.com/./packages/keybr-textinput/lib/stats.ts","webpack://keybr.com/./packages/keybr-textinput/lib/textinput.ts"],"sourcesContent":["export type Sample = Readonly<{ index: number; pmf: number; cdf: number }>;\n\n/**\n * @see https://en.wikipedia.org/wiki/Empirical_distribution_function\n */\nexport class Distribution implements Iterable<Sample> {\n  readonly #samples: Float64Array;\n  readonly #pmf: Float64Array;\n  readonly #cdf: Float64Array;\n\n  constructor(samples: readonly number[]) {\n    this.#samples = new Float64Array(samples);\n    this.#pmf = new Float64Array(this.#samples.length);\n    this.#cdf = new Float64Array(this.#samples.length);\n    const totalSum = samples.reduce((sum, value) => sum + value, 0);\n    let runningSum = 0;\n    for (let i = 0; i < this.#samples.length; i++) {\n      this.#pmf[i] = samples[i] / totalSum;\n      this.#cdf[i] = runningSum += samples[i] / totalSum;\n    }\n  }\n\n  *[Symbol.iterator](): IterableIterator<Sample> {\n    for (let i = 0; i < this.#samples.length; i++) {\n      yield { index: i, pmf: this.pmf(i), cdf: this.cdf(i) };\n    }\n  }\n\n  map<T>(fn: (sample: Sample) => T): T[] {\n    return [...this].map((value) => fn(value));\n  }\n\n  get length(): number {\n    return this.#samples.length;\n  }\n\n  pmf(index: number): number {\n    const { length } = this.#samples;\n    index = Math.round(index);\n    if (index < 0) {\n      return 0;\n    }\n    if (index > length - 1) {\n      return 0;\n    }\n    return this.#pmf[index];\n  }\n\n  cdf(index: number): number {\n    const { length } = this.#samples;\n    index = Math.round(index);\n    if (index < 0) {\n      return 0;\n    }\n    if (index > length - 1) {\n      return 1;\n    }\n    return this.#cdf[index];\n  }\n\n  /** Scales a value in range [0, 1] to a histogram index. */\n  scale(index: number): number {\n    const { length } = this.#samples;\n    index = Math.round(index * (length - 1));\n    if (index < 0) {\n      return 0;\n    }\n    if (index > length - 1) {\n      return length - 1;\n    }\n    return index;\n  }\n\n  /** Scales a histogram index to a value in range [0, 1]. */\n  unscale(index: number): number {\n    const { length } = this.#samples;\n    index = Math.round(index);\n    if (index < 0) {\n      return 0;\n    }\n    if (index > length - 1) {\n      return 1;\n    }\n    return index / (length - 1);\n  }\n}\n","/**\n * @see https://en.wikipedia.org/wiki/Exponential_smoothing\n */\nexport type Filter = {\n  /** Number of samples added so far. */\n  readonly n: number;\n  /** Adds a new sample. */\n  add(v: number): number;\n};\n\nexport const makeFilter = (alpha: number): Filter => {\n  let n = 0;\n  let value = NaN;\n\n  return {\n    get n(): number {\n      return n;\n    },\n    add: (v: number): number => {\n      n++;\n      if (n > 1) {\n        value = alpha * v + (1 - alpha) * value;\n      } else {\n        value = v;\n      }\n      return value;\n    },\n  };\n};\n","export class KeySet<T> implements Iterable<T> {\n  readonly #keys = new Set<T>();\n\n  constructor(keys: Iterable<T>) {\n    for (const key of keys) {\n      this.add(key);\n    }\n  }\n\n  *[Symbol.iterator](): IterableIterator<T> {\n    for (const key of this.#keys) {\n      yield key;\n    }\n  }\n\n  add(key: T): void {\n    this.#keys.add(key);\n  }\n}\n","export class Vector implements Iterable<number> {\n  readonly #values: number[] = [];\n\n  constructor(values: Iterable<number> = []) {\n    for (const value of values) {\n      this.add(value);\n    }\n  }\n\n  *[Symbol.iterator](): IterableIterator<number> {\n    for (const item of this.#values) {\n      yield item;\n    }\n  }\n\n  add(value: number): void {\n    if (value !== value) {\n      throw new Error();\n    }\n    this.#values.push(value);\n  }\n\n  get length(): number {\n    return this.#values.length;\n  }\n\n  at(index: number): number {\n    if (!Number.isSafeInteger(index)) {\n      throw new RangeError();\n    }\n    if (index < 0 || index >= this.#values.length) {\n      throw new RangeError();\n    }\n    return this.#values[index];\n  }\n}\n","import { KeySet } from \"./keyset.ts\";\nimport { Vector } from \"./vector.ts\";\n\nexport class Histogram<T> implements Iterable<[T, number]> {\n  readonly #keySet: KeySet<T>;\n  readonly #map: Map<T, number>;\n\n  static from<T>(items: Iterable<[T, number]>): Histogram<T> {\n    const histogram = new Histogram<T>(new KeySet<T>([]));\n    for (const [key, value] of items) {\n      histogram.set(key, value);\n    }\n    return histogram;\n  }\n\n  constructor(keySet: KeySet<T>) {\n    this.#keySet = keySet;\n    this.#map = new Map();\n  }\n\n  *[Symbol.iterator](): IterableIterator<[T, number]> {\n    for (const key of this.#keySet) {\n      yield [key, this.get(key)];\n    }\n  }\n\n  *keys(): IterableIterator<T> {\n    for (const key of this.#keySet) {\n      yield key;\n    }\n  }\n\n  *values(): IterableIterator<number> {\n    for (const key of this.#keySet) {\n      yield this.get(key);\n    }\n  }\n\n  asVector(): Vector {\n    return new Vector(this.values());\n  }\n\n  has(key: T): boolean {\n    return this.#map.has(key);\n  }\n\n  get(key: T): number {\n    return this.#map.get(key) ?? 0;\n  }\n\n  set(key: T, value: number): void {\n    if (value !== value || value < 0) {\n      throw new Error();\n    }\n    this.#keySet.add(key);\n    this.#map.set(key, value);\n  }\n\n  add(key: T, value: number): void {\n    if (value !== value || value < 0) {\n      throw new Error();\n    }\n    this.#keySet.add(key);\n    this.#map.set(key, this.get(key) + value);\n  }\n}\n","import { type Model } from \"./model.ts\";\n\nexport abstract class Polynomial implements Model {\n  static from(coef: readonly number[]): Polynomial {\n    coef = trimZeros(coef);\n    switch (coef.length) {\n      case 0:\n        throw new Error();\n      case 1:\n        return new Polynomial0(coef[0]); // Constant\n      case 2:\n        return new Polynomial1(coef[0], coef[1]); // Linear.\n      case 3:\n        return new Polynomial2(coef[0], coef[1], coef[2]); // Quadratic.\n      case 4:\n        return new Polynomial3(coef[0], coef[1], coef[2], coef[3]); // Cubic.\n      default:\n        return new PolynomialN(coef);\n    }\n  }\n\n  readonly coef: readonly number[];\n  readonly degree: number;\n\n  constructor(coef: readonly number[]) {\n    this.coef = coef;\n    this.degree = coef.length - 1;\n  }\n\n  abstract eval(x: number): number;\n\n  abstract derivative(): Polynomial;\n}\n\nexport class Polynomial0 extends Polynomial {\n  constructor(readonly y: number) {\n    super([y]);\n  }\n\n  override eval(x: number): number {\n    return this.y;\n  }\n\n  override derivative(): Polynomial {\n    return new Polynomial0(0);\n  }\n}\n\nexport class Polynomial1 extends Polynomial {\n  constructor(\n    readonly a: number,\n    readonly b: number,\n  ) {\n    super([a, b]);\n  }\n\n  override eval(x: number): number {\n    return this.a + this.b * x;\n  }\n\n  override derivative(): Polynomial {\n    return new Polynomial0(this.b);\n  }\n}\n\nexport class Polynomial2 extends Polynomial {\n  constructor(\n    readonly a: number,\n    readonly b: number,\n    readonly c: number,\n  ) {\n    super([a, b, c]);\n  }\n\n  override eval(x: number): number {\n    return this.a + this.b * x + this.c * x * x;\n  }\n\n  override derivative(): Polynomial {\n    return new Polynomial1(this.b, this.c * 2);\n  }\n}\n\nexport class Polynomial3 extends Polynomial {\n  constructor(\n    readonly a: number,\n    readonly b: number,\n    readonly c: number,\n    readonly d: number,\n  ) {\n    super([a, b, c, d]);\n  }\n\n  override eval(x: number): number {\n    return this.a + this.b * x + this.c * x * x + this.d * x * x * x;\n  }\n\n  override derivative(): Polynomial {\n    return new Polynomial2(this.b, this.c * 2, this.d * 3);\n  }\n}\n\nexport class PolynomialN extends Polynomial {\n  constructor(coef: readonly number[]) {\n    super(coef);\n  }\n\n  override eval(x: number): number {\n    const { coef } = this;\n    const { length } = coef;\n    let y = 0;\n    for (let i = length - 1; i > 0; i--) {\n      y = (y + coef[i]) * x;\n    }\n    return y + coef[0];\n  }\n\n  override derivative(): Polynomial {\n    const { coef } = this;\n    const { length } = coef;\n    const derivativeCoef = new Array<number>(length - 1);\n    for (let i = 1; i < length; i++) {\n      derivativeCoef[i - 1] = coef[i] * i;\n    }\n    return Polynomial.from(derivativeCoef);\n  }\n}\n\nfunction trimZeros(coef: readonly number[]): number[] {\n  let i = coef.length;\n  while (i > 1 && coef[i - 1] === 0) {\n    i = i - 1;\n  }\n  return coef.slice(0, i);\n}\n","import { Polynomial } from \"./polynomial.ts\";\nimport { type Vector } from \"./vector.ts\";\n\nexport function linearRegression(vx: Vector, vy: Vector): Polynomial {\n  const { length } = vx;\n  if (length !== vy.length) {\n    throw new Error();\n  }\n  if (length === 0) {\n    throw new Error();\n  }\n\n  let sx = 0;\n  let sy = 0;\n  for (let i = 0; i < length; i++) {\n    sx = sx + vx.at(i);\n    sy = sy + vy.at(i);\n  }\n  const mx = sx / length;\n  const my = sy / length;\n\n  let s1 = 0;\n  let s2 = 0;\n  for (let i = 0; i < length; i++) {\n    const t0 = vx.at(i) - mx;\n    const t1 = vy.at(i) - my;\n    s1 = s1 + t0 * t1;\n    s2 = s2 + t0 * t0;\n  }\n  const a = my - (s1 / s2) * mx;\n  const b = s1 / s2;\n\n  return Polynomial.from([a, b]);\n}\n","import { type Vector } from \"./vector.ts\";\n\nexport type Model = {\n  eval(x: number): number;\n};\n\nexport function constModel(v: number): Model {\n  return new (class Const implements Model {\n    eval(x: number): number {\n      return v;\n    }\n  })();\n}\n\n/**\n * @see https://en.wikipedia.org/wiki/Coefficient_of_determination\n */\nexport function r2(vx: Vector, vy: Vector, model: Model): number {\n  const { length } = vx;\n  if (length !== vy.length) {\n    throw new Error();\n  }\n  if (length === 0) {\n    throw new Error();\n  }\n\n  let sy = 0;\n  for (let i = 0; i < length; i++) {\n    sy = sy + vy.at(i);\n  }\n  const my = sy / length;\n  let ssres = 0;\n  let sstot = 0;\n  for (let i = 0; i < length; i++) {\n    const t0 = vy.at(i) - model.eval(vx.at(i));\n    const t1 = vy.at(i) - my;\n    ssres = ssres + t0 * t0;\n    sstot = sstot + t1 * t1;\n  }\n  return 1 - ssres / sstot;\n}\n","// The MIT License (MIT)\n//\n// Copyright (c) Tom Alexander <me@tomalexander.co.nz>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\ntype Vector = Array<number>;\ntype Matrix = Array<Vector>;\n\n/**\n * A system of linear equations which solves `A * x = y` for `x`,\n * where `A` is an input matrix, `y` is an input vector.\n */\nexport class Sle {\n  readonly size: number;\n  readonly A: Matrix;\n  readonly y: Vector;\n\n  constructor(size: number) {\n    const A = new Array<Array<number>>(size + 1);\n    for (let i = 0; i < size; i++) {\n      A[i] = new Array<number>(size).fill(0);\n    }\n    const y = new Array<number>(size).fill(0);\n    A[size] = y;\n    this.size = size;\n    this.A = A;\n    this.y = y;\n  }\n\n  solve(): Vector {\n    const { size, A } = this;\n\n    for (let i = 0; i < size; i++) {\n      let maxrow = i;\n      for (let j = i + 1; j < size; j++) {\n        if (Math.abs(A[i][j]) > Math.abs(A[i][maxrow])) {\n          maxrow = j;\n        }\n      }\n\n      for (let k = i; k < size + 1; k++) {\n        const tmp = A[k][i];\n        A[k][i] = A[k][maxrow];\n        A[k][maxrow] = tmp;\n      }\n\n      for (let j = i + 1; j < size; j++) {\n        for (let k = size; k >= i; k--) {\n          A[k][j] -= (A[k][i] * A[i][j]) / A[i][i];\n        }\n      }\n    }\n\n    const x = new Array<number>(size);\n    for (let j = size - 1; j >= 0; j--) {\n      let s = 0;\n      for (let k = j + 1; k < size; k++) {\n        s += A[k][j] * x[k];\n      }\n      x[j] = (A[size][j] - s) / A[j][j];\n    }\n    return x;\n  }\n}\n","// The MIT License (MIT)\n//\n// Copyright (c) Tom Alexander <me@tomalexander.co.nz>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport { linearRegression } from \"./linear-regression.ts\";\nimport { Polynomial } from \"./polynomial.ts\";\nimport { Sle } from \"./sle.ts\";\nimport { type Vector } from \"./vector.ts\";\n\nexport function polynomialRegression(\n  vx: Vector,\n  vy: Vector,\n  degree: number,\n): Polynomial {\n  if (degree === 1) {\n    return linearRegression(vx, vy);\n  }\n\n  const { length } = vx;\n  if (length !== vy.length) {\n    throw new Error();\n  }\n  if (length === 0) {\n    throw new Error();\n  }\n\n  const size = degree + 1;\n  const sle = new Sle(size);\n  for (let i = 0; i < size; i++) {\n    for (let j = 0; j < size; j++) {\n      let t = 0;\n      for (let l = 0; l < length; l++) {\n        t += vx.at(l) ** (i + j);\n      }\n      sle.A[i][j] = t;\n    }\n  }\n  for (let i = 0; i < size; i++) {\n    let t = 0;\n    for (let l = 0; l < length; l++) {\n      t += vx.at(l) ** i * vy.at(l);\n    }\n    sle.y[i] = t;\n  }\n  return Polynomial.from(sle.solve());\n}\n","export class Range {\n  static from(values: Iterable<number>, ...rest: Iterable<number>[]): Range {\n    const range = new Range();\n    range.adjust(values);\n    for (const values of rest) {\n      range.adjust(values);\n    }\n    return range;\n  }\n\n  #min: number = NaN;\n  #max: number = NaN;\n\n  constructor();\n  constructor(that: Range);\n  constructor(min: number, max: number);\n  constructor(...args: any) {\n    const l = args.length;\n    let a0, a1;\n    if (l === 0) {\n      return;\n    }\n    if (l === 1 && (a0 = args[0]) instanceof Range) {\n      this.#min = a0.#min;\n      this.#max = a0.#max;\n      return;\n    }\n    if (\n      l === 2 &&\n      typeof (a0 = args[0]) === \"number\" &&\n      typeof (a1 = args[1]) === \"number\"\n    ) {\n      this.#min = a0;\n      this.#max = a1;\n      return;\n    }\n    throw new TypeError();\n  }\n\n  get defined(): boolean {\n    return this.#min === this.#min && this.#max === this.#max;\n  }\n\n  get min(): number {\n    return this.#min;\n  }\n\n  set min(value: number) {\n    this.#min = this.#min === this.#min ? Math.min(this.#min, value) : value;\n  }\n\n  get max(): number {\n    return this.#max;\n  }\n\n  set max(value: number) {\n    this.#max = this.#max === this.#max ? Math.max(this.#max, value) : value;\n  }\n\n  adjust(values: Iterable<number>): this {\n    for (const value of values) {\n      this.min = value;\n      this.max = value;\n    }\n    return this;\n  }\n\n  get span(): number {\n    if (!this.defined) {\n      throw new RangeError();\n    }\n    return this.#max - this.#min;\n  }\n\n  normalize(value: number, width: number = 0): number {\n    if (!this.defined) {\n      throw new RangeError();\n    }\n    if (this.#max === this.#min) {\n      return this.#min;\n    } else {\n      return (value - this.#min) / (this.#max - this.#min + width);\n    }\n  }\n\n  round(step: number): this {\n    if (!this.defined) {\n      throw new RangeError();\n    }\n    const t0 = this.#max / step;\n    const r0 = Math.floor(t0);\n    if (t0 !== r0) {\n      this.#max = (r0 + 1) * step;\n    }\n    const t1 = this.#min / step;\n    const r1 = Math.ceil(t1);\n    if (t1 !== r1) {\n      this.#min = (r1 - 1) * step;\n    }\n    return this;\n  }\n\n  *steps(): IterableIterator<number> {\n    if (!this.defined) {\n      throw new RangeError();\n    }\n    for (let index = this.#min; index <= this.#max; index++) {\n      yield index;\n    }\n  }\n}\n","import { makeFilter } from \"./filter.ts\";\n\nexport const hasData = ({ length }: { readonly length: number }): boolean => {\n  return length >= 5;\n};\n\nexport const smooth = (smoothness: number) => {\n  const filter = makeFilter(1 / Math.pow(10, smoothness * 3));\n  return (value: number): number => filter.add(value);\n};\n\nexport const resample = (data: number[], newLength: number): number[] => {\n  const { length } = data;\n  const r = length / newLength;\n  const result = new Array<number>(newLength);\n  for (let i = 0; i < newLength; i++) {\n    result[i] = data[Math.floor(i * r)]; // Nearest neighbour.\n  }\n  return result;\n};\n","import { type Result } from \"./result.ts\";\n\nexport type Streak = {\n  readonly level: number;\n  readonly results: readonly Result[];\n};\n\nexport type StreakList = {\n  readonly level1: Streak;\n  readonly level2: Streak;\n  readonly level3: Streak;\n} & Iterable<Streak>;\n\nexport type AcceptStreak = (streak: Streak) => void;\n\nexport class MutableStreakList implements StreakList {\n  static readonly level1 = 1.0;\n  static readonly level2 = 0.97;\n  static readonly level3 = 0.95;\n\n  static findLongest(results: readonly Result[]): Streak[] {\n    const candidates = [\n      { level: MutableStreakList.level1, results: [] },\n      { level: MutableStreakList.level2, results: [] },\n      { level: MutableStreakList.level3, results: [] },\n    ] as { level: number; results: readonly Result[] }[];\n    const accept = (streak: Streak) => {\n      for (const candidate of candidates) {\n        if (\n          streak.level >= candidate.level &&\n          streak.results.length >= candidate.results.length\n        ) {\n          candidate.results = streak.results;\n          break;\n        }\n      }\n    };\n    const list = new MutableStreakList();\n    for (const result of results) {\n      list.append(result, accept);\n    }\n    list.end(accept);\n    return candidates.filter((streak) => streak.results.length > 0);\n  }\n\n  readonly #top = new TopMutableStreak();\n  readonly #level1 = new MutableStreak(MutableStreakList.level1, this.#top);\n  readonly #level2 = new MutableStreak(MutableStreakList.level2, this.#level1);\n  readonly #level3 = new MutableStreak(MutableStreakList.level3, this.#level2);\n  readonly #bottom = new MutableStreak(0, this.#level3);\n  readonly #streaks = Object.freeze([this.#level1, this.#level2, this.#level3]);\n\n  get level1(): Streak {\n    return this.#level1;\n  }\n\n  get level2(): Streak {\n    return this.#level2;\n  }\n\n  get level3(): Streak {\n    return this.#level3;\n  }\n\n  [Symbol.iterator](): IterableIterator<Streak> {\n    return this.#streaks[Symbol.iterator]();\n  }\n\n  append(result: Result, accept: AcceptStreak | null = null) {\n    this.#bottom.append(result, accept);\n  }\n\n  end(accept: AcceptStreak) {\n    this.#bottom.end(accept);\n  }\n\n  copy(): StreakList {\n    const level1 = this.#level1.copy();\n    const level2 = this.#level2.copy();\n    const level3 = this.#level3.copy();\n    const streaks = [level1, level2, level3];\n    return {\n      level1,\n      level2,\n      level3,\n      [Symbol.iterator]() {\n        return streaks[Symbol.iterator]();\n      },\n    };\n  }\n}\n\nclass MutableStreak implements Streak {\n  readonly #level: number;\n  readonly #next: MutableStreak;\n  readonly #results: Result[];\n\n  constructor(level: number, next: MutableStreak) {\n    this.#level = level;\n    this.#next = next;\n    this.#results = [];\n  }\n\n  get level() {\n    return this.#level;\n  }\n\n  get results() {\n    return this.#results;\n  }\n\n  append(result: Result, accept: AcceptStreak | null) {\n    const started = this.#results.length > this.#next.#results.length;\n    if (this.#next.append(result, accept)) {\n      if (started) {\n        this.#results.push(result);\n      }\n      return true;\n    }\n    if (!started) {\n      this.#results.push(...this.#next.#results);\n    }\n    this.#next.#results.length = 0;\n    if (result.accuracy >= this.#level) {\n      this.#results.push(result);\n      return true;\n    }\n    if (started && this.#results.length > 0 && accept != null) {\n      accept(this.copy());\n    }\n    return false;\n  }\n\n  end(accept: AcceptStreak) {\n    if (this.#next != null) {\n      this.#next.end(accept);\n    }\n    if (this.#results.length > 0) {\n      accept(this.copy());\n    }\n  }\n\n  copy(): Streak {\n    return {\n      level: this.#level,\n      results: [...this.#results],\n    };\n  }\n}\n\nclass TopMutableStreak extends MutableStreak {\n  constructor() {\n    super(Infinity, null!);\n  }\n\n  override append() {\n    return false;\n  }\n}\n","import { createContext, useContext } from \"react\";\nimport { type Result } from \"./result.ts\";\n\nexport type ResultContextProps = {\n  readonly results: readonly Result[];\n  readonly appendResults: (newResults: readonly Result[]) => void;\n  readonly clearResults: () => void;\n};\n\nexport const ResultContext = createContext<ResultContextProps>(null!);\n\nexport function useResults(): ResultContextProps {\n  const value = useContext(ResultContext);\n  if (value == null) {\n    throw new Error(\n      process.env.NODE_ENV !== \"production\"\n        ? \"ResultContext is missing\"\n        : undefined,\n    );\n  }\n  return value;\n}\n","import { isNumber, isObject } from \"@keybr/lang\";\n\nexport enum Month {\n  January = 1,\n  February = 2,\n  March = 3,\n  April = 4,\n  May = 5,\n  June = 6,\n  July = 7,\n  August = 8,\n  September = 9,\n  October = 10,\n  November = 11,\n  December = 12,\n}\n\nexport enum DayOfWeek {\n  Monday = 1,\n  Tuesday = 2,\n  Wednesday = 3,\n  Thursday = 4,\n  Friday = 5,\n  Saturday = 6,\n  Sunday = 7,\n}\n\n/**\n * A tuple consisting of a year, a month, and a day of the month,\n * all in the local timezone.\n */\nexport class LocalDate {\n  /** The year number in a local timezone, four digits. */\n  readonly year: number;\n  /** The month number in a local timezone, 1-12. */\n  readonly month: Month;\n  /** The day of month number in a local timezone, 1-31. */\n  readonly dayOfMonth: number;\n  /** The day of week number in a local timezone, 1-7. */\n  readonly dayOfWeek: DayOfWeek;\n  /** The timestamp of midnight in the UTC timezone, milliseconds. */\n  readonly timeStamp: number;\n  /** The string value formatted as YYYY-MM-DD. */\n  readonly value: string;\n\n  static now(): LocalDate {\n    return new LocalDate(Date.now());\n  }\n\n  /**\n   * Creates a local date with the given year, month, and day.\n   * @param year A year number, four digits.\n   * @param month A month number, 1-12.\n   * @param day A day of the month number, 1-31.\n   */\n  constructor(year: number, month: number, day: number);\n  /**\n   * Creates a local date from the given timestamp in the UTC zone.\n   * @param timeStamp A timestamp in the UTC timezone, milliseconds.\n   */\n  constructor(timeStamp: number);\n  /**\n   * Creates a local date from the given date instance.\n   * @param date A date instance.\n   */\n  constructor(date: Date);\n  constructor(...args: any[]) {\n    const { length } = args;\n    let year: number;\n    let month: number;\n    let day: number;\n    let timeStamp: number;\n    let date: Date;\n    if (\n      length === 3 &&\n      isNumber((year = args[0])) &&\n      isNumber((month = args[1])) &&\n      isNumber((day = args[2]))\n    ) {\n      date = new Date(year, month - 1, day);\n      if (\n        date.getFullYear() !== year ||\n        date.getMonth() !== month - 1 ||\n        date.getDate() !== day\n      ) {\n        throw new Error(\n          process.env.NODE_ENV !== \"production\"\n            ? \"Invalid local date arguments\"\n            : undefined,\n        );\n      }\n    } else if (length === 1 && isNumber((timeStamp = args[0]))) {\n      date = new Date(timeStamp);\n    } else if (length === 1 && isObject((date = args[0]))) {\n      date = new Date(date.getTime());\n    } else {\n      throw new TypeError(\n        process.env.NODE_ENV !== \"production\"\n          ? \"Invalid local date arguments\"\n          : undefined,\n      );\n    }\n    date.setHours(0);\n    date.setMinutes(0);\n    date.setSeconds(0);\n    date.setMilliseconds(0);\n    this.year = date.getFullYear();\n    this.month = date.getMonth() + 1;\n    this.dayOfMonth = date.getDate();\n    let dayOfWeek = date.getDay();\n    if (dayOfWeek === 0) {\n      dayOfWeek = 7;\n    }\n    this.dayOfWeek = dayOfWeek;\n    this.timeStamp = date.getTime();\n    this.value =\n      String(this.year) +\n      \"-\" +\n      String(this.month).padStart(2, \"0\") +\n      \"-\" +\n      String(this.dayOfMonth).padStart(2, \"0\");\n    return Object.freeze(this);\n  }\n\n  plusDays(days: number): LocalDate {\n    const date = new Date(this.timeStamp);\n    date.setDate(date.getDate() + days);\n    return new LocalDate(date);\n  }\n\n  minusDays(days: number): LocalDate {\n    const date = new Date(this.timeStamp);\n    date.setDate(date.getDate() - days);\n    return new LocalDate(date);\n  }\n\n  toString() {\n    return this.value;\n  }\n\n  valueOf() {\n    return this.timeStamp;\n  }\n}\n\nexport class LocalDateRange {\n  readonly #from: LocalDate;\n  readonly #to: LocalDate;\n\n  constructor(from: LocalDate, to: LocalDate) {\n    this.#from = from;\n    this.#to = to;\n  }\n\n  get from(): LocalDate {\n    return this.#from;\n  }\n\n  get to(): LocalDate {\n    return this.#to;\n  }\n\n  includes(timeStamp: number): boolean {\n    return this.#from.timeStamp <= timeStamp && timeStamp < this.#to.timeStamp;\n  }\n\n  toString() {\n    return `${this.#from} - ${this.#to}`;\n  }\n}\n\nexport class Yesterday extends LocalDateRange {\n  constructor(now = LocalDate.now()) {\n    super(now.minusDays(1), now);\n  }\n}\n\nexport class Today extends LocalDateRange {\n  constructor(now = LocalDate.now()) {\n    super(now, now.plusDays(1));\n  }\n}\n","import { type Layout } from \"@keybr/keyboard\";\nimport { LocalDate } from \"./localdate.ts\";\nimport { type Result } from \"./result.ts\";\n\nexport type Group<T> = {\n  readonly key: T;\n  readonly results: readonly Result[];\n};\n\nexport type KeyOf<T> = (result: Result) => T;\n\nconst layoutKey = (): KeyOf<Layout> => {\n  return ({ layout }) => layout;\n};\n\nconst layoutFamilyKey = (): KeyOf<string> => {\n  return ({ layout }) => layout.family;\n};\n\nconst dateKey = (): KeyOf<LocalDate> => {\n  let date = new LocalDate(0);\n  let next = new LocalDate(0);\n  return (result) => {\n    const { timeStamp } = result;\n    if (!(date.timeStamp <= timeStamp && timeStamp < next.timeStamp)) {\n      date = new LocalDate(timeStamp);\n      next = date.plusDays(1);\n    }\n    return date;\n  };\n};\n\nexport class ResultGroups<T> implements Iterable<Group<T>> {\n  static readonly byLayout = (results: Iterable<Result>) => {\n    return new ResultGroups(layoutKey()).addAll(results);\n  };\n\n  static readonly byLayoutFamily = (results: Iterable<Result>) => {\n    return new ResultGroups(layoutFamilyKey()).addAll(results);\n  };\n\n  static readonly byDate = (results: Iterable<Result>) => {\n    return new ResultGroups(dateKey()).addAll(results);\n  };\n\n  readonly #keyOf: KeyOf<T>;\n  readonly #map: Map<string, { readonly key: T; readonly results: Result[] }>;\n\n  constructor(keyOf: KeyOf<T>) {\n    this.#keyOf = keyOf;\n    this.#map = new Map();\n  }\n\n  [Symbol.iterator](): IterableIterator<Group<T>> {\n    return this.#map.values();\n  }\n\n  *keys(): IterableIterator<T> {\n    for (const { key } of this.#map.values()) {\n      yield key;\n    }\n  }\n\n  get(key: T): readonly Result[] {\n    return this.#getGroup(key).results;\n  }\n\n  add(result: Result) {\n    this.#getGroup(this.#keyOf(result)).results.push(result);\n    return this;\n  }\n\n  addAll(results: Iterable<Result>) {\n    for (const result of results) {\n      this.add(result);\n    }\n    return this;\n  }\n\n  #getGroup(key: T) {\n    const stringKey = String(key);\n    let group = this.#map.get(stringKey);\n    if (group == null) {\n      this.#map.set(stringKey, (group = { key, results: [] }));\n    }\n    return group;\n  }\n}\n","import { type Result } from \"./result.ts\";\n\nexport function makeSummaryStats(results: readonly Result[]): SummaryStats {\n  const stats = new MutableSummaryStats();\n  for (const result of results) {\n    stats.append(result);\n  }\n  return stats.copy();\n}\n\nexport type SummaryStats = {\n  /** The number of results. */\n  readonly count: number;\n  /** The total time of all results. */\n  readonly time: number;\n  /** The speed stats. */\n  readonly speed: Metric;\n  /** The accuracy stats. */\n  readonly accuracy: Metric;\n  /** The score stats. */\n  readonly score: Metric;\n};\n\nexport type Metric = {\n  /** The last value. */\n  readonly last: number;\n  /** The change in last value compared to average. */\n  readonly delta: number;\n  /** The minimal value seen so far. */\n  readonly min: number;\n  /** The maximal value seen so far. */\n  readonly max: number;\n  /** The average of all values seen so far. */\n  readonly avg: number;\n};\n\nexport class MutableSummaryStats implements SummaryStats {\n  #count = 0;\n  #time = 0;\n  readonly #speed = new MutableMetric();\n  readonly #accuracy = new MutableMetric();\n  readonly #score = new MutableMetric();\n\n  get count(): number {\n    return this.#count;\n  }\n\n  get time(): number {\n    return this.#time;\n  }\n\n  get speed(): MutableMetric {\n    return this.#speed;\n  }\n\n  get accuracy(): MutableMetric {\n    return this.#accuracy;\n  }\n\n  get score(): MutableMetric {\n    return this.#score;\n  }\n\n  append(result: Result) {\n    this.#count += 1;\n    this.#time += result.time;\n    this.#speed.append(result.speed);\n    this.#accuracy.append(result.accuracy);\n    this.#score.append(result.score);\n  }\n\n  copy(): SummaryStats {\n    return {\n      count: this.#count,\n      time: this.#time,\n      speed: this.#speed.copy(),\n      accuracy: this.#accuracy.copy(),\n      score: this.#score.copy(),\n    };\n  }\n}\n\nexport class MutableMetric implements Metric {\n  #last: number = 0;\n  #delta: number = 0;\n  #count: number = 0;\n  #sum: number = 0;\n  #min: number = 0;\n  #max: number = 0;\n  #avg: number = 0;\n\n  get last(): number {\n    return this.#last;\n  }\n\n  get delta(): number {\n    return this.#delta;\n  }\n\n  get min(): number {\n    return this.#min;\n  }\n\n  get max(): number {\n    return this.#max;\n  }\n\n  get avg(): number {\n    return this.#avg;\n  }\n\n  append(value: number): void {\n    this.#count += 1;\n    if (this.#count === 1) {\n      this.#last = value;\n      this.#delta = value;\n      this.#sum = value;\n      this.#min = value;\n      this.#max = value;\n      this.#avg = value;\n    } else {\n      this.#last = value;\n      this.#delta = value - this.#avg;\n      this.#sum += value;\n      this.#min = Math.min(this.#min, value);\n      this.#max = Math.max(this.#max, value);\n      this.#avg = this.#sum / this.#count;\n    }\n  }\n\n  copy(): Metric {\n    return {\n      last: this.#last,\n      delta: this.#delta,\n      min: this.#min,\n      max: this.#max,\n      avg: this.#avg,\n    };\n  }\n}\n","import { ResultGroups } from \"./group.ts\";\nimport { LocalDate } from \"./localdate.ts\";\nimport { type Result } from \"./result.ts\";\nimport { makeSummaryStats, type SummaryStats } from \"./summarystats.ts\";\n\nexport type DailyStats = {\n  readonly date: LocalDate;\n  readonly results: readonly Result[];\n  readonly stats: SummaryStats;\n};\n\nexport class DailyStatsMap implements Iterable<DailyStats> {\n  readonly #map = new Map<string, DailyStats>();\n  readonly #today: DailyStats;\n\n  constructor(results: readonly Result[], today: LocalDate = LocalDate.now()) {\n    const groups = ResultGroups.byDate(results);\n    for (const { key, results } of groups) {\n      this.#map.set(String(key), makeStats(key, results));\n    }\n    this.#today = this.#map.get(String(today)) ?? makeStats(today, []);\n  }\n\n  [Symbol.iterator](): IterableIterator<DailyStats> {\n    return this.#map.values();\n  }\n\n  has(date: LocalDate): boolean {\n    return this.#map.has(String(date));\n  }\n\n  get(date: LocalDate): DailyStats {\n    return this.#map.get(String(date)) ?? makeStats(date, []);\n  }\n\n  /** Summary stats for the results of today. May not exist in the iterated entries. */\n  get today(): DailyStats {\n    return this.#today;\n  }\n}\n\nfunction makeStats(date: LocalDate, results: readonly Result[]): DailyStats {\n  return { date, results, stats: makeSummaryStats(results) };\n}\n","export class InvalidResultError extends Error {\n  override name = \"InvalidResultError\";\n\n  constructor(message?: string, options?: ErrorOptions) {\n    super(message, options);\n  }\n\n  get [Symbol.toStringTag]() {\n    return \"InvalidResultError\";\n  }\n}\n","import { type Layout } from \"@keybr/keyboard\";\nimport { type Histogram, type Stats } from \"@keybr/textinput\";\nimport { type TextType } from \"./texttype.ts\";\n\nexport type Filter = {\n  readonly minLength: number;\n  readonly minTime: number;\n  readonly minComplexity: number;\n  readonly minSpeed: number;\n  readonly maxSpeed: number;\n};\n\nexport class Result {\n  static readonly filter = {\n    minLength: 10,\n    minTime: 1000,\n    minComplexity: 1,\n    minSpeed: 1,\n    maxSpeed: Infinity,\n  } as const satisfies Filter;\n\n  static fromStats(\n    layout: Layout,\n    textType: TextType,\n    timeStamp: number,\n    stats: Stats,\n  ): Result {\n    return new Result(\n      layout,\n      textType,\n      timeStamp,\n      stats.length,\n      stats.time,\n      stats.errors,\n      stats.histogram,\n    );\n  }\n\n  static readonly isValid = (result: Result): boolean => result.validate();\n\n  readonly complexity: number;\n  readonly speed: number;\n  readonly accuracy: number;\n  readonly score: number;\n\n  constructor(\n    readonly layout: Layout,\n    readonly textType: TextType,\n    readonly timeStamp: number,\n    readonly length: number,\n    readonly time: number,\n    readonly errors: number,\n    readonly histogram: Histogram,\n  ) {\n    const { complexity } = histogram;\n    let speed = 0;\n    let accuracy = 0;\n    let score = 0;\n    if (length > 0 && time > 0 && complexity > 0) {\n      speed = (length / (time / 1000)) * 60;\n      accuracy = (length - errors) / length;\n      score = ((speed * complexity) / (errors + 1)) * (length / 50);\n    }\n    this.complexity = complexity;\n    this.speed = speed;\n    this.accuracy = accuracy;\n    this.score = score;\n  }\n\n  validate({\n    minLength = Result.filter.minLength,\n    minTime = Result.filter.minTime,\n    minComplexity = Result.filter.minComplexity,\n    minSpeed = Result.filter.minSpeed,\n    maxSpeed = Result.filter.maxSpeed,\n  }: Partial<Filter> = {}): boolean {\n    return (\n      this.length >= minLength &&\n      this.time >= minTime &&\n      this.complexity >= minComplexity &&\n      this.speed >= minSpeed &&\n      this.speed <= maxSpeed &&\n      this.histogram.validate()\n    );\n  }\n\n  toJSON() {\n    return {\n      layout: this.layout.id,\n      textType: this.textType.id,\n      timeStamp: new Date(this.timeStamp),\n      length: this.length,\n      time: this.time,\n      errors: this.errors,\n      speed: this.speed,\n      histogram: [...this.histogram],\n    };\n  }\n}\n\n/**\n * Convert type-to-type in milliseconds to typing speed in characters per minute.\n * @param v Time-to-type in milliseconds.\n * @return Typing speed in characters per minute.\n */\nexport function timeToSpeed(v: number): number {\n  if (!Number.isFinite(v) || v === 0) {\n    throw new Error();\n  }\n  return (60 * 1000) / v;\n}\n\n/**\n * Convert typing speed in characters per minute to type-to-type in milliseconds.\n * @param v Typing speed in characters per minute.\n * @return Time-to-type in milliseconds.\n */\nexport function speedToTime(v: number): number {\n  if (!Number.isFinite(v) || v === 0) {\n    throw new Error();\n  }\n  return 1000 / (v / 60);\n}\n","import { XEnum, type XEnumItem } from \"@keybr/lang\";\n\nexport class TextType implements XEnumItem {\n  static readonly GENERATED = new TextType(\"generated\", 1);\n  static readonly NATURAL = new TextType(\"natural\", 2);\n  static readonly NUMBERS = new TextType(\"numbers\", 3);\n  static readonly CODE = new TextType(\"code\", 4);\n  static readonly ALL = new XEnum<TextType>(\n    TextType.GENERATED,\n    TextType.NATURAL,\n    TextType.NUMBERS,\n    TextType.CODE,\n  );\n\n  private constructor(\n    readonly id: string,\n    readonly xid: number,\n  ) {\n    Object.freeze(this);\n  }\n\n  toString() {\n    return this.id;\n  }\n\n  toJSON() {\n    return this.id;\n  }\n}\n","import { type Filter, makeFilter } from \"@keybr/math\";\nimport { type Letter } from \"@keybr/phonetic-model\";\nimport { type Result } from \"./result.ts\";\n\nexport function makeKeyStatsMap(\n  letters: readonly Letter[],\n  results: readonly Result[],\n): KeyStatsMap {\n  const map = new MutableKeyStatsMap(letters);\n  for (const result of results) {\n    map.append(result);\n  }\n  return map.copy();\n}\n\nexport type KeyStatsMap<T extends KeyStats = KeyStats> = {\n  readonly letters: readonly Letter[];\n  readonly results: readonly Result[];\n  get(letter: Letter): T;\n} & Iterable<T>;\n\nexport type KeyStats = {\n  readonly letter: Letter;\n  readonly samples: readonly KeySample[];\n  readonly timeToType: number | null;\n  readonly bestTimeToType: number | null;\n};\n\nexport type KeySample = {\n  readonly index: number;\n  readonly timeStamp: number;\n  readonly hitCount: number;\n  readonly missCount: number;\n  readonly timeToType: number;\n  readonly filteredTimeToType: number;\n};\n\nexport class MutableKeyStatsMap implements KeyStatsMap<MutableKeyStats> {\n  readonly #letters: Letter[];\n  readonly #results: Result[];\n  readonly #map: Map<Letter, MutableKeyStats>;\n\n  constructor(letters: readonly Letter[]) {\n    this.#letters = [...letters];\n    this.#results = [];\n    this.#map = new Map();\n    for (const letter of letters) {\n      this.#map.set(letter, new MutableKeyStats(letter));\n    }\n  }\n\n  get letters(): readonly Letter[] {\n    return this.#letters;\n  }\n\n  get results(): readonly Result[] {\n    return this.#results;\n  }\n\n  get(letter: Letter): MutableKeyStats {\n    return this.#map.get(letter)!;\n  }\n\n  [Symbol.iterator](): IterableIterator<MutableKeyStats> {\n    return this.#map.values();\n  }\n\n  append(result: Result) {\n    this.#results.push(result);\n    for (const item of this.#map.values()) {\n      item.append(result);\n    }\n  }\n\n  copy(): KeyStatsMap {\n    const letters = [...this.#letters];\n    const results = [...this.#results];\n    const map = new Map(\n      [...this.#map].map(([key, value]) => [key, value.copy()]),\n    );\n    return {\n      get letters(): readonly Letter[] {\n        return letters;\n      },\n      get results(): readonly Result[] {\n        return results;\n      },\n      get(letter): KeyStats {\n        return map.get(letter)!;\n      },\n      [Symbol.iterator](): IterableIterator<KeyStats> {\n        return map.values();\n      },\n    };\n  }\n}\n\nexport class MutableKeyStats implements KeyStats {\n  readonly #letter: Letter;\n  readonly #samples: KeySample[];\n  readonly #filter: Filter;\n  #index: number;\n  #timeToType: number | null;\n  #bestTimeToType: number | null;\n\n  constructor(letter: Letter) {\n    this.#letter = letter;\n    this.#samples = [];\n    this.#filter = makeFilter(0.1);\n    this.#index = 0;\n    this.#timeToType = null;\n    this.#bestTimeToType = null;\n  }\n\n  get letter(): Letter {\n    return this.#letter;\n  }\n\n  get samples(): readonly KeySample[] {\n    return this.#samples;\n  }\n\n  get timeToType(): number | null {\n    return this.#timeToType;\n  }\n\n  get bestTimeToType(): number | null {\n    return this.#bestTimeToType;\n  }\n\n  append(result: Result) {\n    const { timeStamp, histogram } = result;\n    const sample = histogram.get(this.#letter.codePoint);\n    if (sample != null) {\n      const { hitCount, missCount, timeToType } = sample;\n      if (timeToType > 0) {\n        const filteredTimeToType = this.#filter.add(timeToType);\n        this.#samples.push({\n          index: this.#index,\n          timeStamp,\n          hitCount,\n          missCount,\n          timeToType,\n          filteredTimeToType,\n        });\n        this.#timeToType = filteredTimeToType;\n        this.#bestTimeToType = Math.min(\n          this.#bestTimeToType ?? Infinity,\n          filteredTimeToType,\n        );\n      }\n    }\n    this.#index += 1;\n    return this;\n  }\n\n  copy(): KeyStats {\n    return {\n      letter: this.#letter,\n      samples: [...this.#samples],\n      timeToType: this.#timeToType,\n      bestTimeToType: this.#bestTimeToType,\n    };\n  }\n}\n","import { Histogram, validateSample } from \"@keybr/textinput\";\nimport { Result } from \"./result.ts\";\n\n/**\n * Fixes the validation errors in the given results, if possible.\n */\nexport function recoverResults(raw: readonly Result[]): Result[] {\n  const results: Result[] = [];\n  for (const result of raw) {\n    if (result.validate()) {\n      results.push(result);\n    } else {\n      const recovered = new Result(\n        result.layout,\n        result.textType,\n        result.timeStamp,\n        result.length,\n        result.time,\n        result.errors,\n        new Histogram([...result.histogram].filter(validateSample)),\n      );\n      if (recovered.validate()) {\n        results.push(recovered);\n      }\n    }\n  }\n  return results;\n}\n","import { Enum, type EnumItem } from \"@keybr/lang\";\nimport { defineMessage, type MessageDescriptor } from \"react-intl\";\n\nexport class SpeedUnit implements EnumItem {\n  static readonly WPM = new SpeedUnit(\n    \"wpm\",\n    1 / 5,\n    defineMessage({\n      id: \"speedUnit.wpm.name\",\n      defaultMessage: \"Words per minute\",\n    }),\n  );\n  static readonly WPS = new SpeedUnit(\n    \"wps\",\n    1 / 300,\n    defineMessage({\n      id: \"speedUnit.wps.name\",\n      defaultMessage: \"Words per second\",\n    }),\n  );\n  static readonly CPM = new SpeedUnit(\n    \"cpm\",\n    1,\n    defineMessage({\n      id: \"speedUnit.cpm.name\",\n      defaultMessage: \"Characters per minute\",\n    }),\n  );\n  static readonly CPS = new SpeedUnit(\n    \"cps\",\n    1 / 60,\n    defineMessage({\n      id: \"speedUnit.cps.name\",\n      defaultMessage: \"Characters per second\",\n    }),\n  );\n  static readonly ALL = new Enum<SpeedUnit>(\n    SpeedUnit.WPM,\n    SpeedUnit.WPS,\n    SpeedUnit.CPM,\n    SpeedUnit.CPS,\n  );\n\n  private constructor(\n    readonly id: string,\n    readonly factor: number,\n    readonly name: MessageDescriptor,\n  ) {\n    Object.freeze(this);\n  }\n\n  measure = (cpm: number): number => {\n    return cpm * this.factor;\n  };\n\n  toString() {\n    return this.id;\n  }\n\n  toJSON() {\n    return this.id;\n  }\n}\n","import { itemProp } from \"@keybr/settings\";\nimport { SpeedUnit } from \"./speedunit.ts\";\n\nexport const uiProps = {\n  speedUnit: itemProp(\"ui.speedUnit\", SpeedUnit.ALL, SpeedUnit.WPM),\n} as const;\n","import { type CodePoint, toCodePoints } from \"@keybr/unicode\";\n\nexport type StyledText = string | StyledTextSpan | readonly StyledText[];\n\nexport type StyledTextSpan = { readonly text: string; readonly cls: string };\n\nexport const enum Attr {\n  Normal = 0,\n  Hit = 1,\n  Miss = 2,\n  Garbage = 4,\n  Cursor = 8,\n}\n\nexport type Char = {\n  readonly codePoint: CodePoint;\n  readonly attrs: number;\n  readonly cls?: string | null;\n};\n\nexport type Line = {\n  readonly text: string;\n  readonly chars: readonly Char[];\n};\n\nexport type LineList<T extends Line = Line> = {\n  readonly text: string;\n  readonly lines: readonly T[];\n};\n\nexport function flattenStyledText(text: StyledText): string {\n  const list: Array<string> = [];\n  if (Array.isArray(text)) {\n    for (const item of text) {\n      list.push(flattenStyledText(item));\n    }\n  } else if (typeof text === \"string\") {\n    list.push(text);\n  } else if (isStyledTextSpan(text)) {\n    list.push(text.text);\n  } else {\n    throw new TypeError();\n  }\n  return list.join(\"\");\n}\n\nexport function splitStyledText(\n  text: StyledText,\n  attrs: Attr = Attr.Normal,\n): Char[] {\n  const list: Array<Char> = [];\n  if (Array.isArray(text)) {\n    for (const item of text) {\n      list.push(...splitStyledText(item));\n    }\n  } else if (typeof text === \"string\") {\n    list.push(\n      ...[...toCodePoints(text)].map((codePoint) => ({\n        codePoint,\n        cls: null,\n        attrs,\n      })),\n    );\n  } else if (isStyledTextSpan(text)) {\n    list.push(\n      ...[...toCodePoints(text.text)].map((codePoint) => ({\n        codePoint,\n        cls: text.cls,\n        attrs,\n      })),\n    );\n  } else {\n    throw new TypeError();\n  }\n  return list;\n}\n\nexport function isStyledTextSpan(v: unknown): v is StyledTextSpan {\n  return v != null && typeof v === \"object\" && \"text\" in v;\n}\n\nexport function charsAreEqual(a: Char, b: Char): boolean {\n  if (a !== b) {\n    if (a.codePoint !== b.codePoint) {\n      return false;\n    }\n    if (a.attrs !== b.attrs) {\n      return false;\n    }\n    if (a.cls !== b.cls) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function charArraysAreEqual(\n  a: readonly Char[],\n  b: readonly Char[],\n): boolean {\n  if (a !== b) {\n    const { length } = a;\n    if (length !== b.length) {\n      return false;\n    }\n    for (let i = 0; i < length; i++) {\n      const x = a[i];\n      const y = b[i];\n      if (!charsAreEqual(x, y)) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nexport function toLine(styledText: StyledText): Line {\n  const text = flattenStyledText(styledText);\n  const chars = splitStyledText(styledText);\n  return { text, chars };\n}\n\nexport function singleLine(styledText: StyledText): LineList {\n  const text = flattenStyledText(styledText);\n  const chars = splitStyledText(styledText);\n  return { text, lines: [{ text, chars }] };\n}\n","import { type CSSProperties } from \"react\";\n\nexport type FontWeight = \"100\" | \"200\" | \"300\" | \"400\" | \"500\" | \"600\" | \"700\" | \"800\" | \"900\";\nexport type FontStyle = \"normal\" | \"italic\";\nexport type Fallback = \"cursive\" | \"fantasy\" | \"monospace\" | \"sans-serif\" | \"serif\" | \"whitespace\" | string;\nexport type Script = \"arabic\" | \"cyrillic\" | \"greek\" | \"hebrew\" | \"latin\" | \"thai\";\n\nexport class FontFace {\n  readonly family: string;\n  readonly weight: FontWeight;\n  readonly style: FontStyle;\n  readonly fallbacks: readonly Fallback[];\n  readonly scripts: readonly Script[];\n  readonly name: string;\n  readonly cssProperties: CSSProperties;\n\n  constructor(\n    family: string,\n    weight: FontWeight,\n    style: FontStyle,\n    fallbacks: readonly Fallback[],\n    scripts: readonly Script[],\n  ) {\n    this.family = family;\n    this.weight = weight;\n    this.style = style;\n    this.fallbacks = fallbacks;\n    this.scripts = scripts;\n    this.name = fontName(family, weight, style);\n    this.cssProperties = {\n      fontFamily: [family, ...fallbacks].join(\",\"),\n      fontWeight: weight,\n      fontStyle: style,\n    };\n  }\n}\n\nconst cl = [\"cyrillic\", \"latin\"] as const satisfies Script[];\nconst cgl = [\"cyrillic\", \"greek\", \"latin\"] as const satisfies Script[];\nconst cghl = [\"cyrillic\", \"greek\", \"hebrew\", \"latin\"] as const satisfies Script[];\nconst achl = [\"arabic\", \"cyrillic\", \"hebrew\", \"latin\"] as const satisfies Script[];\nconst acghlt = [\"arabic\", \"cyrillic\", \"greek\", \"hebrew\", \"latin\", \"thai\"] as const satisfies Script[];\n\nexport const ARAD = new FontFace(\"Arad\", \"400\", \"normal\", [\"whitespace\"], [\"arabic\"]);\nexport const ARAD_B = new FontFace(\"Arad\", \"700\", \"normal\", [\"whitespace\"], [\"arabic\"]);\nexport const CORMORANT = new FontFace(\"Cormorant\", \"400\", \"normal\", [\"serif\"], cl);\nexport const CORMORANT_I = new FontFace(\"Cormorant\", \"400\", \"italic\", [\"serif\"], cl);\nexport const CORMORANT_B = new FontFace(\"Cormorant\", \"700\", \"normal\", [\"serif\"], cl);\nexport const CORMORANT_BI = new FontFace(\"Cormorant\", \"700\", \"italic\", [\"serif\"], cl);\nexport const NEWSREADER = new FontFace(\"Newsreader\", \"400\", \"normal\", [\"serif\"], [\"latin\"]);\nexport const NEWSREADER_I = new FontFace(\"Newsreader\", \"400\", \"italic\", [\"serif\"], [\"latin\"]);\nexport const NEWSREADER_B = new FontFace(\"Newsreader\", \"700\", \"normal\", [\"serif\"], [\"latin\"]);\nexport const NEWSREADER_BI = new FontFace(\"Newsreader\", \"700\", \"italic\", [\"serif\"], [\"latin\"]);\nexport const NUNITO = new FontFace(\"Nunito\", \"400\", \"normal\", [\"sans-serif\"], cl);\nexport const NUNITO_I = new FontFace(\"Nunito\", \"400\", \"italic\", [\"sans-serif\"], cl);\nexport const NUNITO_B = new FontFace(\"Nunito\", \"700\", \"normal\", [\"sans-serif\"], cl);\nexport const NUNITO_BI = new FontFace(\"Nunito\", \"700\", \"italic\", [\"sans-serif\"], cl);\nexport const OPEN_DYSLEXIC = new FontFace(\"Open Dyslexic\", \"400\", \"normal\", [\"sans-serif\"], cgl);\nexport const OPEN_DYSLEXIC_I = new FontFace(\"Open Dyslexic\", \"400\", \"italic\", [\"sans-serif\"], cgl);\nexport const OPEN_DYSLEXIC_B = new FontFace(\"Open Dyslexic\", \"700\", \"normal\", [\"sans-serif\"], cgl);\nexport const OPEN_DYSLEXIC_BI = new FontFace(\"Open Dyslexic\", \"700\", \"italic\", [\"sans-serif\"], cgl);\nexport const OPEN_SANS = new FontFace(\"Open Sans\", \"400\", \"normal\", [\"sans-serif\"], cghl);\nexport const OPEN_SANS_I = new FontFace(\"Open Sans\", \"400\", \"italic\", [\"sans-serif\"], cghl);\nexport const OPEN_SANS_B = new FontFace(\"Open Sans\", \"700\", \"normal\", [\"sans-serif\"], cghl);\nexport const OPEN_SANS_BI = new FontFace(\"Open Sans\", \"700\", \"italic\", [\"sans-serif\"], cghl);\nexport const ROBOTO = new FontFace(\"Roboto\", \"400\", \"normal\", [\"sans-serif\"], cgl);\nexport const ROBOTO_I = new FontFace(\"Roboto\", \"400\", \"italic\", [\"sans-serif\"], cgl);\nexport const ROBOTO_B = new FontFace(\"Roboto\", \"700\", \"normal\", [\"sans-serif\"], cgl);\nexport const ROBOTO_BI = new FontFace(\"Roboto\", \"700\", \"italic\", [\"sans-serif\"], cgl);\nexport const ROBOTO_MONO = new FontFace(\"Roboto Mono\", \"400\", \"normal\", [\"monospace\"], cgl);\nexport const ROBOTO_MONO_I = new FontFace(\"Roboto Mono\", \"400\", \"italic\", [\"monospace\"], cgl);\nexport const ROBOTO_MONO_B = new FontFace(\"Roboto Mono\", \"700\", \"normal\", [\"monospace\"], cgl);\nexport const ROBOTO_MONO_BI = new FontFace(\"Roboto Mono\", \"700\", \"italic\", [\"monospace\"], cgl);\nexport const RUBIK = new FontFace(\"Rubik\", \"400\", \"normal\", [\"sans-serif\"], achl);\nexport const RUBIK_I = new FontFace(\"Rubik\", \"400\", \"italic\", [\"sans-serif\"], achl);\nexport const RUBIK_B = new FontFace(\"Rubik\", \"700\", \"normal\", [\"sans-serif\"], achl);\nexport const RUBIK_BI = new FontFace(\"Rubik\", \"700\", \"italic\", [\"sans-serif\"], achl);\nexport const SHANTELL_SANS = new FontFace(\"Shantell Sans\", \"400\", \"normal\", [\"serif\"], cl);\nexport const SHANTELL_SANS_I = new FontFace(\"Shantell Sans\", \"400\", \"italic\", [\"serif\"], cl);\nexport const SHANTELL_SANS_B = new FontFace(\"Shantell Sans\", \"700\", \"normal\", [\"serif\"], cl);\nexport const SHANTELL_SANS_BI = new FontFace(\"Shantell Sans\", \"700\", \"italic\", [\"serif\"], cl);\nexport const SPECTRAL = new FontFace(\"Spectral\", \"400\", \"normal\", [\"serif\"], cl);\nexport const SPECTRAL_I = new FontFace(\"Spectral\", \"400\", \"italic\", [\"serif\"], cl);\nexport const SPECTRAL_B = new FontFace(\"Spectral\", \"700\", \"normal\", [\"serif\"], cl);\nexport const SPECTRAL_BI = new FontFace(\"Spectral\", \"700\", \"italic\", [\"serif\"], cl);\nexport const UBUNTU = new FontFace(\"Ubuntu\", \"400\", \"normal\", [\"sans-serif\"], cgl);\nexport const UBUNTU_I = new FontFace(\"Ubuntu\", \"400\", \"italic\", [\"sans-serif\"], cgl);\nexport const UBUNTU_B = new FontFace(\"Ubuntu\", \"700\", \"normal\", [\"sans-serif\"], cgl);\nexport const UBUNTU_BI = new FontFace(\"Ubuntu\", \"700\", \"italic\", [\"sans-serif\"], cgl);\nexport const UBUNTU_MONO = new FontFace(\"Ubuntu Mono\", \"400\", \"normal\", [\"monospace\"], cgl);\nexport const UBUNTU_MONO_I = new FontFace(\"Ubuntu Mono\", \"400\", \"italic\", [\"monospace\"], cgl);\nexport const UBUNTU_MONO_B = new FontFace(\"Ubuntu Mono\", \"700\", \"normal\", [\"monospace\"], cgl);\nexport const UBUNTU_MONO_BI = new FontFace(\"Ubuntu Mono\", \"700\", \"italic\", [\"monospace\"], cgl);\nexport const SERIF = new FontFace(\"serif\", \"400\", \"normal\", [\"whitespace\"], acghlt);\nexport const SERIF_I = new FontFace(\"serif\", \"400\", \"italic\", [\"whitespace\"], acghlt);\nexport const SERIF_B = new FontFace(\"serif\", \"700\", \"normal\", [\"whitespace\"], acghlt);\nexport const SERIF_BI = new FontFace(\"serif\", \"700\", \"italic\", [\"whitespace\"], acghlt);\nexport const SANS_SERIF = new FontFace(\"sans-serif\", \"400\", \"normal\", [\"whitespace\"], acghlt);\nexport const SANS_SERIF_I = new FontFace(\"sans-serif\", \"400\", \"italic\", [\"whitespace\"], acghlt);\nexport const SANS_SERIF_B = new FontFace(\"sans-serif\", \"700\", \"normal\", [\"whitespace\"], acghlt);\nexport const SANS_SERIF_BI = new FontFace(\"sans-serif\", \"700\", \"italic\", [\"whitespace\"], acghlt);\nexport const MONOSPACE = new FontFace(\"monospace\", \"400\", \"normal\", [\"whitespace\"], acghlt);\nexport const MONOSPACE_I = new FontFace(\"monospace\", \"400\", \"italic\", [\"whitespace\"], acghlt);\nexport const MONOSPACE_B = new FontFace(\"monospace\", \"700\", \"normal\", [\"whitespace\"], acghlt);\nexport const MONOSPACE_BI = new FontFace(\"monospace\", \"700\", \"italic\", [\"whitespace\"], acghlt);\nexport const CURSIVE = new FontFace(\"cursive\", \"400\", \"normal\", [\"whitespace\"], acghlt);\nexport const CURSIVE_I = new FontFace(\"cursive\", \"400\", \"italic\", [\"whitespace\"], acghlt);\nexport const CURSIVE_B = new FontFace(\"cursive\", \"700\", \"normal\", [\"whitespace\"], acghlt);\nexport const CURSIVE_BI = new FontFace(\"cursive\", \"700\", \"italic\", [\"whitespace\"], acghlt);\n\nexport const FONTS_FACES: readonly FontFace[] = [\n  ARAD,\n  ARAD_B,\n  CORMORANT,\n  CORMORANT_I,\n  CORMORANT_B,\n  CORMORANT_BI,\n  NEWSREADER,\n  NEWSREADER_I,\n  NEWSREADER_B,\n  NEWSREADER_BI,\n  NUNITO,\n  NUNITO_I,\n  NUNITO_B,\n  NUNITO_BI,\n  OPEN_SANS,\n  OPEN_SANS_I,\n  OPEN_SANS_B,\n  OPEN_SANS_BI,\n  ROBOTO,\n  ROBOTO_I,\n  ROBOTO_B,\n  ROBOTO_BI,\n  ROBOTO_MONO,\n  ROBOTO_MONO_I,\n  ROBOTO_MONO_B,\n  ROBOTO_MONO_BI,\n  RUBIK,\n  RUBIK_I,\n  RUBIK_B,\n  RUBIK_BI,\n  SHANTELL_SANS,\n  SHANTELL_SANS_I,\n  SHANTELL_SANS_B,\n  SHANTELL_SANS_BI,\n  SPECTRAL,\n  SPECTRAL_I,\n  SPECTRAL_B,\n  SPECTRAL_BI,\n  UBUNTU,\n  UBUNTU_I,\n  UBUNTU_B,\n  UBUNTU_BI,\n  UBUNTU_MONO,\n  UBUNTU_MONO_I,\n  UBUNTU_MONO_B,\n  UBUNTU_MONO_BI,\n  SERIF,\n  SERIF_I,\n  SERIF_B,\n  SERIF_BI,\n  SANS_SERIF,\n  SANS_SERIF_I,\n  SANS_SERIF_B,\n  SANS_SERIF_BI,\n  MONOSPACE,\n  MONOSPACE_I,\n  MONOSPACE_B,\n  MONOSPACE_BI,\n  CURSIVE,\n  CURSIVE_I,\n  CURSIVE_B,\n  CURSIVE_BI,\n  OPEN_DYSLEXIC,\n  OPEN_DYSLEXIC_I,\n  OPEN_DYSLEXIC_B,\n  OPEN_DYSLEXIC_BI,\n];\n\nfunction fontName(family: string, weight: FontWeight, style: FontStyle): string {\n  let w = \"Regular\";\n  switch (weight) {\n    case \"100\":\n      w = \"Thin\";\n      break;\n    case \"200\":\n      w = \"Extra Light\";\n      break;\n    case \"300\":\n      w = \"Light\";\n      break;\n    case \"400\":\n      w = \"Regular\";\n      break;\n    case \"500\":\n      w = \"Medium\";\n      break;\n    case \"600\":\n      w = \"Semi Bold\";\n      break;\n    case \"700\":\n      w = \"Bold\";\n      break;\n    case \"800\":\n      w = \"Extra Bold\";\n      break;\n    case \"900\":\n      w = \"Black\";\n      break;\n  }\n  let s = \"Regular\";\n  switch (style) {\n    case \"normal\":\n      s = \"Regular\";\n      break;\n    case \"italic\":\n      s = \"Italic\";\n      break;\n  }\n  if (w === \"Regular\" && s === \"Regular\") {\n    return `${family}`;\n  }\n  if (w === \"Regular\") {\n    return `${family} (${s})`;\n  }\n  if (s === \"Regular\") {\n    return `${family} (${w})`;\n  }\n  return `${family} (${w} ${s})`;\n}\n","import { type Language } from \"@keybr/keyboard\";\nimport { Enum, type EnumItem } from \"@keybr/lang\";\nimport {\n  type FontFace,\n  FONTS_FACES,\n  type Script,\n  UBUNTU_MONO,\n} from \"@keybr/themes\";\nimport { type CSSProperties } from \"react\";\n\nexport class Font implements EnumItem {\n  static readonly ALL = new Enum<Font>(\n    ...FONTS_FACES.map((fontFace) => new Font(fontFace)),\n  );\n\n  static get default() {\n    return (\n      Font.ALL.find(({ name }) => name === UBUNTU_MONO.name) ?? Font.ALL.at(0)\n    );\n  }\n\n  static select(language: Language) {\n    return new Enum(\n      ...Font.ALL.filter((font) => font.scripts.includes(language.script)),\n    );\n  }\n\n  static find(fonts: Enum<Font>, font: Font) {\n    return fonts.has(font) ? font : fonts.at(0);\n  }\n\n  readonly id: string;\n  readonly name: string;\n  readonly scripts: readonly Script[];\n  readonly cssProperties: CSSProperties;\n\n  private constructor(fontFace: FontFace) {\n    this.id = `${fontFace.family}-${fontFace.weight}-${fontFace.style}`;\n    this.name = fontFace.name;\n    this.scripts = fontFace.scripts;\n    this.cssProperties = Object.freeze({ ...fontFace.cssProperties });\n    Object.freeze(this);\n  }\n\n  toString() {\n    return this.id;\n  }\n\n  toJSON() {\n    return this.id;\n  }\n}\n","import { type CodePoint } from \"@keybr/unicode\";\nimport { type Step } from \"./textinput.ts\";\n\nexport type Sample = {\n  readonly codePoint: CodePoint;\n  readonly hitCount: number;\n  readonly missCount: number;\n  readonly timeToType: number;\n};\n\nexport class Histogram implements Iterable<Sample> {\n  static readonly empty = Histogram.from([]);\n\n  readonly #data: Map<CodePoint, Sample>;\n\n  constructor(samples: readonly Sample[]) {\n    this.#data = new Map(\n      Array.from(samples)\n        .sort((a, b) => a.codePoint - b.codePoint)\n        .map((sample) => [sample.codePoint, sample]),\n    );\n  }\n\n  [Symbol.iterator](): IterableIterator<Sample> {\n    return this.#data.values();\n  }\n\n  get complexity(): number {\n    return this.#data.size;\n  }\n\n  has(codePoint: CodePoint): boolean {\n    return this.#data.has(codePoint);\n  }\n\n  get(codePoint: CodePoint): Sample | null {\n    return this.#data.get(codePoint) ?? null;\n  }\n\n  validate(): boolean {\n    if (this.#data.size < 3) {\n      return false; // Too few characters.\n    }\n    for (const sample of this.#data.values()) {\n      if (!validateSample(sample)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  static from(steps: readonly Step[]): Histogram {\n    const samples = new Map<\n      CodePoint,\n      {\n        hitCount: number;\n        missCount: number;\n        time: number;\n        count: number;\n      }\n    >();\n    for (const { codePoint, timeToType, typo } of steps) {\n      let sample = samples.get(codePoint);\n      if (sample == null) {\n        samples.set(\n          codePoint,\n          (sample = {\n            hitCount: 0,\n            missCount: 0,\n            time: 0,\n            count: 0,\n          }),\n        );\n      }\n      sample.hitCount += 1;\n      if (typo) {\n        sample.missCount += 1;\n      } else if (timeToType > 0) {\n        sample.time += timeToType;\n        sample.count += 1;\n      }\n    }\n    return new Histogram(\n      [...samples.entries()]\n        .map(([codePoint, { hitCount, missCount, time, count }]) => ({\n          codePoint,\n          hitCount,\n          missCount,\n          timeToType: time > 0 && count > 0 ? Math.round(time / count) : 0,\n        }))\n        .filter(validateSample),\n    );\n  }\n}\n\nexport function validateSample({ timeToType }: Sample): boolean {\n  if (timeToType > 0) {\n    if (timeToType < /* 300WPM/1500CPM */ 40) {\n      return false; // Too fast.\n    }\n    if (timeToType > /* 1WPM/5CPM */ 12000) {\n      return false; // Too slow.\n    }\n  }\n  return true;\n}\n","import { KeyboardOptions, Language } from \"@keybr/keyboard\";\nimport {\n  booleanProp,\n  enumProp,\n  itemProp,\n  type Settings,\n} from \"@keybr/settings\";\nimport { Font } from \"./font.ts\";\n\n/**\n * Text input settings.\n */\nexport type TextInputSettings = {\n  /**\n   * If enabled then text input stops advancing until the right key\n   * at the cursor position is pressed, no delete key is used.\n   * If disabled all errors will be accumulated in the garbage field\n   * and must be cleared with the delete key.\n   */\n  readonly stopOnError: boolean;\n  /**\n   * Enabling this option makes text input forgive some kind of errors,\n   * like typing a wrong character or skipping a character.\n   */\n  readonly forgiveErrors: boolean;\n  /**\n   * If enabled then the space key skips all characters of a current word\n   * to the first character of a next word.\n   */\n  readonly spaceSkipsWords: boolean;\n};\n\nexport const textInputSettings = {\n  stopOnError: true,\n  forgiveErrors: true,\n  spaceSkipsWords: true,\n} as const satisfies TextInputSettings;\n\nexport const textInputProps = {\n  stopOnError: booleanProp(\"textInput.stopOnError\", true),\n  forgiveErrors: booleanProp(\"textInput.forgiveErrors\", true),\n  spaceSkipsWords: booleanProp(\"textInput.spaceSkipsWords\", false),\n} as const;\n\nexport function toTextInputSettings(settings: Settings): TextInputSettings {\n  return {\n    stopOnError: settings.get(textInputProps.stopOnError),\n    forgiveErrors: settings.get(textInputProps.forgiveErrors),\n    spaceSkipsWords: settings.get(textInputProps.spaceSkipsWords),\n  };\n}\n\nexport type TextDisplaySettings = {\n  readonly font: Font;\n  readonly caretShapeStyle: CaretShapeStyle;\n  readonly caretMovementStyle: CaretMovementStyle;\n  readonly whitespaceStyle: WhitespaceStyle;\n  readonly language: Language;\n};\n\nexport enum CaretShapeStyle {\n  Block = 1,\n  Box = 2,\n  Line = 3,\n  Underline = 4,\n}\n\nexport enum CaretMovementStyle {\n  Jumping = 1,\n  Smooth = 2,\n}\n\nexport enum WhitespaceStyle {\n  Space = 1,\n  Bar = 2,\n  Bullet = 3,\n}\n\nexport const textDisplaySettings = {\n  font: Font.default,\n  caretShapeStyle: CaretShapeStyle.Underline,\n  caretMovementStyle: CaretMovementStyle.Smooth,\n  whitespaceStyle: WhitespaceStyle.Bullet,\n  language: Language.EN,\n} as const satisfies TextDisplaySettings;\n\nexport const textDisplayProps = {\n  font: itemProp(\"textDisplay.font\", Font.ALL, Font.default),\n  caretShapeStyle: enumProp(\n    \"textDisplay.caretShapeStyle\",\n    CaretShapeStyle,\n    CaretShapeStyle.Underline,\n  ),\n  caretMovementStyle: enumProp(\n    \"textDisplay.caretMovementStyle\",\n    CaretMovementStyle,\n    CaretMovementStyle.Smooth,\n  ),\n  whitespaceStyle: enumProp(\n    \"textDisplay.whitespaceStyle\",\n    WhitespaceStyle,\n    WhitespaceStyle.Bullet,\n  ),\n} as const;\n\nexport function toTextDisplaySettings(settings: Settings): TextDisplaySettings {\n  const caretShapeStyle = settings.get(textDisplayProps.caretShapeStyle);\n  const caretMovementStyle = settings.get(textDisplayProps.caretMovementStyle);\n  const whitespaceStyle = settings.get(textDisplayProps.whitespaceStyle);\n  const { language } = KeyboardOptions.from(settings);\n  const fonts = Font.select(language);\n  const font = Font.find(fonts, settings.get(textDisplayProps.font));\n  return {\n    font,\n    caretShapeStyle,\n    caretMovementStyle,\n    whitespaceStyle,\n    language,\n  };\n}\n","import { Histogram } from \"./histogram.ts\";\nimport { type Step } from \"./textinput.ts\";\n\nexport type Stats = {\n  readonly time: number;\n  readonly speed: number;\n  readonly length: number;\n  readonly errors: number;\n  readonly accuracy: number;\n  readonly histogram: Histogram;\n};\n\nexport function makeStats(steps: readonly Step[]): Stats {\n  if (steps.length >= 2) {\n    const { timeStamp: startedAt } = steps.at(0)!;\n    const { timeStamp: endedAt } = steps.at(-1)!;\n    const { length } = steps;\n    const time = Math.round(endedAt - startedAt);\n    const speed = computeSpeed(length, time);\n    const errors = countErrors(steps);\n    const accuracy = (length - errors) / length;\n    return {\n      time,\n      speed,\n      length,\n      errors,\n      accuracy,\n      histogram: Histogram.from(steps.slice(1)), // The trigger step is ignored.\n    };\n  } else {\n    return {\n      time: 0,\n      speed: 0,\n      length: 0,\n      errors: 0,\n      accuracy: 0,\n      histogram: Histogram.empty,\n    };\n  }\n}\n\nexport function countErrors(steps: readonly Step[]): number {\n  let errors = 0;\n  for (const item of steps) {\n    if (item.typo) {\n      errors += 1;\n    }\n  }\n  return errors;\n}\n\nexport function computeSpeed(length: number, time: number): number {\n  return time > 0 ? (length / (time / 1000)) * 60 : 0;\n}\n","import { filterText } from \"@keybr/keyboard\";\nimport { type CodePoint } from \"@keybr/unicode\";\nimport {\n  Attr,\n  type Char,\n  flattenStyledText,\n  type LineList,\n  splitStyledText,\n  type StyledText,\n} from \"./chars.ts\";\nimport { type TextInputSettings } from \"./settings.ts\";\n\nexport enum Feedback {\n  Succeeded,\n  Recovered,\n  Failed,\n}\n\nexport type Step = {\n  readonly timeStamp: number;\n  readonly codePoint: CodePoint;\n  readonly timeToType: number;\n  readonly typo: boolean;\n};\n\nexport type StepListener = (step: Step) => void;\n\nconst recoverBufferLength = 3;\nconst garbageBufferLength = 10;\n\nexport class TextInput {\n  readonly text: StyledText;\n  readonly stopOnError: boolean;\n  readonly forgiveErrors: boolean;\n  readonly spaceSkipsWords: boolean;\n  readonly onStep: StepListener;\n  readonly #text: string;\n  readonly #chars: readonly Char[];\n  #steps: (Step & { readonly char: Char })[] = [];\n  #garbage: (Step & { readonly char: Char })[] = [];\n  #typo!: boolean;\n  #output!: { chars: Char[]; lines: LineList; remaining: Char[] };\n\n  constructor(\n    text: StyledText,\n    { stopOnError, forgiveErrors, spaceSkipsWords }: TextInputSettings,\n    onStep: StepListener = () => {},\n  ) {\n    this.text = text;\n    this.stopOnError = stopOnError;\n    this.forgiveErrors = forgiveErrors;\n    this.spaceSkipsWords = spaceSkipsWords;\n    this.onStep = onStep;\n    this.#text = flattenStyledText(text);\n    this.#chars = splitStyledText(text);\n    this.reset();\n  }\n\n  reset(): void {\n    this.#steps = [];\n    this.#garbage = [];\n    this.#typo = false;\n    this.#update();\n  }\n\n  get length(): number {\n    return this.#chars.length;\n  }\n\n  at(index: number): Char {\n    return this.#chars.at(index)!;\n  }\n\n  get pos(): number {\n    return this.#steps.length;\n  }\n\n  get completed(): boolean {\n    return this.pos === this.length;\n  }\n\n  get steps(): readonly Step[] {\n    return this.#steps;\n  }\n\n  get chars(): readonly Char[] {\n    return this.#output.chars;\n  }\n\n  get lines(): LineList {\n    return this.#output.lines;\n  }\n\n  get remaining(): readonly Char[] {\n    return this.#output.remaining;\n  }\n\n  onInput({\n    timeStamp,\n    inputType,\n    codePoint,\n    timeToType,\n  }: {\n    readonly timeStamp: number;\n    readonly inputType:\n      | \"appendChar\"\n      | \"appendLineBreak\"\n      | \"clearChar\"\n      | \"clearWord\";\n    readonly codePoint: CodePoint;\n    readonly timeToType: number;\n  }): Feedback {\n    switch (inputType) {\n      case \"appendChar\":\n        return this.appendChar(timeStamp, codePoint, timeToType);\n      case \"appendLineBreak\":\n        return this.appendChar(timeStamp, 0x0020, timeToType);\n      case \"clearChar\":\n        return this.clearChar();\n      case \"clearWord\":\n        return this.clearWord();\n    }\n  }\n\n  clearChar(): Feedback {\n    this.#garbage.pop();\n    this.#typo = true;\n    return this.#return(Feedback.Succeeded);\n  }\n\n  clearWord(): Feedback {\n    this.#garbage = [];\n    while (this.pos > 0 && this.at(this.pos - 1).codePoint !== 0x0020) {\n      this.#steps.pop();\n    }\n    this.#typo = true;\n    return this.#return(Feedback.Succeeded);\n  }\n\n  appendChar(\n    timeStamp: number,\n    codePoint: CodePoint,\n    timeToType: number,\n  ): Feedback {\n    if (this.completed) {\n      throw new Error();\n    }\n\n    const { codePoint: expected } = this.at(this.pos);\n\n    if (expected !== 0x0020 && codePoint === 0x0020) {\n      if (\n        this.spaceSkipsWords &&\n        ((this.pos > 0 && this.at(this.pos - 1).codePoint !== 0x0020) ||\n          this.#typo)\n      ) {\n        this.#skipWord(timeStamp);\n        return this.#return(Feedback.Recovered);\n      }\n      if (this.#garbage.length === 0 && !this.#typo) {\n        return this.#return(Feedback.Succeeded);\n      }\n    }\n\n    if (\n      (expected === codePoint ||\n        filterText.normalize(expected) === codePoint) &&\n      (this.forgiveErrors || this.#garbage.length === 0)\n    ) {\n      const typo = this.#typo;\n      this.#addStep(\n        {\n          timeStamp,\n          codePoint,\n          timeToType,\n          typo,\n        },\n        this.at(this.pos),\n      );\n      this.#garbage = [];\n      this.#typo = false;\n      if (typo) {\n        return this.#return(Feedback.Recovered);\n      } else {\n        return this.#return(Feedback.Succeeded);\n      }\n    }\n\n    this.#typo = true;\n    if (!this.stopOnError || this.forgiveErrors) {\n      if (this.#garbage.length < garbageBufferLength) {\n        this.#garbage.push({\n          char: {\n            codePoint,\n            attrs: Attr.Garbage,\n            cls: null,\n          },\n          timeStamp,\n          codePoint,\n          timeToType,\n          typo: false,\n        });\n      }\n    }\n    if (\n      this.forgiveErrors &&\n      (this.#handleReplacedCharacter() || this.#handleSkippedCharacter())\n    ) {\n      return this.#return(Feedback.Recovered);\n    } else {\n      return this.#return(Feedback.Failed);\n    }\n  }\n\n  #return(feedback: Feedback): Feedback {\n    this.#update();\n    return feedback;\n  }\n\n  #update(): void {\n    const text = this.#text;\n    const remaining = this.#chars.slice(this.pos);\n    const chars = [];\n    chars.push(...this.#steps.map(({ char }) => char));\n    if (!this.stopOnError) {\n      chars.push(...this.#garbage.map(({ char }) => char));\n    }\n    if (remaining.length > 0) {\n      const [head, ...tail] = remaining;\n      chars.push({ ...head, attrs: Attr.Cursor }, ...tail);\n    }\n    const lines = { text, lines: [{ text, chars }] };\n    this.#output = { chars, lines, remaining };\n  }\n\n  #addStep(step: Step, char: Char): void {\n    const attrs = step.typo ? Attr.Miss : Attr.Hit;\n    this.#steps.push({ ...step, char: { ...char, attrs } });\n    this.onStep(step);\n  }\n\n  #skipWord(timeStamp: number): void {\n    // Skip the remaining non-space characters inside the word.\n    while (this.pos < this.length && this.at(this.pos).codePoint !== 0x0020) {\n      this.#addStep(\n        {\n          timeStamp,\n          codePoint: this.at(this.pos).codePoint,\n          timeToType: 0,\n          typo: true,\n        },\n        this.at(this.pos),\n      );\n    }\n    // Skip the space character to position at the beginning of the next word.\n    if (this.pos < this.length && this.at(this.pos).codePoint === 0x0020) {\n      this.#addStep(\n        {\n          timeStamp,\n          codePoint: this.at(this.pos).codePoint,\n          timeToType: 0,\n          typo: false,\n        },\n        this.at(this.pos),\n      );\n    }\n    this.#garbage = [];\n    this.#typo = false;\n  }\n\n  #handleReplacedCharacter(): boolean {\n    // text:    abcd\n    // garbage: xbcd\n    // offset:  0\n\n    // Check if the buffer size is right.\n    if (\n      this.pos + recoverBufferLength + 1 > this.length ||\n      this.#garbage.length < recoverBufferLength + 1\n    ) {\n      return false;\n    }\n\n    // Check whether we can recover.\n    for (let i = 0; i < recoverBufferLength; i++) {\n      const char = this.at(this.pos + i + 1);\n      if (char.codePoint !== this.#garbage[i + 1].codePoint) {\n        return false;\n      }\n    }\n\n    // Append a step with an error.\n    this.#addStep(\n      {\n        timeStamp: this.#garbage[0].timeStamp,\n        codePoint: this.at(this.pos).codePoint,\n        timeToType: 0,\n        typo: true,\n      },\n      this.at(this.pos),\n    );\n\n    // Append successful steps.\n    for (let i = 1; i < this.#garbage.length; i++) {\n      this.#addStep(this.#garbage[i], this.#garbage[i].char);\n    }\n\n    this.#garbage = [];\n    this.#typo = false;\n    return true;\n  }\n\n  #handleSkippedCharacter(): boolean {\n    // text:    abcd\n    // garbage: bcd\n    // offset:  0\n\n    // Check if the buffer size is right.\n    if (\n      this.pos + recoverBufferLength + 1 > this.length ||\n      this.#garbage.length < recoverBufferLength\n    ) {\n      return false;\n    }\n\n    // Check whether we can recover.\n    for (let i = 0; i < recoverBufferLength; i++) {\n      const char = this.at(this.pos + i + 1);\n      if (char.codePoint !== this.#garbage[i].codePoint) {\n        return false;\n      }\n    }\n\n    // Append a step with an error.\n    this.#addStep(\n      {\n        timeStamp: this.#garbage[0].timeStamp,\n        codePoint: this.at(this.pos).codePoint,\n        timeToType: 0,\n        typo: true,\n      },\n      this.at(this.pos),\n    );\n\n    // Append successful steps.\n    for (let i = 0; i < this.#garbage.length; i++) {\n      this.#addStep(this.#garbage[i], this.#garbage[i].char);\n    }\n\n    this.#garbage = [];\n    this.#typo = false;\n    return true;\n  }\n}\n"],"names":["Distribution","constructor","samples","this","Float64Array","length","totalSum","reduce","sum","value","runningSum","i","Symbol","iterator","index","pmf","cdf","map","fn","Math","round","scale","unscale","makeFilter","alpha","n","NaN","add","v","KeySet","Set","keys","key","Vector","values","item","Error","push","at","Number","isSafeInteger","RangeError","Histogram","from","items","histogram","set","keySet","Map","get","asVector","has","Polynomial","coef","slice","trimZeros","Polynomial0","Polynomial1","Polynomial2","Polynomial3","PolynomialN","degree","y","super","eval","x","derivative","a","b","c","d","derivativeCoef","Array","linearRegression","vx","vy","sx","sy","mx","my","s1","s2","t0","constModel","r2","model","ssres","sstot","t1","Sle","size","A","fill","solve","maxrow","j","abs","k","tmp","s","polynomialRegression","sle","t","l","Range","rest","range","adjust","args","a0","a1","TypeError","defined","min","max","span","normalize","width","step","r0","floor","r1","ceil","steps","hasData","smooth","smoothness","filter","pow","resample","data","newLength","r","result","MutableStreakList","static","findLongest","results","candidates","level","level1","level2","level3","accept","streak","candidate","list","append","end","TopMutableStreak","MutableStreak","Object","freeze","copy","streaks","next","started","accuracy","Infinity","createContext","useResults","useContext","undefined","Month","DayOfWeek","LocalDate","year","month","dayOfMonth","dayOfWeek","timeStamp","now","Date","day","date","getFullYear","getMonth","getDate","getTime","setHours","setMinutes","setSeconds","setMilliseconds","getDay","String","padStart","plusDays","days","setDate","minusDays","toString","valueOf","LocalDateRange","to","includes","Today","ResultGroups","layout","addAll","family","dateKey","keyOf","stringKey","group","makeSummaryStats","stats","MutableSummaryStats","MutableMetric","count","time","speed","score","last","delta","avg","DailyStatsMap","today","groups","byDate","makeStats","toStringTag","textType","errors","minLength","minTime","minComplexity","minSpeed","maxSpeed","fromStats","validate","complexity","toJSON","id","timeToSpeed","isFinite","speedToTime","xid","GENERATED","NATURAL","NUMBERS","CODE","makeKeyStatsMap","letters","MutableKeyStatsMap","letter","MutableKeyStats","timeToType","bestTimeToType","sample","codePoint","hitCount","missCount","filteredTimeToType","recoverResults","raw","recovered","SpeedUnit","factor","name","WPM","WPS","CPM","CPS","measure","cpm","uiProps","speedUnit","ALL","Attr","flattenStyledText","text","isArray","isStyledTextSpan","join","splitStyledText","attrs","Normal","cls","charsAreEqual","charArraysAreEqual","singleLine","styledText","lines","chars","FontFace","weight","style","fallbacks","scripts","cssProperties","w","fontName","fontFamily","fontWeight","fontStyle","cl","cgl","cghl","achl","acghlt","ARAD","ARAD_B","CORMORANT","CORMORANT_I","CORMORANT_B","CORMORANT_BI","NEWSREADER","NEWSREADER_I","NEWSREADER_B","NEWSREADER_BI","NUNITO","NUNITO_I","NUNITO_B","NUNITO_BI","OPEN_DYSLEXIC","OPEN_DYSLEXIC_I","OPEN_DYSLEXIC_B","OPEN_DYSLEXIC_BI","OPEN_SANS","OPEN_SANS_I","OPEN_SANS_B","OPEN_SANS_BI","ROBOTO","ROBOTO_I","ROBOTO_B","ROBOTO_BI","ROBOTO_MONO","ROBOTO_MONO_I","ROBOTO_MONO_B","ROBOTO_MONO_BI","RUBIK","RUBIK_I","RUBIK_B","RUBIK_BI","SHANTELL_SANS","SHANTELL_SANS_I","SHANTELL_SANS_B","SHANTELL_SANS_BI","SPECTRAL","SPECTRAL_I","SPECTRAL_B","SPECTRAL_BI","UBUNTU","UBUNTU_I","UBUNTU_B","UBUNTU_BI","UBUNTU_MONO","UBUNTU_MONO_I","UBUNTU_MONO_B","UBUNTU_MONO_BI","SERIF","SERIF_I","SERIF_B","SERIF_BI","SANS_SERIF","SANS_SERIF_I","SANS_SERIF_B","SANS_SERIF_BI","MONOSPACE","MONOSPACE_I","MONOSPACE_B","MONOSPACE_BI","CURSIVE","CURSIVE_I","CURSIVE_B","CURSIVE_BI","FONTS_FACES","Font","fontFace","find","select","language","font","script","fonts","sort","validateSample","typo","entries","textInputProps","stopOnError","forgiveErrors","spaceSkipsWords","toTextInputSettings","settings","CaretShapeStyle","CaretMovementStyle","WhitespaceStyle","textDisplaySettings","default","caretShapeStyle","Underline","caretMovementStyle","Smooth","whitespaceStyle","Bullet","EN","textDisplayProps","toTextDisplaySettings","startedAt","endedAt","computeSpeed","countErrors","empty","Feedback","TextInput","onStep","reset","pos","completed","remaining","onInput","inputType","appendChar","clearChar","clearWord","pop","Succeeded","expected","Recovered","char","Garbage","Failed","feedback","head","tail","Cursor","Miss","Hit","recoverBufferLength"],"sourceRoot":""}