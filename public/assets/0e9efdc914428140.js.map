{"version":3,"file":"0e9efdc914428140.js","mappings":"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CAAC,OAAQ,OAAQ,QAAS,eAO3C,MACA,CACER,IAAK,CACH,OACA,CACEH,EAAG,GACHC,IAAK,CACHE,IAAK,CACH,IACA,CACEQ,IAAK,CACH,QACA,OACA,OACA,QACA,QACA,OACA,gBAQd,OACA,CACER,IAAK,CACH,MACA,CACEH,EAAG,GACHC,IAAK,CACHE,IAAK,CACH,IACA,CACEQ,IAAK,CAAC,OAAQ,OAAQ,QAAS,eAO3C,CACER,IAAK,CACH,UACA,CACEH,EAAG,GACHC,IAAK,CACHE,IAAK,CACH,IACA,CACEQ,IAAK,CAAC,OAAQ,OAAQ,gBAOlC,CACER,IAAK,CACH,OACA,CACEH,EAAG,GACHC,IAAK,CACHE,IAAK,CACH,IACA,CACEQ,IAAK,CAAC,OAAQ,OAAQ,QAAS,eAO3C,CACER,IAAK,CACH,OACA,CACEH,EAAG,GACHC,IAAK,CACHE,IAAK,CACH,IACA,CACEQ,IAAK,CACH,QACA,OACA,OACA,QACA,QACA,OACA,gBAQd,CACER,IAAK,CACH,SACA,CACEH,EAAG,GACHC,IAAK,CACHE,IAAK,CACH,IACA,CACEQ,IAAK,CACH,QACA,OACA,OACA,QACA,QACA,OACA,gBAQd,CACER,IAAK,CACH,MACA,CACEH,EAAG,GACHC,IAAK,CACHE,IAAK,CACH,IACA,CACEQ,IAAK,CAAC,MAAO,cAOzB,CACER,IAAK,CACH,OACA,CACEH,EAAG,GACHC,IAAK,CACHE,IAAK,CACH,IACA,CACEQ,IAAK,CACH,QACA,OACA,OACA,QACA,QACA,OACA,gBAQd,CACER,IAAK,CACH,SACA,CACEH,EAAG,GACHC,IAAK,CACHE,IAAK,CACH,IACA,CACEQ,IAAK,CAAC,OAAQ,QAAS,eAOnC,CACER,IAAK,CACH,YACA,CACEH,EAAG,GACHC,IAAK,CACHE,IAAK,CACH,IACA,CACEQ,IAAK,CAAC,OAAQ,SAAU,gBAOpC,CACER,IAAK,CACH,CACEQ,IAAK,CAAC,MAAO,QAEf,IACA,CACEX,EAAG,GACHC,IAAK,CACHE,IAAK,CACH,CACEQ,IAAK,CAAC,OAAQ,OAAQ,QAAS,UAEjC,OAIN,CACEX,EAAG,GACHC,IAAK,CACHU,IAAK,CAAC,MAAO,SAGjB,SAGJ,CACER,IAAK,CACH,QACA,CACEH,EAAG,GACHC,IAAK,CACHE,IAAK,CACH,IACA,CACEQ,IAAK,CACH,QACA,OACA,OACA,QACA,QACA,OACA,gBAQd,CACER,IAAK,CACH,SACA,CACEH,EAAG,GACHC,IAAK,CACHE,IAAK,CACH,IACA,CACEQ,IAAK,CACH,QACA,OACA,OACA,QACA,QACA,OACA,gBAQd,CACER,IAAK,CACH,CACEH,EAAG,GACHC,IAAK,CACHE,IAAK,CACH,CACEQ,IAAK,CAAC,WAAY,UAEpB,OAIN,cAKRO,mBAAoB,CAClBP,IAAK,CACH,OACA,SACA,UACA,QACA,UACA,SACA,UACA,SACA,aACA,UACA,aACA,UACA,MACA,UACA,QACA,QACA,OACA,QACA,SACA,UACA,SACA,OACA,QACA,OACA,UACA,SACA,CACER,IAAK,CACH,CACEH,EAAG,GACHC,IAAK,CACHU,IAAK,CAAC,SAAU,aAGpB,UAGJ,QACA,CACER,IAAK,CACH,CACEH,EAAG,GACHC,IAAK,CACHU,IAAK,CAAC,OAAQ,QAAS,UAG3B,SAGJ,SACA,SACA,QACA,OACA,WACA,QACA,UACA,WACA,WACA,SACA,UACA,SACA,OACA,QACA,SACA,SACA,QACA,YACA,OACA,WACA,SACA,YC72BN,GACEQ,SAAU,CACRnC,IAAK,UACLc,KAAM,SAERsB,QAAS,CACPpC,IAAK,UACLc,KAAM,QAERuB,QAAS,CACPrC,IAAK,UACLc,KAAM,QAERwB,QAAS,CACPtC,IAAK,UACLc,KAAM,QAERyB,YAAa,CACXvC,IAAK,UACLc,KAAM,YAER0B,WAAY,CACVxC,IAAK,UACLc,KAAM,WAER2B,WAAY,CACVzC,IAAK,UACLc,KAAM,WAER4B,OAAQ,CACN1C,IAAK,UACLc,KAAM,OAER6B,aAAc,CACZ3C,IAAK,UACLc,KAAM,aAER8B,MAAO,CACL5C,IAAK,UACLc,KAAM,MAER+B,OAAQ,CACN7C,IAAK,UACLc,KAAM,OAERgC,UAAW,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AEP,CACEb,EAAG,GACHC,IAAK,CACHE,IAAK,CACH,IACA,IACA,CACEU,IAAK,iBAUvBsN,MAAO,CACLtN,IAAK,UAEPuN,YAAa,CACXjO,IAAK,CACH,IACA,IACA,CACEU,IAAK,UAEP,IACA,MAGJwN,OAAQ,CACN1N,IAAK,CACH,CACEE,IAAK,cAEP,CACEA,IAAK,eAEP,CACEA,IAAK,aAEP,CACEA,IAAK,mBAIXyN,WAAY,CACVnO,IAAK,CACH,CACEU,IAAK,UAEP,IACA,CACEA,IAAK,YAEP,IACA,IACA,IACA,CACEA,IAAK,UAEP,MAGJ0N,YAAa,CACXpO,IAAK,CACH,CACEU,IAAK,aAEP,IACA,CACEA,IAAK,cAEP,IACA,MAGJ2N,UAAW,CACTrO,IAAK,CACH,CACEU,IAAK,SAEP,IACA,IACA,CACEA,IAAK,UAEP,IACA,IACA,IACA,IACA,CACEA,IAAK,eAEP,IACA,MAGJ4N,cAAe,CACbtO,IAAK,CACH,CACEU,IAAK,aAEP,IACA,CACEA,IAAK,UAEP,MAGJ6N,OAAQ,CACN/N,IAAK,CACH,CACEE,IAAK,eAEP,CACEA,IAAK,gBAEP,CACEA,IAAK,mBAIX8N,YAAa,CACXxO,IAAK,CACH,CACEQ,IAAK,CACH,CACER,IAAK,CACH,KACA,CACEU,IAAK,YAEP,MAGJ,CACEA,IAAK,cAIX,CACEF,IAAK,CACH,KACA,KACA,CACER,IAAK,CACH,KACA,CACEU,IAAK,kBAQnB+N,aAAc,CACZzO,IAAK,CACH,IACA,CACEU,IAAK,eAEP,IACA,CACEF,IAAK,CACH,CACER,IAAK,CACH,IACA,IACA,IACA,CACEU,IAAK,cAIX,CACEV,IAAK,CACH,IACA,IACA,IACA,CACEU,IAAK,cAIX,CACEV,IAAK,CACH,IACA,IACA,IACA,CACEU,IAAK,cAIX,CACEV,IAAK,CACH,IACA,IACA,IACA,CACEU,IAAK,cAIX,CACEV,IAAK,CACH,IACA,IACA,IACA,CACEU,IAAK,cAIX,CACEV,IAAK,CACH,IACA,IACA,IACA,CACEU,IAAK,cAIX,CACEV,IAAK,CACH,IACA,KACA,IACA,CACEU,IAAK,cAIX,CACEV,IAAK,CACH,IACA,KACA,IACA,CACEU,IAAK,cAIX,CACEV,IAAK,CACH,IACA,KACA,IACA,CACEU,IAAK,cAIX,CACEV,IAAK,CACH,IACA,KACA,IACA,CACEU,IAAK,cAIX,CACEV,IAAK,CACH,IACA,KACA,IACA,CACEU,IAAK,cAIX,CACEV,IAAK,CACH,IACA,KACA,IACA,CACEU,IAAK,kBAQnBgO,cAAe,CACb1O,IAAK,CACH,CACEU,IAAK,eAEP,IACA,IACA,IACA,CACEA,IAAK,eAEP,IACA,IACA,IACA,CACEA,IAAK,iBAIXiO,UAAW,CACTnO,IAAK,CACH,CACER,IAAK,CACH,CACEH,EAAG,GACHC,IAAK,SAEP,CACEY,IAAK,sBAIX,CACEA,IAAK,2BAIXkO,iBAAkB,CAChBpO,IAAK,CACH,QACA,UACA,SACA,OACA,SACA,SACA,QACA,OACA,SACA,SACA,SACA,UACA,SACA,SACA,QACA,UACA,SACA,SACA,SACA,SACA,SACA,WAGJqO,SAAU,CACR7O,IAAK,CACH,CACEH,EAAG,GACHC,IAAK,CACHD,EAAG,GACHC,IAAK,CACHE,IAAK,CACH,CACEQ,IAAK,CAAC,IAAK,QAEb,QAKR,CACEE,IAAK,4BFxfgC4M,EAAWwB,GAC3CC,EAAqB9R,EGTlC,CACEgC,MAAO,CACLyB,IAAK,yBAEPsO,sBAAuB,CACrBhP,IAAK,CACH,CACEQ,IAAK,CACH,CACEE,IAAK,UAEP,CACEA,IAAK,cAIX,IACA,CACEA,IAAK,aAEP,IACA,IACA,IACA,CACEA,IAAK,kBAEP,MAGJuO,eAAgB,CACdzO,IAAK,CACH,CACEE,IAAK,cAEP,CACEA,IAAK,oBAEP,CACEA,IAAK,qBAEP,CACEA,IAAK,mBAEP,CACEA,IAAK,iBAIXwO,iBAAkB,CAChBlP,IAAK,CACH,IACA,CACEU,IAAK,kBAEP,CACEb,EAAG,GACHC,IAAK,CACHE,IAAK,CACH,IACA,IACA,CACEU,IAAK,qBAKb,MAGJyO,kBAAmB,CACjBnP,IAAK,CACH,IACA,IACA,CACEU,IAAK,oBAEP,IACA,IACA,CACEA,IAAK,qBAEP,IACA,MAGJ0O,iBAAkB,CAChB5O,IAAK,CACH,CACEE,IAAK,SAEP,CACEV,IAAK,CACH,IACA,CACEU,IAAK,SAEP,QAKR2O,kBAAmB,CACjB3O,IAAK,kBAEP4O,gBAAiB,CACftP,IAAK,CACH,CACEU,IAAK,oBAEP,IACA,KACA,IACA,CACEA,IAAK,oBAIX6O,iBAAkB,CAChB/O,IAAK,CACH,CACEE,IAAK,iBAEP,CACEA,IAAK,mBAIX8O,cAAe,CACb9O,IAAK,UAEP+O,cAAe,CACbzP,IAAK,CACH,IACA,CACEU,IAAK,UAEP,IACA,IACA,CACEA,IAAK,UAEP,CACEb,EAAG,GACHC,IAAK,CACHE,IAAK,CACH,IACA,IACA,CACEU,IAAK,kBAKb,MAGJgP,OAAQ,CACN1P,IAAK,CACH,CACEU,IAAK,aAEP,CACEb,EAAG,GACHC,IAAK,CACHE,IAAK,CACH,IACA,IACA,IACA,CACEU,IAAK,uBAOjBiP,YAAa,CACX3P,IAAK,CACH,MACA,CACEU,IAAK,eAIXkP,YAAa,CACX5P,IAAK,CACH,CACEU,IAAK,cAEP,IACA,CACEA,IAAK,kBAEP,CACEb,EAAG,GACHC,IAAK,CACHE,IAAK,CACH,IACA,IACA,CACEU,IAAK,qBAKb,MAGJmP,UAAW,CACTnP,IAAK,SAEPoP,WAAY,CACVtP,IAAK,CACH,MACA,UACA,QACA,SACA,OACA,MACA,WACA,OACA,SACA,MACA,OACA,WAGJuP,MAAO,CACLvP,IAAK,CACH,IACA,IACA,IACA,IACA,IACA,IACA,IACA,OACA,MACA,MACA,QACA,KACA,OACA,MACA,SACA,OACA,OACA,MACA,OACA,OACA,MACA,QACA,MACA,OACA,UAGJwP,WAAY,CACVxP,IAAK,CACH,CACEE,IAAK,WAEP,CACEA,IAAK,WAEP,CACEA,IAAK,YAEP,CACEA,IAAK,qBAEP,CACEA,IAAK,yBAIXuP,kBAAmB,CACjBpR,IAAK,SACLc,KAAM,CACJa,IAAK,CAAC,MAAO,MAAO,SAGxB0P,oBAAqB,CACnBrR,IAAK,SACLc,KAAM,CACJK,IAAK,CACH,UACA,CACEU,IAAK,SAEP,SHxRmD4M,EAAWwB,GACzDqB,EAAiBlT,EIV9B,CACEgC,MAAO,CACLyB,IAAK,oBAEP0P,iBAAkB,CAChB5P,IAAK,CACH,CACEE,IAAK,8BAEP,CACEA,IAAK,2BAEP,CACEA,IAAK,iBAEP,CACEA,IAAK,iBAEP,CACE1C,KAAM,WACNyB,KAAK,EACLC,KAAM,CACJgB,IAAK,qBAKb2P,2BAA4B,CAC1BrQ,IAAK,CACH,CACEU,IAAK,UAEP,IACA,CACEA,IAAK,wBAEP,IACA,CACEA,IAAK,oBAEP,IACA,CACE1C,KAAM,QACNyB,KAAK,EACLC,KAAM,CACJM,IAAK,CACH,IACA,KACA,IACA,CACEU,IAAK,kBAKb,MAGJ4P,wBAAyB,CACvBtQ,IAAK,CACH,CACEU,IAAK,YAEP,IACA,CACEA,IAAK,qBAEP,CACEb,EAAG,GACHC,IAAK,CACHE,IAAK,CACH,IACA,CACEU,IAAK,qBAEP,OAIN,MAGJ6P,cAAe,CACbvQ,IAAK,CACH,CACEU,IAAK,wBAEP,CACEb,EAAG,GACHC,IAAK,CACHE,IAAK,CACH,IACA,CACEU,IAAK,kBAEP,OAIN,IACA,IACA,IACA,CACEA,IAAK,uBAIX8P,cAAe,CACbxQ,IAAK,CACH,CACEU,IAAK,aAEP,IACA,CACEA,IAAK,uBAIX+P,iBAAkB,CAChBzQ,IAAK,CACH,CACEU,IAAK,mBAEP,CACEb,EAAG,GACHC,IAAK,CACHE,IAAK,CACH,IACA,IACA,CACEU,IAAK,wBAOjBgQ,gBAAiB,CACf1Q,IAAK,CACH,CACEU,IAAK,wBAEP,CACE1C,KAAM,QACNyB,KAAK,EACLC,KAAM,CACJM,IAAK,CACH,IACA,IACA,CACEU,IAAK,oBAOjBiQ,kBAAmB,CACjBnQ,IAAK,CACH,CACEE,IAAK,kBAEP,CACEA,IAAK,0BAEP,CACEA,IAAK,2BAEP,CACEV,IAAK,CACH,IACA,CACEU,IAAK,qBAEP,MAGJ,CACEA,IAAK,0BAEP,CACEA,IAAK,0BAEP,CACEA,IAAK,0BAIXkQ,uBAAwB,CACtBpQ,IAAK,CACH,CACER,IAAK,CACH,CACEU,IAAK,qBAEP,IACA,CACEA,IAAK,SAEP,IACA,CACEb,EAAG,GACHC,IAAK,CACHE,IAAK,CACH,CACEU,IAAK,UAEP,OAIN,CACEA,IAAK,aAIX,CACEV,IAAK,CACH,CACEU,IAAK,UAEP,IACA,CACEA,IAAK,uBAIX,CACEV,IAAK,CACH,IACA,CACEU,IAAK,yBAMfmQ,wBAAyB,CACvB7Q,IAAK,CACH,CACEU,IAAK,qBAEP,IACA,CACEA,IAAK,0BAEP,IACA,CACEA,IAAK,uBAIXoQ,qBAAsB,CACpB9Q,IAAK,CACH,CACEU,IAAK,wBAEP,IACA,CACEA,IAAK,uBAEP,CACEb,EAAG,GACHC,IAAK,CACHE,IAAK,CACH,IACA,IACA,CACEU,IAAK,4BAOjBqQ,oBAAqB,CACnB/Q,IAAK,CACH,CACEU,IAAK,wBAEP,IACA,CACEA,IAAK,uBAIXsQ,YAAa,CACXxQ,IAAK,CACH,CACEE,IAAK,yBAEP,CACEV,IAAK,CACH,QACA,CACEU,IAAK,yBAEP,MAGJ,CACEV,IAAK,CACH,QACA,CACEU,IAAK,yBAEP,IACA,IACA,CACEA,IAAK,yBAEP,MAGJ,CACEV,IAAK,CACH,SACA,CACEU,IAAK,yBAEP,IACA,IACA,SAGJ,CACEV,IAAK,CACH,CACEU,IAAK,yBAEP,IACA,IACA,IACA,CACEA,IAAK,6BAMfuQ,sBAAuB,CACrBzQ,IAAK,CACH,CACEE,IAAK,qBAEP,CACEA,IAAK,UAEP,CACEA,IAAK,UAEP,CACEA,IAAK,WAEP,CACEA,IAAK,YAEP,CACEA,IAAK,aAIXwQ,uBAAwB,CACtB1Q,IAAK,CACH,IACA,IACA,IACA,IACA,KACA,IACA,KACA,IACA,IACA,IACA,IACA,IACA,KACA,KACA,KACA,CACER,IAAK,CACH,CACEH,EAAG,GACHC,IAAK,CACHE,IAAK,CACH,CACEU,IAAK,UAEP,OAIN,CACEA,IAAK,WAIX,MAGJyQ,uBAAwB,CACtBnR,IAAK,CACH,IACA,CACEU,IAAK,qBAEP,CACEb,EAAG,GACHC,IAAK,CACHE,IAAK,CACH,IACA,IACA,CACEU,IAAK,wBAKb,MAGJ0Q,uBAAwB,CACtBpR,IAAK,CACH,IACA,CACEU,IAAK,8BAEP,CACEb,EAAG,GACHC,IAAK,CACHE,IAAK,CACH,IACA,IACA,CACEU,IAAK,iCAKb,MAGJ2Q,2BAA4B,CAC1BrR,IAAK,CACH,CACEU,IAAK,kBAEP,IACA,IACA,CACEA,IAAK,uBAIX4Q,eAAgB,CACdtR,IAAK,CACH,CACEhC,KAAM,UACNyB,KAAK,EACLC,KAAM,CACJc,IAAK,CACH,CACEE,IAAK,yBAEP,CACEA,IAAK,4BAKb,CACE1C,KAAM,UACNyB,KAAK,EACLC,KAAM,CACJgB,IAAK,4BAKb6Q,sBAAuB,CACrB/Q,IAAK,CACH,CACE3B,IAAK,SACLc,KAAM,CACJK,IAAK,CACH,IACA,CACEU,IAAK,uBAEP,OAIN,CACE7B,IAAK,SACLc,KAAM,CACJK,IAAK,CACH,IACA,CACEU,IAAK,uBAEP,OAIN,CACE7B,IAAK,SACLc,KAAM,CACJK,IAAK,CACH,MACA,CACEU,IAAK,uBAEP,SAIN,CACE7B,IAAK,SACLc,KAAM,CACJK,IAAK,CACH,MACA,CACEU,IAAK,uBAEP,WAMV8Q,qBAAsB,CACpB9Q,IAAK,yBAEP+Q,qBAAsB,CACpBjR,IAAK,CACH,WACA,YACA,SACA,WACA,cACA,cACA,WACA,WACA,UACA,SACA,UACA,WACA,cACA,cACA,UACA,CACEE,IAAK,2BAIXgR,kBAAmB,CACjBhR,IAAK,sBAEPiR,oBAAqB,CACnBnR,IAAK,CACH,IACA,MACA,iBACA,gBACA,WACA,QACA,MACA,MACA,OACA,OACA,QACA,aACA,QACA,MACA,QACA,IACA,MACA,UAGJoR,sBAAuB,CACrB/S,IAAK,SACLc,KAAM,CACJa,IAAK,CACH,IACA,QACA,OACA,MACA,MACA,OACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,KACA,MACA,OACA,OACA,KACA,KACA,MACA,KACA,KACA,KACA,KACA,KACA,QACA,QACA,IACA,KACA,MACA,KACA,KACA,MACA,MACA,IACA,K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IACA,IACA,IACA,IACA,IACA,KACA,MACA,SACA,MACA,MACA,MACA,UACA,UACA,KACA,MACA,MACA,OACA,eAINoT,aAAc,CACZ/U,IAAK,UACLc,KAAM,CACJa,IAAK,CACH,CACER,IAAK,CACH,KACA,IACA,CACEU,IAAK,uBAIX,CACEV,IAAK,CACH,MACA,IACA,CACEU,IAAK,uBAIX,CACEV,IAAK,CACH,KACA,IACA,CACEU,IAAK,qBAEP,IACA,OAGJ,CACEV,IAAK,CACH,MACA,IACA,CACEU,IAAK,qBAEP,IACA,UAMVmT,kBAAmB,CACjBrT,IAAK,CACH,iCACA,kCACA,mCACA,6BACA,uBACA,4BACA,yBACA,uBACA,2BACA,iBACA,wBACA,6BACA,gCL1pByC8M,EAAWwB,GAC7CgF,EAAgB7W,EMZ7B,CACEgC,MAAO,CACLe,IAAK,CACH,CACEU,IAAK,iBAEP,MAGJqT,cAAe,CACb/T,IAAK,CACH,CACEU,IAAK,gBAEP,IACA,CACEA,IAAK,YAEP,CACEb,EAAG,GACHC,IAAK,CACHE,IAAK,CACH,IACA,CACEQ,IAAK,CACH,CACEE,IAAK,mBAEP,CACEA,IAAK,sBASrBsT,gBAAiB,CACfhU,IAAK,CACH,CACEQ,IAAK,CAAC,IAAK,OAEb,IACA,CACEE,IAAK,eAIXuT,YAAa,CACXjU,IAAK,CACH,IACA,IACA,CACEU,IAAK,gBAEP,CACEb,EAAG,GACHC,IAAK,CACHE,IAAK,CACH,IACA,CACEU,IAAK,gBAKb,CACEb,EAAG,GACHC,IAAK,CACHE,IAAK,CACH,IACA,CACEU,IAAK,kBAOjBwT,SAAU,CACRlU,IAAK,CACH,CACEU,IAAK,aAEP,CACEb,EAAG,GACHC,IAAK,CACHE,IAAK,CACH,IACA,CACEU,IAAK,gBAKb,IACA,CACEA,IAAK,YAEP,CACEb,EAAG,GACHC,IAAK,CACHE,IAAK,CACH,IACA,CACEU,IAAK,eAKb,IACA,CACEF,IAAK,CACH,CACEE,IAAK,YAEP,CACEA,IAAK,gBAEP,CACEA,IAAK,WAEP,CACEA,IAAK,kBAMfyT,UAAW,CACT3T,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,OAExD4T,SAAU,CACR5T,IAAK,CACH,UACA,CACER,IAAK,CACH,SACA,IACA,CACEU,IAAK,eAIX,CACEV,IAAK,CACH,QACA,IACA,CACEU,IAAK,eAIX,CACEV,IAAK,CACH,SACA,IACA,CACEU,IAAK,eAIX,CACEV,IAAK,CACH,SACA,IACA,CACEU,IAAK,eAIX,SACA,CACEV,IAAK,CACH,SACA,IACA,CACEU,IAAK,eAIX,CACEV,IAAK,CACH,OACA,IACA,CACEU,IAAK,eAIX,CACEV,IAAK,CACH,SACA,IACA,CACEU,IAAK,eAIX,CACEV,IAAK,CACH,QACA,IACA,CACEU,IAAK,eAIX,SACA,CACEV,IAAK,CACH,QACA,IACA,CACEU,IAAK,eAIX,UACA,cAGJ2T,SAAU,CACR3T,IAAK,aAEP4T,aAAc,CACZtU,IAAK,CACH,IACA,IACA,CACEQ,IAAK,CACH,CACEE,IAAK,iBAEP,CACEV,IAAK,CACH,IACA,CACEU,IAAK,iBAEP,IACA,CACEA,IAAK,iBAEP,UAOZ6T,QAAS,CACP/T,IAAK,CACH,CACER,IAAK,CACH,IACA,IACA,CACEU,IAAK,YAEP,MAGJ,CACEV,IAAK,CACH,IACA,IACA,CACEU,IAAK,gBAEP,IACA,CACEA,IAAK,YAEP,MAGJ,CACEV,IAAK,CAAC,IAAK,IAAK,MAAO,QAI7BwU,WAAY,CACV3V,IAAK,SACLc,KAAM,CACJK,IAAK,CACH,IACA,IACA,IACA,CACEU,IAAK,YAEP,IACA,OAIN+T,SAAU,CACRjU,IAAK,CACH,IACA,OACA,QACA,OACA,OACA,OACA,OACA,OACA,WACA,eACA,WACA,OACA,WACA,WACA,WACA,WACA,YACA,WACA,SACA,SACA,WAGJkU,UAAW,CACTlU,IAAK,CACH,YACA,CACEA,IAAK,CACH,CACER,IAAK,CACH,CACEU,IAAK,YAEP,IACA,CACEV,IAAK,CACH,CACEU,IAAK,kBAEP,IACA,CACEA,IAAK,qBAMf,WAKRiU,SAAU,CACRnU,IAAK,CACH,IACA,OACA,IACA,IACA,OACA,KACA,MACA,MACA,MACA,OACA,OACA,KACA,MACA,OACA,MACA,OACA,OACA,QACA,OACA,SAGJoU,eAAgB,CACdpU,IAAK,CACH,IACA,IACA,IACA,QACA,SACA,OACA,KACA,SACA,OACA,SACA,QACA,QACA,OACA,QACA,OACA,OACA,OACA,SACA,QACA,OACA,UACA,OACA,OACA,SACA,QACA,UAGJqU,cAAe,CACbrU,IAAK,CACH,IACA,OACA,MACA,MACA,MACA,IACA,MACA,OACA,KACA,OACA,MACA,MACA,KACA,IACA,MACA,MACA,KACA,KACA,KACA,KACA,KACA,MACA,SAGJsU,aAAc,CACZjW,IAAK,UACLc,KAAM,CACJa,IAAK,CACH,QACA,MACA,KACA,QACA,QACA,KACA,MACA,KACA,SACA,KACA,OACA,MACA,MACA,OACA,SACA,OACA,OACA,OACA,OACA,KACA,OACA,MACA,QACA,KACA,OACA,OACA,MACA,OACA,KACA,MACA,KACA,QACA,MACA,MACA,OACA,MACA,OACA,MACA,OACA,MACA,QACA,OACA,QACA,SACA,KACA,KACA,WNtdKuU,EAAgB9X,EOb7B,CACEgC,MAAO,CACLe,IAAK,CACH,IACA,CACEH,EAAG,GACHC,IAAK,KAEP,CACEY,IAAK,QAEP,CACEb,EAAG,GACHC,IAAK,KAEP,IACA,CACED,EAAG,GACHC,IAAK,KAEP,CACED,EAAG,GACHC,IAAK,OAIXkV,KAAM,CACJhV,IAAK,CACH,CACEQ,IAAK,CACH,CACEE,IAAK,SAEP,CACEA,IAAK,WAIX,CACEA,IAAK,gBAIXuU,MAAO,CACLjV,IAAK,CACH,IACA,CACEH,EAAG,GACHC,IAAK,CACHU,IAAK,CACH,CACEE,IAAK,cAEP,QAIN,CACEA,IAAK,cAEP,MAGJwU,WAAY,CACVlV,IAAK,CACH,KACA,CACEQ,IAAK,CAAC,OAAQ,OAAQ,QAAS,MAAO,QAAS,OAEjD,MAGJ2U,WAAY,CACV3U,IAAK,CACH,CACEE,IAAK,cAEP,CACEA,IAAK,UAIX0U,MAAO,CACLpV,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","sources":["webpack://keybr.com/./packages/keybr-code/lib/ast.ts","webpack://keybr.com/./packages/keybr-code/lib/flags.ts","webpack://keybr.com/./packages/keybr-code/lib/output.ts","webpack://keybr.com/./packages/keybr-code/lib/generate.ts","webpack://keybr.com/./packages/keybr-code/lib/syntax/_ident.ts","webpack://keybr.com/./packages/keybr-code/lib/syntax/_keywords.ts","webpack://keybr.com/./packages/keybr-code/lib/syntax/grammars.ts","webpack://keybr.com/./packages/keybr-code/lib/syntax/lang_html_css.ts","webpack://keybr.com/./packages/keybr-code/lib/syntax/lang_cpp.ts","webpack://keybr.com/./packages/keybr-code/lib/syntax/lang_javascript.ts","webpack://keybr.com/./packages/keybr-code/lib/syntax/lang_python.ts","webpack://keybr.com/./packages/keybr-code/lib/syntax/lang_rust.ts","webpack://keybr.com/./packages/keybr-code/lib/syntax/lang_shell.ts","webpack://keybr.com/./packages/keybr-code/lib/syntax/lang_regex.ts","webpack://keybr.com/./packages/keybr-code/lib/syntax.ts","webpack://keybr.com/./packages/keybr-code/lib/validate.ts","webpack://keybr.com/./packages/keybr-code/lib/find-flags.ts","webpack://keybr.com/./packages/keybr-content/lib/books/book.ts","webpack://keybr.com/./packages/keybr-content/lib/books/util.ts","webpack://keybr.com/./packages/keybr-content/lib/books/BookPreview.tsx","webpack://keybr.com/./packages/keybr-content/lib/books/BookPreview.module.less?6c6d","webpack://keybr.com/./packages/keybr-content/lib/books/BookSelector.tsx","webpack://keybr.com/./packages/keybr-content/lib/books/ParagraphPreview.module.less?d207","webpack://keybr.com/./packages/keybr-content/lib/books/ParagraphPreview.tsx","webpack://keybr.com/./packages/keybr-content/lib/books/ParagraphSelector.tsx","webpack://keybr.com/./packages/keybr-content/lib/words/stats.ts","webpack://keybr.com/./packages/keybr-lesson-ui/lib/Calendar.module.less?eb81","webpack://keybr.com/./packages/keybr-lesson-ui/lib/DailyStats.module.less?2d15","webpack://keybr.com/./packages/keybr-lesson-ui/lib/intl.ts","webpack://keybr.com/./packages/keybr-lesson-ui/lib/format.ts","webpack://keybr.com/./packages/keybr-lesson-ui/lib/DailyStats.tsx","webpack://keybr.com/./packages/keybr-lesson-ui/lib/Calendar.tsx","webpack://keybr.com/./packages/keybr-lesson-ui/lib/styles.module.less?ca36","webpack://keybr.com/./packages/keybr-color/lib/mix.ts","webpack://keybr.com/./packages/keybr-lesson-ui/lib/styles.ts","webpack://keybr.com/./packages/keybr-lesson-ui/lib/Key.tsx","webpack://keybr.com/./packages/keybr-lesson-ui/lib/Happiness.module.less?9c92","webpack://keybr.com/./packages/keybr-lesson-ui/lib/Happiness.tsx","webpack://keybr.com/./packages/keybr-lesson-ui/lib/KeyDetails.tsx","webpack://keybr.com/./packages/keybr-lesson-ui/lib/CurrentKey.tsx","webpack://keybr.com/./packages/keybr-lesson-ui/lib/DailyGoal.tsx","webpack://keybr.com/./packages/keybr-lesson-ui/lib/DailyGoal.module.less?b783","webpack://keybr.com/./packages/keybr-lesson-ui/lib/effort.ts","webpack://keybr.com/./packages/keybr-lesson-ui/lib/EffortLegent.module.less?7adf","webpack://keybr.com/./packages/keybr-lesson-ui/lib/EffortLegend.tsx","webpack://keybr.com/./packages/keybr-lesson-ui/lib/gauges.tsx","webpack://keybr.com/./packages/keybr-lesson-ui/lib/gauges.module.less?6c7e","webpack://keybr.com/./packages/keybr-lesson-ui/lib/indicators.module.less?de4a","webpack://keybr.com/./packages/keybr-lesson-ui/lib/KeySet.tsx","webpack://keybr.com/./packages/keybr-lesson-ui/lib/StreakList.tsx","webpack://keybr.com/./packages/keybr-lesson-ui/lib/indicators.tsx","webpack://keybr.com/./packages/keybr-lesson-ui/lib/KeyLegend.tsx","webpack://keybr.com/./packages/keybr-lesson-ui/lib/KeyLegendList.tsx","webpack://keybr.com/./packages/keybr-lesson-ui/lib/KeySelector.tsx","webpack://keybr.com/./packages/keybr-lesson-ui/lib/KeySelector.module.less?c68c","webpack://keybr.com/./packages/keybr-lesson-ui/lib/names.module.less","webpack://keybr.com/./packages/keybr-lesson/lib/key.ts","webpack://keybr.com/./packages/keybr-lesson/lib/lesson.ts","webpack://keybr.com/./packages/keybr-lesson/lib/lessontype.ts","webpack://keybr.com/./packages/keybr-lesson/lib/settings.ts","webpack://keybr.com/./packages/keybr-lesson/lib/target.ts","webpack://keybr.com/./packages/keybr-lesson/lib/text/fragment.ts","webpack://keybr.com/./packages/keybr-lesson/lib/text/words.ts","webpack://keybr.com/./packages/keybr-lesson/lib/books.ts","webpack://keybr.com/./packages/keybr-lesson/lib/code.ts","webpack://keybr.com/./packages/keybr-lesson/lib/customtext.ts","webpack://keybr.com/./packages/keybr-lesson/lib/dailygoal.ts","webpack://keybr.com/./packages/keybr-lesson/lib/dictionary.ts","webpack://keybr.com/./packages/keybr-lesson/lib/guided.ts","webpack://keybr.com/./packages/keybr-lesson/lib/learningrate.ts","webpack://keybr.com/./packages/keybr-lesson/lib/learningsession.ts","webpack://keybr.com/./packages/keybr-lesson/lib/numbers.ts","webpack://keybr.com/./packages/keybr-lesson/lib/wordlist.ts","webpack://keybr.com/./packages/keybr-themes/lib/themes/dynamic-styles-context.tsx","webpack://keybr.com/./packages/keybr-themes/lib/themes/use-computed-styles.ts"],"sourcesContent":["export type Grammar = {\n  readonly rules: Rules;\n  readonly composes: readonly Grammar[];\n};\n\nexport type Rules = Record<string, Prod>;\n\nexport type Prod = Cond | Span | Opt | Seq | Alt | Ref | string;\n\nexport type Cond = {\n  readonly flag: string;\n  readonly inv: boolean;\n  readonly cond: Prod;\n};\n\nexport type Span = {\n  readonly cls: string;\n  readonly span: Prod;\n};\n\nexport type Opt = {\n  readonly f: number;\n  readonly opt: Prod;\n};\n\nexport type Seq = {\n  readonly seq: readonly Prod[];\n};\n\nexport type Alt = {\n  readonly alt: readonly Prod[];\n};\n\nexport type Ref = {\n  readonly ref: string;\n};\n\nexport function isCond(v: Prod): v is Cond {\n  return typeof v === \"object\" && \"cond\" in v;\n}\n\nexport function isSpan(v: Prod): v is Span {\n  return typeof v === \"object\" && \"span\" in v;\n}\n\nexport function isOpt(v: Prod): v is Opt {\n  return typeof v === \"object\" && \"opt\" in v;\n}\n\nexport function isSeq(v: Prod): v is Seq {\n  return typeof v === \"object\" && \"seq\" in v;\n}\n\nexport function isAlt(v: Prod): v is Alt {\n  return typeof v === \"object\" && \"alt\" in v;\n}\n\nexport function isRef(v: Prod): v is Ref {\n  return typeof v === \"object\" && \"ref\" in v;\n}\n\nexport function isLit(v: Prod): v is string {\n  return typeof v === \"string\";\n}\n\nexport function compose(rules: Rules, ...rest: Rules[]): Grammar {\n  return { rules, composes: rest.map((rules) => ({ rules, composes: [] })) };\n}\n\nexport function findRule(grammar: Grammar, name: string): Prod | null {\n  const rule = grammar.rules[name];\n  if (rule != null) {\n    return rule;\n  }\n  for (const composed of grammar.composes) {\n    const rule = findRule(composed, name);\n    if (rule != null) {\n      return rule;\n    }\n  }\n  return null;\n}\n","export type Flags = {\n  has(flag: string): boolean;\n};\n\nexport function flagSet(flags: readonly string[] | ReadonlySet<string>): Flags {\n  const set = new Set(flags);\n  return {\n    has(flag) {\n      return set.has(flag) || set.has(\"*\");\n    },\n  };\n}\n","import { type StyledText, type StyledTextSpan } from \"@keybr/textinput\";\n\nexport class Output {\n  static readonly Stop = new Error(\"STOP\");\n\n  readonly #limit: number;\n  readonly #text: (string | StyledTextSpan)[] = [];\n  #length: number = 0;\n  #separator: string = \"\";\n\n  constructor(limit: number = 1000) {\n    this.#limit = limit;\n  }\n\n  get text(): StyledText {\n    return this.#text;\n  }\n\n  /** Returns the number of characters accumulated in the output. */\n  get length(): number {\n    return this.#length + this.#separator.length;\n  }\n\n  /** Returns the number of remaining characters before the limit is reached. */\n  get remaining(): number {\n    return this.#limit - (this.#length + this.#separator.length);\n  }\n\n  /** Appends the given text, but only if followed by the `append(...)` method. */\n  separate(text: string): this {\n    if (this.#text.length > 0) {\n      const { length } = text;\n      if (length > 0) {\n        if (this.#length + length > this.#limit) {\n          throw Output.Stop;\n        }\n      }\n      this.#separator = text;\n    }\n    return this;\n  }\n\n  /** Appends the given text, or throws the stop error if the limit is reached. */\n  append(text: string, cls: string | null = null): this {\n    if ((text === \" \" || text === \"\\n\" || text === \"\\t\") && cls == null) {\n      return this.separate(text);\n    }\n    const { length } = text;\n    if (length > 0) {\n      if (this.#length + this.#separator.length + length > this.#limit) {\n        throw Output.Stop;\n      }\n      if (this.#separator.length > 0) {\n        this.#text.push(this.#separator);\n        this.#length += this.#separator.length;\n        this.#separator = \"\";\n      }\n      this.#text.push(cls != null ? { cls, text } : text);\n      this.#length += length;\n    }\n    return this;\n  }\n\n  /** Clears the accumulated text. */\n  clear(): this {\n    this.#text.length = 0;\n    this.#length = 0;\n    this.#separator = \"\";\n    return this;\n  }\n}\n","import { LCG, type RNG } from \"@keybr/rand\";\nimport { type StyledText } from \"@keybr/textinput\";\nimport {\n  findRule,\n  type Grammar,\n  isAlt,\n  isCond,\n  isLit,\n  isOpt,\n  isRef,\n  isSeq,\n  isSpan,\n  type Prod,\n} from \"./ast.ts\";\nimport { type Flags, flagSet } from \"./flags.ts\";\nimport { Output } from \"./output.ts\";\n\nconst lcg = LCG(1);\n\n/**\n * Generates text from the given context-free grammar.\n */\nexport function generate(\n  grammar: Grammar,\n  {\n    start = \"start\",\n    flags = flagSet([\"*\"]),\n    output = new Output(),\n    rng = lcg,\n  }: {\n    readonly start?: string;\n    readonly flags?: Flags;\n    readonly output?: Output;\n    readonly rng?: RNG;\n  } = {},\n): StyledText {\n  const cls = new Array<string>();\n  const alts = new Map<readonly Prod[], Prod>();\n  visit(getRule(start));\n  return output.text;\n\n  function visit(p: Prod): void {\n    if (isCond(p)) {\n      if (flags.has(p.flag) !== p.inv) {\n        visit(p.cond);\n      }\n      return;\n    }\n\n    if (isSpan(p)) {\n      cls.push(p.cls);\n      visit(p.span);\n      cls.pop();\n      return;\n    }\n\n    if (isOpt(p)) {\n      const { f = 1 } = p;\n      if (f === 1 || f > rng()) {\n        visit(p.opt);\n      }\n      return;\n    }\n\n    if (isSeq(p)) {\n      for (const child of p.seq) {\n        visit(child);\n      }\n      return;\n    }\n\n    if (isAlt(p)) {\n      visit(choose(p.alt));\n      return;\n    }\n\n    if (isRef(p)) {\n      visit(getRule(p.ref));\n      return;\n    }\n\n    if (isLit(p)) {\n      output.append(p, cls.length > 0 ? cls.at(-1) : null);\n      return;\n    }\n\n    throw new Error(); // Unreachable.\n  }\n\n  function getRule(name: string): Prod {\n    const rule = findRule(grammar, name);\n    if (rule == null) {\n      throw new Error(\n        process.env.NODE_ENV !== \"production\"\n          ? `Unknown rule [${name}]`\n          : undefined,\n      );\n    }\n    return rule;\n  }\n\n  function choose(a: readonly Prod[]): Prod {\n    if (a.length > 1) {\n      const prev = alts.get(a);\n      while (true) {\n        const next = a[Math.floor(rng() * a.length)];\n        if (prev !== next) {\n          alts.set(a, next);\n          return next;\n        }\n      }\n    } else {\n      return a[0];\n    }\n  }\n}\n","// Generated file, do not edit.\n\nimport { type Rules } from \"../ast.ts\";\n\nexport default {\n  generic_variable_name: {\n    alt: [\n      \"a\",\n      \"acc\",\n      \"actual\",\n      \"b\",\n      \"buffer\",\n      \"c\",\n      {\n        seq: [\n          {\n            f: 0.5,\n            opt: {\n              seq: [\n                {\n                  alt: [\"initial\", \"new\", \"bad\", \"good\"],\n                },\n                \"_\",\n              ],\n            },\n          },\n          \"config\",\n        ],\n      },\n      \"count\",\n      \"ctx\",\n      \"d\",\n      {\n        seq: [\n          {\n            f: 0.5,\n            opt: {\n              seq: [\n                {\n                  alt: [\"initial\", \"new\", \"bad\", \"good\", \"user\"],\n                },\n                \"_\",\n              ],\n            },\n          },\n          \"data\",\n        ],\n      },\n      \"expected\",\n      \"f\",\n      {\n        seq: [\n          {\n            f: 0.5,\n            opt: {\n              seq: [\"my\", \"_\"],\n            },\n          },\n          {\n            f: 0.5,\n            opt: {\n              seq: [\n                {\n                  alt: [\"data\", \"config\", \"image\"],\n                },\n                \"_\",\n              ],\n            },\n          },\n          \"file\",\n        ],\n      },\n      \"h\",\n      {\n        seq: [\n          {\n            f: 0.5,\n            opt: {\n              seq: [\n                {\n                  alt: [\"min\", \"max\"],\n                },\n                \"_\",\n              ],\n            },\n          },\n          {\n            f: 0.5,\n            opt: {\n              seq: [\n                {\n                  alt: [\"inner\", \"outer\"],\n                },\n                \"_\",\n              ],\n            },\n          },\n          \"height\",\n        ],\n      },\n      \"i\",\n      {\n        seq: [\n          {\n            f: 0.5,\n            opt: {\n              seq: [\n                {\n                  alt: [\"first\", \"last\", \"prev\", \"next\", \"min\", \"max\"],\n                },\n                \"_\",\n              ],\n            },\n          },\n          \"idx\",\n        ],\n      },\n      \"image\",\n      \"img\",\n      {\n        seq: [\n          {\n            f: 0.5,\n            opt: {\n              seq: [\n                {\n                  alt: [\"first\", \"last\", \"prev\", \"next\", \"min\", \"max\"],\n                },\n                \"_\",\n              ],\n            },\n          },\n          \"index\",\n        ],\n      },\n      \"input\",\n      {\n        seq: [\n          {\n            alt: [\"first\", \"last\", \"prev\", \"next\"],\n          },\n          \"_\",\n          \"item\",\n        ],\n      },\n      \"iter\",\n      {\n        seq: [\n          {\n            alt: [\"input\", \"output\"],\n          },\n          \"_\",\n          \"shape\",\n        ],\n      },\n      \"j\",\n      \"k\",\n      {\n        seq: [\n          {\n            alt: [\"first\", \"last\", \"prev\", \"next\"],\n          },\n          \"_\",\n          \"key\",\n        ],\n      },\n      {\n        seq: [\n          {\n            alt: [\"first\", \"last\", \"prev\", \"next\", \"min\", \"max\"],\n          },\n          \"_\",\n          \"layer\",\n        ],\n      },\n      {\n        seq: [\n          {\n            f: 0.5,\n            opt: {\n              seq: [\n                {\n                  alt: [\"min\", \"max\"],\n                },\n                \"_\",\n              ],\n            },\n          },\n          \"len\",\n        ],\n      },\n      \"m\",\n      \"map\",\n      \"mask\",\n      \"n\",\n      {\n        seq: [\n          {\n            f: 0.5,\n            opt: {\n              seq: [\n                {\n                  alt: [\"file\", \"dir\", \"entry\"],\n                },\n                \"_\",\n              ],\n            },\n          },\n          \"name\",\n        ],\n      },\n      {\n        seq: [\n          {\n            alt: [\"first\", \"last\", \"prev\", \"next\"],\n          },\n          \"_\",\n          \"node\",\n        ],\n      },\n      \"op\",\n      {\n        seq: [\n          {\n            f: 0.5,\n            opt: {\n              seq: [\n                {\n                  alt: [\"last\", \"saved\"],\n                },\n                \"_\",\n              ],\n            },\n          },\n          {\n            alt: [\"out\", \"output\"],\n          },\n        ],\n      },\n      \"req\",\n      \"res\",\n      {\n        seq: [\n          {\n            f: 0.5,\n            opt: {\n              seq: [\n                {\n                  alt: [\"min\", \"max\", \"last\"],\n                },\n                \"_\",\n              ],\n            },\n          },\n          \"result\",\n        ],\n      },\n      \"root\",\n      \"s\",\n      {\n        seq: [\n          {\n            f: 0.5,\n            opt: {\n              seq: [\n                {\n                  alt: [\"data\", \"layer\", \"image\"],\n                },\n                \"_\",\n              ],\n            },\n          },\n          \"shape\",\n        ],\n      },\n      {\n        seq: [\n          {\n            f: 0.5,\n            opt: {\n              seq: [\n                {\n                  alt: [\"min\", \"max\"],\n                },\n                \"_\",\n              ],\n            },\n          },\n          {\n            f: 0.5,\n            opt: {\n              seq: [\n                {\n                  alt: [\"inner\", \"outer\"],\n                },\n                \"_\",\n              ],\n            },\n          },\n          \"size\",\n        ],\n      },\n      \"t\",\n      \"u\",\n      \"v\",\n      {\n        seq: [\n          {\n            alt: [\"first\", \"last\", \"prev\", \"next\", \"min\", \"max\"],\n          },\n          \"_\",\n          \"value\",\n        ],\n      },\n      \"w\",\n      {\n        seq: [\n          {\n            f: 0.5,\n            opt: {\n              seq: [\n                {\n                  alt: [\"min\", \"max\"],\n                },\n                \"_\",\n              ],\n            },\n          },\n          {\n            f: 0.5,\n            opt: {\n              seq: [\n                {\n                  alt: [\"inner\", \"outer\"],\n                },\n                \"_\",\n              ],\n            },\n          },\n          \"width\",\n        ],\n      },\n      \"x\",\n      \"y\",\n      \"z\",\n    ],\n  },\n  generic_function_name: {\n    alt: [\n      {\n        seq: [\n          \"add\",\n          {\n            f: 0.5,\n            opt: {\n              seq: [\n                \"_\",\n                {\n                  alt: [\"item\", \"node\", \"entry\", \"value\"],\n                },\n              ],\n            },\n          },\n        ],\n      },\n      \"append\",\n      \"build\",\n      \"call\",\n      \"configure\",\n      {\n        seq: [\n          \"copy\",\n          {\n            f: 0.5,\n            opt: {\n              seq: [\n                \"_\",\n                {\n                  alt: [\"item\", \"node\", \"entry\", \"layer\", \"file\", \"config\"],\n                },\n              ],\n            },\n          },\n        ],\n      },\n      {\n        seq: [\n          \"create\",\n          {\n            f: 0.5,\n            opt: {\n              seq: [\n                \"_\",\n                {\n                  alt: [\"item\", \"node\", \"entry\", \"layer\", \"file\", \"config\"],\n                },\n              ],\n            },\n          },\n        ],\n      },\n      \"exec\",\n      {\n        seq: [\n          \"find\",\n          {\n            f: 0.5,\n            opt: {\n              seq: [\n                \"_\",\n                {\n                  alt: [\"item\", \"node\", \"entry\", \"layer\", \"file\", \"config\"],\n                },\n              ],\n            },\n          },\n        ],\n      },\n      \"floor\",\n      {\n        seq: [\n          \"get\",\n          {\n            f: 0.5,\n            opt: {\n              seq: [\n                \"_\",\n                {\n                  alt: [\n                    \"state\",\n                    \"item\",\n                    \"node\",\n                    \"entry\",\n                    \"layer\",\n                    \"file\",\n                    \"config\",\n                  ],\n                },\n              ],\n            },\n          },\n        ],\n      },\n      {\n        seq: [\n          \"handle\",\n          {\n            f: 0.5,\n            opt: {\n              seq: [\n                \"_\",\n                {\n                  alt: [\"req\", \"request\", \"res\", \"response\"],\n                },\n              ],\n            },\n          },\n        ],\n      },\n      {\n        seq: [\n          \"init\",\n          {\n            f: 0.5,\n            opt: {\n              seq: [\n                \"_\",\n                {\n                  alt: [\n                    \"state\",\n                    \"item\",\n                    \"node\",\n                    \"entry\",\n                    \"layer\",\n                    \"file\",\n                    \"config\",\n                  ],\n                },\n              ],\n            },\n          },\n        ],\n      },\n      {\n        seq: [\n          {\n            f: 0.5,\n            opt: {\n              seq: [\n                {\n                  f: 0.5,\n                  opt: \"pre\",\n                },\n                \"process\",\n                \"_\",\n              ],\n            },\n          },\n          {\n            f: 0.5,\n            opt: {\n              seq: [\"_\", \"user\"],\n            },\n          },\n          \"input\",\n        ],\n      },\n      {\n        seq: [\n          \"insert\",\n          {\n            f: 0.5,\n            opt: {\n              seq: [\n                \"_\",\n                {\n                  alt: [\"item\", \"node\", \"entry\", \"layer\"],\n                },\n              ],\n            },\n          },\n        ],\n      },\n      \"len\",\n      {\n        seq: [\n          \"load\",\n          {\n            f: 0.5,\n            opt: {\n              seq: [\n                \"_\",\n                {\n                  alt: [\n                    \"state\",\n                    \"item\",\n                    \"node\",\n                    \"entry\",\n                    \"layer\",\n                    \"file\",\n                    \"config\",\n                  ],\n                },\n              ],\n            },\n          },\n        ],\n      },\n      \"main\",\n      {\n        seq: [\n          \"pop\",\n          {\n            f: 0.5,\n            opt: {\n              seq: [\n                \"_\",\n                {\n                  alt: [\"item\", \"node\", \"entry\", \"layer\"],\n                },\n              ],\n            },\n          },\n        ],\n      },\n      {\n        seq: [\n          \"process\",\n          {\n            f: 0.5,\n            opt: {\n              seq: [\n                \"_\",\n                {\n                  alt: [\"item\", \"file\", \"config\"],\n                },\n              ],\n            },\n          },\n        ],\n      },\n      {\n        seq: [\n          \"push\",\n          {\n            f: 0.5,\n            opt: {\n              seq: [\n                \"_\",\n                {\n                  alt: [\"item\", \"node\", \"entry\", \"layer\"],\n                },\n              ],\n            },\n          },\n        ],\n      },\n      {\n        seq: [\n          \"read\",\n          {\n            f: 0.5,\n            opt: {\n              seq: [\n                \"_\",\n                {\n                  alt: [\n                    \"state\",\n                    \"item\",\n                    \"node\",\n                    \"entry\",\n                    \"layer\",\n                    \"file\",\n                    \"config\",\n                  ],\n                },\n              ],\n            },\n          },\n        ],\n      },\n      {\n        seq: [\n          \"remove\",\n          {\n            f: 0.5,\n            opt: {\n              seq: [\n                \"_\",\n                {\n                  alt: [\n                    \"state\",\n                    \"item\",\n                    \"node\",\n                    \"entry\",\n                    \"layer\",\n                    \"file\",\n                    \"config\",\n                  ],\n                },\n              ],\n            },\n          },\n        ],\n      },\n      {\n        seq: [\n          \"run\",\n          {\n            f: 0.5,\n            opt: {\n              seq: [\n                \"_\",\n                {\n                  alt: [\"job\", \"task\"],\n                },\n              ],\n            },\n          },\n        ],\n      },\n      {\n        seq: [\n          \"save\",\n          {\n            f: 0.5,\n            opt: {\n              seq: [\n                \"_\",\n                {\n                  alt: [\n                    \"state\",\n                    \"item\",\n                    \"node\",\n                    \"entry\",\n                    \"layer\",\n                    \"file\",\n                    \"config\",\n                  ],\n                },\n              ],\n            },\n          },\n        ],\n      },\n      {\n        seq: [\n          \"search\",\n          {\n            f: 0.5,\n            opt: {\n              seq: [\n                \"_\",\n                {\n                  alt: [\"item\", \"value\", \"entry\"],\n                },\n              ],\n            },\n          },\n        ],\n      },\n      {\n        seq: [\n          \"serialize\",\n          {\n            f: 0.5,\n            opt: {\n              seq: [\n                \"_\",\n                {\n                  alt: [\"data\", \"config\", \"object\"],\n                },\n              ],\n            },\n          },\n        ],\n      },\n      {\n        seq: [\n          {\n            alt: [\"get\", \"set\"],\n          },\n          \" \",\n          {\n            f: 0.5,\n            opt: {\n              seq: [\n                {\n                  alt: [\"file\", \"data\", \"image\", \"layer\"],\n                },\n                \"_\",\n              ],\n            },\n          },\n          {\n            f: 0.5,\n            opt: {\n              alt: [\"min\", \"max\"],\n            },\n          },\n          \"size\",\n        ],\n      },\n      {\n        seq: [\n          \"store\",\n          {\n            f: 0.5,\n            opt: {\n              seq: [\n                \"_\",\n                {\n                  alt: [\n                    \"state\",\n                    \"item\",\n                    \"node\",\n                    \"entry\",\n                    \"layer\",\n                    \"file\",\n                    \"config\",\n                  ],\n                },\n              ],\n            },\n          },\n        ],\n      },\n      {\n        seq: [\n          \"update\",\n          {\n            f: 0.5,\n            opt: {\n              seq: [\n                \"_\",\n                {\n                  alt: [\n                    \"state\",\n                    \"item\",\n                    \"node\",\n                    \"entry\",\n                    \"layer\",\n                    \"file\",\n                    \"config\",\n                  ],\n                },\n              ],\n            },\n          },\n        ],\n      },\n      {\n        seq: [\n          {\n            f: 0.5,\n            opt: {\n              seq: [\n                {\n                  alt: [\"function\", \"class\"],\n                },\n                \"_\",\n              ],\n            },\n          },\n          \"wrapper\",\n        ],\n      },\n    ],\n  },\n  generic_class_name: {\n    alt: [\n      \"Body\",\n      \"Buffer\",\n      \"Builder\",\n      \"Cache\",\n      \"Channel\",\n      \"Client\",\n      \"Command\",\n      \"Config\",\n      \"Connection\",\n      \"Context\",\n      \"Controller\",\n      \"Decoder\",\n      \"Dir\",\n      \"Encoder\",\n      \"Entry\",\n      \"Error\",\n      \"File\",\n      \"Graph\",\n      \"Handle\",\n      \"Handler\",\n      \"Header\",\n      \"Item\",\n      \"Layer\",\n      \"List\",\n      \"Manager\",\n      \"Matrix\",\n      {\n        seq: [\n          {\n            f: 0.5,\n            opt: {\n              alt: [\"Custom\", \"Example\"],\n            },\n          },\n          \"Model\",\n        ],\n      },\n      \"Mutex\",\n      {\n        seq: [\n          {\n            f: 0.5,\n            opt: {\n              alt: [\"Tree\", \"Graph\", \"List\"],\n            },\n          },\n          \"Node\",\n        ],\n      },\n      \"Parser\",\n      \"Person\",\n      \"Point\",\n      \"Pool\",\n      \"Property\",\n      \"Queue\",\n      \"Request\",\n      \"Resource\",\n      \"Response\",\n      \"Result\",\n      \"Scanner\",\n      \"Server\",\n      \"Size\",\n      \"State\",\n      \"Status\",\n      \"Stream\",\n      \"Table\",\n      \"TestSuite\",\n      \"Tree\",\n      \"Variable\",\n      \"Vector\",\n      \"Worker\",\n    ],\n  },\n} as Rules;\n","// Generated file, do not edit.\n\nimport { type Rules } from \"../ast.ts\";\n\nexport default {\n  kw_False: {\n    cls: \"keyword\",\n    span: \"False\",\n  },\n  kw_None: {\n    cls: \"keyword\",\n    span: \"None\",\n  },\n  kw_Self: {\n    cls: \"keyword\",\n    span: \"Self\",\n  },\n  kw_True: {\n    cls: \"keyword\",\n    span: \"True\",\n  },\n  kw_abstract: {\n    cls: \"keyword\",\n    span: \"abstract\",\n  },\n  kw_alignas: {\n    cls: \"keyword\",\n    span: \"alignas\",\n  },\n  kw_alignof: {\n    cls: \"keyword\",\n    span: \"alignof\",\n  },\n  kw_and: {\n    cls: \"keyword\",\n    span: \"and\",\n  },\n  kw_arguments: {\n    cls: \"keyword\",\n    span: \"arguments\",\n  },\n  kw_as: {\n    cls: \"keyword\",\n    span: \"as\",\n  },\n  kw_asm: {\n    cls: \"keyword\",\n    span: \"asm\",\n  },\n  kw_assert: {\n    cls: \"keyword\",\n    span: \"assert\",\n  },\n  kw_async: {\n    cls: \"keyword\",\n    span: \"async\",\n  },\n  kw_auto: {\n    cls: \"keyword\",\n    span: \"auto\",\n  },\n  kw_await: {\n    cls: \"keyword\",\n    span: \"await\",\n  },\n  kw_become: {\n    cls: \"keyword\",\n    span: \"become\",\n  },\n  kw_bool: {\n    cls: \"keyword\",\n    span: \"bool\",\n  },\n  kw_boolean: {\n    cls: \"keyword\",\n    span: \"boolean\",\n  },\n  kw_box: {\n    cls: \"keyword\",\n    span: \"box\",\n  },\n  kw_break: {\n    cls: \"keyword\",\n    span: \"break\",\n  },\n  kw_byte: {\n    cls: \"keyword\",\n    span: \"byte\",\n  },\n  kw_case: {\n    cls: \"keyword\",\n    span: \"case\",\n  },\n  kw_catch: {\n    cls: \"keyword\",\n    span: \"catch\",\n  },\n  kw_char: {\n    cls: \"keyword\",\n    span: \"char\",\n  },\n  kw_char16_t: {\n    cls: \"keyword\",\n    span: \"char16_t\",\n  },\n  kw_char32_t: {\n    cls: \"keyword\",\n    span: \"char32_t\",\n  },\n  kw_class: {\n    cls: \"keyword\",\n    span: \"class\",\n  },\n  kw_co_await: {\n    cls: \"keyword\",\n    span: \"co_await\",\n  },\n  kw_co_return: {\n    cls: \"keyword\",\n    span: \"co_return\",\n  },\n  kw_co_yield: {\n    cls: \"keyword\",\n    span: \"co_yield\",\n  },\n  kw_concept: {\n    cls: \"keyword\",\n    span: \"concept\",\n  },\n  kw_const: {\n    cls: \"keyword\",\n    span: \"const\",\n  },\n  kw_const_cast: {\n    cls: \"keyword\",\n    span: \"const_cast\",\n  },\n  kw_constexpr: {\n    cls: \"keyword\",\n    span: \"constexpr\",\n  },\n  kw_continue: {\n    cls: \"keyword\",\n    span: \"continue\",\n  },\n  kw_crate: {\n    cls: \"keyword\",\n    span: \"crate\",\n  },\n  kw_debugger: {\n    cls: \"keyword\",\n    span: \"debugger\",\n  },\n  kw_decltype: {\n    cls: \"keyword\",\n    span: \"decltype\",\n  },\n  kw_def: {\n    cls: \"keyword\",\n    span: \"def\",\n  },\n  kw_default: {\n    cls: \"keyword\",\n    span: \"default\",\n  },\n  kw_del: {\n    cls: \"keyword\",\n    span: \"del\",\n  },\n  kw_delete: {\n    cls: \"keyword\",\n    span: \"delete\",\n  },\n  kw_do: {\n    cls: \"keyword\",\n    span: \"do\",\n  },\n  kw_double: {\n    cls: \"keyword\",\n    span: \"double\",\n  },\n  kw_dyn: {\n    cls: \"keyword\",\n    span: \"dyn\",\n  },\n  kw_dynamic_cast: {\n    cls: \"keyword\",\n    span: \"dynamic_cast\",\n  },\n  kw_elif: {\n    cls: \"keyword\",\n    span: \"elif\",\n  },\n  kw_else: {\n    cls: \"keyword\",\n    span: \"else\",\n  },\n  kw_enum: {\n    cls: \"keyword\",\n    span: \"enum\",\n  },\n  kw_except: {\n    cls: \"keyword\",\n    span: \"except\",\n  },\n  kw_explicit: {\n    cls: \"keyword\",\n    span: \"explicit\",\n  },\n  kw_export: {\n    cls: \"keyword\",\n    span: \"export\",\n  },\n  kw_extends: {\n    cls: \"keyword\",\n    span: \"extends\",\n  },\n  kw_extern: {\n    cls: \"keyword\",\n    span: \"extern\",\n  },\n  kw_f32: {\n    cls: \"keyword\",\n    span: \"f32\",\n  },\n  kw_f64: {\n    cls: \"keyword\",\n    span: \"f64\",\n  },\n  kw_false: {\n    cls: \"keyword\",\n    span: \"false\",\n  },\n  kw_final: {\n    cls: \"keyword\",\n    span: \"final\",\n  },\n  kw_finally: {\n    cls: \"keyword\",\n    span: \"finally\",\n  },\n  kw_float: {\n    cls: \"keyword\",\n    span: \"float\",\n  },\n  kw_fn: {\n    cls: \"keyword\",\n    span: \"fn\",\n  },\n  kw_for: {\n    cls: \"keyword\",\n    span: \"for\",\n  },\n  kw_friend: {\n    cls: \"keyword\",\n    span: \"friend\",\n  },\n  kw_from: {\n    cls: \"keyword\",\n    span: \"from\",\n  },\n  kw_function: {\n    cls: \"keyword\",\n    span: \"function\",\n  },\n  kw_global: {\n    cls: \"keyword\",\n    span: \"global\",\n  },\n  kw_goto: {\n    cls: \"keyword\",\n    span: \"goto\",\n  },\n  kw_i128: {\n    cls: \"keyword\",\n    span: \"i128\",\n  },\n  kw_i16: {\n    cls: \"keyword\",\n    span: \"i16\",\n  },\n  kw_i32: {\n    cls: \"keyword\",\n    span: \"i32\",\n  },\n  kw_i64: {\n    cls: \"keyword\",\n    span: \"i64\",\n  },\n  kw_i8: {\n    cls: \"keyword\",\n    span: \"i8\",\n  },\n  kw_if: {\n    cls: \"keyword\",\n    span: \"if\",\n  },\n  kw_impl: {\n    cls: \"keyword\",\n    span: \"impl\",\n  },\n  kw_implements: {\n    cls: \"keyword\",\n    span: \"implements\",\n  },\n  kw_import: {\n    cls: \"keyword\",\n    span: \"import\",\n  },\n  kw_in: {\n    cls: \"keyword\",\n    span: \"in\",\n  },\n  kw_inline: {\n    cls: \"keyword\",\n    span: \"inline\",\n  },\n  kw_instanceof: {\n    cls: \"keyword\",\n    span: \"instanceof\",\n  },\n  kw_int: {\n    cls: \"keyword\",\n    span: \"int\",\n  },\n  kw_interface: {\n    cls: \"keyword\",\n    span: \"interface\",\n  },\n  kw_is: {\n    cls: \"keyword\",\n    span: \"is\",\n  },\n  kw_isize: {\n    cls: \"keyword\",\n    span: \"isize\",\n  },\n  kw_lambda: {\n    cls: \"keyword\",\n    span: \"lambda\",\n  },\n  kw_let: {\n    cls: \"keyword\",\n    span: \"let\",\n  },\n  kw_long: {\n    cls: \"keyword\",\n    span: \"long\",\n  },\n  kw_loop: {\n    cls: \"keyword\",\n    span: \"loop\",\n  },\n  kw_match: {\n    cls: \"keyword\",\n    span: \"match\",\n  },\n  kw_mod: {\n    cls: \"keyword\",\n    span: \"mod\",\n  },\n  kw_move: {\n    cls: \"keyword\",\n    span: \"move\",\n  },\n  kw_mut: {\n    cls: \"keyword\",\n    span: \"mut\",\n  },\n  kw_mutable: {\n    cls: \"keyword\",\n    span: \"mutable\",\n  },\n  kw_namespace: {\n    cls: \"keyword\",\n    span: \"namespace\",\n  },\n  kw_native: {\n    cls: \"keyword\",\n    span: \"native\",\n  },\n  kw_new: {\n    cls: \"keyword\",\n    span: \"new\",\n  },\n  kw_noexcept: {\n    cls: \"keyword\",\n    span: \"noexcept\",\n  },\n  kw_nonlocal: {\n    cls: \"keyword\",\n    span: \"nonlocal\",\n  },\n  kw_not: {\n    cls: \"keyword\",\n    span: \"not\",\n  },\n  kw_null: {\n    cls: \"keyword\",\n    span: \"null\",\n  },\n  kw_nullptr: {\n    cls: \"keyword\",\n    span: \"nullptr\",\n  },\n  kw_operator: {\n    cls: \"keyword\",\n    span: \"operator\",\n  },\n  kw_or: {\n    cls: \"keyword\",\n    span: \"or\",\n  },\n  kw_override: {\n    cls: \"keyword\",\n    span: \"override\",\n  },\n  kw_package: {\n    cls: \"keyword\",\n    span: \"package\",\n  },\n  kw_pass: {\n    cls: \"keyword\",\n    span: \"pass\",\n  },\n  kw_priv: {\n    cls: \"keyword\",\n    span: \"priv\",\n  },\n  kw_private: {\n    cls: \"keyword\",\n    span: \"private\",\n  },\n  kw_protected: {\n    cls: \"keyword\",\n    span: \"protected\",\n  },\n  kw_pub: {\n    cls: \"keyword\",\n    span: \"pub\",\n  },\n  kw_public: {\n    cls: \"keyword\",\n    span: \"public\",\n  },\n  kw_raise: {\n    cls: \"keyword\",\n    span: \"raise\",\n  },\n  kw_ref: {\n    cls: \"keyword\",\n    span: \"ref\",\n  },\n  kw_register: {\n    cls: \"keyword\",\n    span: \"register\",\n  },\n  kw_reinterpret_cast: {\n    cls: \"keyword\",\n    span: \"reinterpret_cast\",\n  },\n  kw_requires: {\n    cls: \"keyword\",\n    span: \"requires\",\n  },\n  kw_return: {\n    cls: \"keyword\",\n    span: \"return\",\n  },\n  kw_self: {\n    cls: \"keyword\",\n    span: \"self\",\n  },\n  kw_short: {\n    cls: \"keyword\",\n    span: \"short\",\n  },\n  kw_signed: {\n    cls: \"keyword\",\n    span: \"signed\",\n  },\n  kw_sizeof: {\n    cls: \"keyword\",\n    span: \"sizeof\",\n  },\n  kw_static: {\n    cls: \"keyword\",\n    span: \"static\",\n  },\n  kw_static_assert: {\n    cls: \"keyword\",\n    span: \"static_assert\",\n  },\n  kw_static_cast: {\n    cls: \"keyword\",\n    span: \"static_cast\",\n  },\n  kw_str: {\n    cls: \"keyword\",\n    span: \"str\",\n  },\n  kw_strictfp: {\n    cls: \"keyword\",\n    span: \"strictfp\",\n  },\n  kw_struct: {\n    cls: \"keyword\",\n    span: \"struct\",\n  },\n  kw_super: {\n    cls: \"keyword\",\n    span: \"super\",\n  },\n  kw_switch: {\n    cls: \"keyword\",\n    span: \"switch\",\n  },\n  kw_synchronized: {\n    cls: \"keyword\",\n    span: \"synchronized\",\n  },\n  kw_template: {\n    cls: \"keyword\",\n    span: \"template\",\n  },\n  kw_this: {\n    cls: \"keyword\",\n    span: \"this\",\n  },\n  kw_thread_local: {\n    cls: \"keyword\",\n    span: \"thread_local\",\n  },\n  kw_throw: {\n    cls: \"keyword\",\n    span: \"throw\",\n  },\n  kw_throws: {\n    cls: \"keyword\",\n    span: \"throws\",\n  },\n  kw_trait: {\n    cls: \"keyword\",\n    span: \"trait\",\n  },\n  kw_transient: {\n    cls: \"keyword\",\n    span: \"transient\",\n  },\n  kw_true: {\n    cls: \"keyword\",\n    span: \"true\",\n  },\n  kw_try: {\n    cls: \"keyword\",\n    span: \"try\",\n  },\n  kw_type: {\n    cls: \"keyword\",\n    span: \"type\",\n  },\n  kw_typedef: {\n    cls: \"keyword\",\n    span: \"typedef\",\n  },\n  kw_typeid: {\n    cls: \"keyword\",\n    span: \"typeid\",\n  },\n  kw_typename: {\n    cls: \"keyword\",\n    span: \"typename\",\n  },\n  kw_typeof: {\n    cls: \"keyword\",\n    span: \"typeof\",\n  },\n  kw_u128: {\n    cls: \"keyword\",\n    span: \"u128\",\n  },\n  kw_u16: {\n    cls: \"keyword\",\n    span: \"u16\",\n  },\n  kw_u32: {\n    cls: \"keyword\",\n    span: \"u32\",\n  },\n  kw_u64: {\n    cls: \"keyword\",\n    span: \"u64\",\n  },\n  kw_u8: {\n    cls: \"keyword\",\n    span: \"u8\",\n  },\n  kw_undefined: {\n    cls: \"keyword\",\n    span: \"undefined\",\n  },\n  kw_union: {\n    cls: \"keyword\",\n    span: \"union\",\n  },\n  kw_unsafe: {\n    cls: \"keyword\",\n    span: \"unsafe\",\n  },\n  kw_unsigned: {\n    cls: \"keyword\",\n    span: \"unsigned\",\n  },\n  kw_use: {\n    cls: \"keyword\",\n    span: \"use\",\n  },\n  kw_using: {\n    cls: \"keyword\",\n    span: \"using\",\n  },\n  kw_usize: {\n    cls: \"keyword\",\n    span: \"usize\",\n  },\n  kw_var: {\n    cls: \"keyword\",\n    span: \"var\",\n  },\n  kw_virtual: {\n    cls: \"keyword\",\n    span: \"virtual\",\n  },\n  kw_void: {\n    cls: \"keyword\",\n    span: \"void\",\n  },\n  kw_volatile: {\n    cls: \"keyword\",\n    span: \"volatile\",\n  },\n  kw_wchar_t: {\n    cls: \"keyword\",\n    span: \"wchar_t\",\n  },\n  kw_where: {\n    cls: \"keyword\",\n    span: \"where\",\n  },\n  kw_while: {\n    cls: \"keyword\",\n    span: \"while\",\n  },\n  kw_with: {\n    cls: \"keyword\",\n    span: \"with\",\n  },\n  kw_yield: {\n    cls: \"keyword\",\n    span: \"yield\",\n  },\n} as Rules;\n","import { compose } from \"../ast.ts\";\nimport _ident from \"./_ident.ts\";\nimport _keywords from \"./_keywords.ts\";\nimport lang_cpp from \"./lang_cpp.ts\";\nimport lang_html_css from \"./lang_html_css.ts\";\nimport lang_javascript from \"./lang_javascript.ts\";\nimport lang_python from \"./lang_python.ts\";\nimport lang_regex from \"./lang_regex.ts\";\nimport lang_rust from \"./lang_rust.ts\";\nimport lang_shell from \"./lang_shell.ts\";\n\nexport const grammar_html_css = compose(lang_html_css, _keywords);\nexport const grammar_cpp = compose(lang_cpp, _keywords, _ident);\nexport const grammar_javascript = compose(lang_javascript, _keywords, _ident);\nexport const grammar_python = compose(lang_python, _keywords, _ident);\nexport const grammar_rust = compose(lang_rust, _keywords, _ident);\nexport const grammar_shell = compose(lang_shell);\nexport const grammar_regex = compose(lang_regex);\n","// Generated file, do not edit.\n\nimport { type Rules } from \"../ast.ts\";\n\nexport default {\n  start: {\n    alt: [\n      {\n        ref: \"html\",\n      },\n      {\n        ref: \"css\",\n      },\n    ],\n  },\n  html: {\n    seq: [\n      {\n        ref: \"html_tag\",\n      },\n      \" \",\n      {\n        ref: \"html_entity\",\n      },\n    ],\n  },\n  html_tag: {\n    ref: \"html_self_closing_tag\",\n  },\n  html_self_closing_tag: {\n    seq: [\n      \"<\",\n      {\n        ref: \"html_ident\",\n      },\n      {\n        ref: \"html_attr_list\",\n      },\n      \"/>\",\n    ],\n  },\n  html_attr_list: {\n    seq: [\n      \" \",\n      {\n        ref: \"html_id_attr\",\n      },\n      \" \",\n      {\n        ref: \"html_class_attr\",\n      },\n      \" \",\n      {\n        ref: \"html_style_attr\",\n      },\n    ],\n  },\n  html_id_attr: {\n    seq: [\n      {\n        cls: \"keyword\",\n        span: \"id\",\n      },\n      \"=\",\n      '\"',\n      {\n        ref: \"css_class_id\",\n      },\n      '\"',\n    ],\n  },\n  html_class_attr: {\n    seq: [\n      {\n        cls: \"keyword\",\n        span: \"class\",\n      },\n      \"=\",\n      '\"',\n      {\n        ref: \"css_class_id\",\n      },\n      '\"',\n    ],\n  },\n  html_style_attr: {\n    seq: [\n      {\n        cls: \"keyword\",\n        span: \"style\",\n      },\n      \"=\",\n      '\"',\n      {\n        ref: \"css_property\",\n      },\n      '\"',\n    ],\n  },\n  html_ident: {\n    cls: \"keyword\",\n    span: {\n      seq: [\n        {\n          f: 0.5,\n          opt: {\n            alt: [\"ns:\", \"my-\"],\n          },\n        },\n        {\n          alt: [\"p\", \"div\", \"span\", \"em\", \"strong\"],\n        },\n      ],\n    },\n  },\n  html_entity: {\n    cls: \"comment\",\n    span: {\n      alt: [\"&nbsp;\", \"&lt;\", \"&gt;\", \"&amp;\", \"&apos;\"],\n    },\n  },\n  css: {\n    ref: \"css_rule\",\n  },\n  css_rule: {\n    seq: [\n      {\n        ref: \"css_selector\",\n      },\n      \" \",\n      \"{\",\n      \" \",\n      {\n        ref: \"css_property_list\",\n      },\n      \" \",\n      \"}\",\n    ],\n  },\n  css_selector: {\n    seq: [\n      {\n        alt: [\n          {\n            ref: \"css_id_selector\",\n          },\n          {\n            ref: \"css_class_selector\",\n          },\n        ],\n      },\n      {\n        f: 0.5,\n        opt: {\n          ref: \"css_pseudo_selector\",\n        },\n      },\n      {\n        f: 0.5,\n        opt: {\n          seq: [\n            {\n              alt: [\" > \", \" + \"],\n            },\n            {\n              alt: [\n                {\n                  ref: \"css_id_selector\",\n                },\n                {\n                  ref: \"css_class_selector\",\n                },\n              ],\n            },\n            {\n              f: 0.5,\n              opt: {\n                ref: \"css_pseudo_selector\",\n              },\n            },\n          ],\n        },\n      },\n    ],\n  },\n  css_id_selector: {\n    seq: [\n      \"#\",\n      {\n        ref: \"css_class_id\",\n      },\n    ],\n  },\n  css_class_selector: {\n    seq: [\n      \".\",\n      {\n        ref: \"css_class_id\",\n      },\n    ],\n  },\n  css_pseudo_selector: {\n    alt: [\n      {\n        ref: \"css_pseudo_class\",\n      },\n      {\n        ref: \"css_pseudo_element\",\n      },\n    ],\n  },\n  css_pseudo_class: {\n    seq: [\n      \":\",\n      {\n        ref: \"css_pseudo_class_name\",\n      },\n    ],\n  },\n  css_pseudo_class_name: {\n    alt: [\n      {\n        seq: [\n          \"dir\",\n          \"(\",\n          {\n            alt: [\"ltr\", \"rtl\"],\n          },\n          \")\",\n        ],\n      },\n      \"hover\",\n      \"active\",\n      \"focus\",\n      \"valid\",\n      \"invalid\",\n      \"required\",\n      \"optional\",\n    ],\n  },\n  css_pseudo_element: {\n    seq: [\n      \"::\",\n      {\n        ref: \"css_pseudo_element_name\",\n      },\n    ],\n  },\n  css_pseudo_element_name: {\n    alt: [\"before\", \"after\", \"backdrop\"],\n  },\n  css_property_list: {\n    seq: [\n      {\n        ref: \"css_property\",\n      },\n      \"; \",\n      {\n        ref: \"css_property\",\n      },\n      \"; \",\n      {\n        ref: \"css_property\",\n      },\n      \";\",\n    ],\n  },\n  css_property: {\n    seq: [\n      {\n        ref: \"css_property_name\",\n      },\n      \": \",\n      {\n        ref: \"css_property_value\",\n      },\n    ],\n  },\n  css_property_name: {\n    alt: [\n      \"color\",\n      \"box-sizing\",\n      {\n        seq: [\n          {\n            f: 0.5,\n            opt: {\n              seq: [\n                {\n                  alt: [\"min\", \"max\"],\n                },\n                \"-\",\n              ],\n            },\n          },\n          {\n            alt: [\"width\", \"height\"],\n          },\n        ],\n      },\n      {\n        seq: [\n          {\n            f: 0.5,\n            opt: {\n              seq: [\n                {\n                  alt: [\"min\", \"max\"],\n                },\n                \"-\",\n              ],\n            },\n          },\n          {\n            alt: [\"inline\", \"block\"],\n          },\n          \"-\",\n          \"size\",\n        ],\n      },\n      \"left\",\n      \"right\",\n      \"top\",\n      \"bottom\",\n      {\n        seq: [\n          \"inset\",\n          {\n            f: 0.5,\n            opt: {\n              seq: [\n                \"-\",\n                {\n                  alt: [\"inline\", \"block\"],\n                },\n                {\n                  f: 0.5,\n                  opt: {\n                    seq: [\n                      \"-\",\n                      {\n                        alt: [\"start\", \"end\"],\n                      },\n                    ],\n                  },\n                },\n              ],\n            },\n          },\n        ],\n      },\n      {\n        seq: [\n          \"flex\",\n          {\n            f: 0.5,\n            opt: {\n              seq: [\n                \"-\",\n                {\n                  alt: [\"direction\", \"grow\", \"shrink\", \"basis\", \"flow\", \"wrap\"],\n                },\n              ],\n            },\n          },\n        ],\n      },\n    ],\n  },\n  css_property_value: {\n    alt: [\n      {\n        ref: \"css_std_value\",\n      },\n      {\n        ref: \"css_var_value\",\n      },\n      {\n        ref: \"css_url_value\",\n      },\n      {\n        ref: \"css_color_value\",\n      },\n    ],\n  },\n  css_std_value: {\n    alt: [\"initial\", \"inherit\", \"revert\", \"unset\"],\n  },\n  css_var_value: {\n    seq: [\n      \"var(\",\n      {\n        ref: \"css_var_id\",\n      },\n      {\n        f: 0.5,\n        opt: {\n          seq: [\n            \",\",\n            \" \",\n            {\n              ref: \"css_color_value\",\n            },\n          ],\n        },\n      },\n      \")\",\n    ],\n  },\n  css_url_value: {\n    cls: \"string\",\n    span: {\n      seq: [\n        \"url\",\n        \"(\",\n        {\n          alt: [\n            {\n              ref: \"css_image_url\",\n            },\n            {\n              ref: \"css_font_url\",\n            },\n          ],\n        },\n        \")\",\n      ],\n    },\n  },\n  css_image_url: {\n    cls: \"string\",\n    span: {\n      seq: [\n        {\n          alt: [\"logo\", \"bg\", \"img\", \"hero\", \"footer\"],\n        },\n        {\n          alt: [\".jpg\", \".png\", \".svg\"],\n        },\n      ],\n    },\n  },\n  css_font_url: {\n    cls: \"string\",\n    span: {\n      seq: [\n        {\n          alt: [\"mono\", \"serif\", \"sans-serif\"],\n        },\n        {\n          alt: [\".woff\", \".ttf\"],\n        },\n      ],\n    },\n  },\n  css_var_id: {\n    seq: [\n      \"--\",\n      {\n        alt: [\"color\", \"x\", \"y\"],\n      },\n    ],\n  },\n  css_color_value: {\n    alt: [\n      {\n        seq: [\n          \"#\",\n          {\n            ref: \"css_hex_digit\",\n          },\n          {\n            ref: \"css_hex_digit\",\n          },\n          {\n            ref: \"css_hex_digit\",\n          },\n        ],\n      },\n      {\n        ref: \"css_named_color\",\n      },\n    ],\n  },\n  css_hex_digit: {\n    alt: [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"],\n  },\n  css_class_id: {\n    alt: [\n      \"main\",\n      \"nav\",\n      \"header\",\n      \"footer\",\n      \"aside\",\n      \"article\",\n      {\n        seq: [\n          {\n            alt: [\"row\", \"col\"],\n          },\n          \"-\",\n          {\n            alt: [\"sm\", \"md\", \"lg\"],\n          },\n        ],\n      },\n      {\n        seq: [\n          {\n            alt: [\"bg\", \"color\"],\n          },\n          \"-\",\n          {\n            ref: \"css_named_color\",\n          },\n        ],\n      },\n    ],\n  },\n  css_named_color: {\n    alt: [\"black\", \"silver\", \"gray\", \"white\", \"red\", \"green\", \"blue\"],\n  },\n} as Rules;\n","// Generated file, do not edit.\n\nimport { type Rules } from \"../ast.ts\";\n\nexport default {\n  start: {\n    ref: \"c_func\",\n  },\n  start_fproto: {\n    seq: [\n      {\n        ref: \"c_func_proto\",\n      },\n      \";\",\n    ],\n  },\n  start_stmt: {\n    ref: \"c_stmt\",\n  },\n  c_func: {\n    seq: [\n      {\n        ref: \"c_func_proto\",\n      },\n      \" \",\n      {\n        ref: \"c_func_body\",\n      },\n    ],\n  },\n  c_func_proto: {\n    seq: [\n      {\n        ref: \"c_type\",\n      },\n      \" \",\n      {\n        ref: \"c_func_id\",\n      },\n      \"(\",\n      {\n        ref: \"c_param_list\",\n      },\n      \")\",\n    ],\n  },\n  c_type: {\n    seq: [\n      {\n        alt: [\n          {\n            ref: \"kw_char\",\n          },\n          {\n            ref: \"kw_int\",\n          },\n          {\n            ref: \"kw_long\",\n          },\n          {\n            ref: \"kw_short\",\n          },\n          {\n            ref: \"kw_void\",\n          },\n        ],\n      },\n      {\n        f: 0.5,\n        opt: {\n          seq: [\n            \"*\",\n            {\n              f: 0.5,\n              opt: \"*\",\n            },\n          ],\n        },\n      },\n    ],\n  },\n  c_param_list: {\n    seq: [\n      {\n        ref: \"c_param\",\n      },\n      {\n        f: 0.5,\n        opt: {\n          seq: [\n            \",\",\n            \" \",\n            {\n              ref: \"c_param\",\n            },\n            {\n              f: 0.5,\n              opt: {\n                seq: [\n                  \",\",\n                  \" \",\n                  {\n                    ref: \"c_param\",\n                  },\n                ],\n              },\n            },\n          ],\n        },\n      },\n    ],\n  },\n  c_param: {\n    seq: [\n      {\n        ref: \"c_type\",\n      },\n      \" \",\n      {\n        f: 0.5,\n        opt: \"&\",\n      },\n      {\n        ref: \"c_var_id\",\n      },\n      {\n        f: 0.5,\n        opt: \"[]\",\n      },\n    ],\n  },\n  c_arg_list: {\n    seq: [\n      {\n        ref: \"c_arg\",\n      },\n      {\n        f: 0.5,\n        opt: {\n          seq: [\n            \",\",\n            \" \",\n            {\n              ref: \"c_arg\",\n            },\n            {\n              f: 0.5,\n              opt: {\n                seq: [\n                  \",\",\n                  \" \",\n                  {\n                    ref: \"c_arg\",\n                  },\n                ],\n              },\n            },\n          ],\n        },\n      },\n    ],\n  },\n  c_arg: {\n    ref: \"c_expr\",\n  },\n  c_func_body: {\n    seq: [\n      \"{\",\n      \" \",\n      {\n        ref: \"c_stmt\",\n      },\n      \" \",\n      \"}\",\n    ],\n  },\n  c_stmt: {\n    alt: [\n      {\n        ref: \"c_var_stmt\",\n      },\n      {\n        ref: \"c_call_stmt\",\n      },\n      {\n        ref: \"c_if_stmt\",\n      },\n      {\n        ref: \"c_return_stmt\",\n      },\n    ],\n  },\n  c_var_stmt: {\n    seq: [\n      {\n        ref: \"c_type\",\n      },\n      \" \",\n      {\n        ref: \"c_var_id\",\n      },\n      \" \",\n      \"=\",\n      \" \",\n      {\n        ref: \"c_expr\",\n      },\n      \";\",\n    ],\n  },\n  c_call_stmt: {\n    seq: [\n      {\n        ref: \"c_func_id\",\n      },\n      \"(\",\n      {\n        ref: \"c_arg_list\",\n      },\n      \")\",\n      \";\",\n    ],\n  },\n  c_if_stmt: {\n    seq: [\n      {\n        ref: \"kw_if\",\n      },\n      \" \",\n      \"(\",\n      {\n        ref: \"c_expr\",\n      },\n      \")\",\n      \" \",\n      \"{\",\n      \" \",\n      {\n        ref: \"c_call_stmt\",\n      },\n      \" \",\n      \"}\",\n    ],\n  },\n  c_return_stmt: {\n    seq: [\n      {\n        ref: \"kw_return\",\n      },\n      \" \",\n      {\n        ref: \"c_expr\",\n      },\n      \";\",\n    ],\n  },\n  c_expr: {\n    alt: [\n      {\n        ref: \"c_unary_exp\",\n      },\n      {\n        ref: \"c_binary_exp\",\n      },\n      {\n        ref: \"c_ternary_exp\",\n      },\n    ],\n  },\n  c_unary_exp: {\n    seq: [\n      {\n        alt: [\n          {\n            seq: [\n              \"(*\",\n              {\n                ref: \"c_var_id\",\n              },\n              \")\",\n            ],\n          },\n          {\n            ref: \"c_var_id\",\n          },\n        ],\n      },\n      {\n        alt: [\n          \"--\",\n          \"++\",\n          {\n            seq: [\n              \"->\",\n              {\n                ref: \"c_var_id\",\n              },\n            ],\n          },\n        ],\n      },\n    ],\n  },\n  c_binary_exp: {\n    seq: [\n      \"(\",\n      {\n        ref: \"c_unary_exp\",\n      },\n      \")\",\n      {\n        alt: [\n          {\n            seq: [\n              \" \",\n              \"+\",\n              \" \",\n              {\n                ref: \"c_var_id\",\n              },\n            ],\n          },\n          {\n            seq: [\n              \" \",\n              \"-\",\n              \" \",\n              {\n                ref: \"c_var_id\",\n              },\n            ],\n          },\n          {\n            seq: [\n              \" \",\n              \"*\",\n              \" \",\n              {\n                ref: \"c_var_id\",\n              },\n            ],\n          },\n          {\n            seq: [\n              \" \",\n              \"/\",\n              \" \",\n              {\n                ref: \"c_var_id\",\n              },\n            ],\n          },\n          {\n            seq: [\n              \" \",\n              \"|\",\n              \" \",\n              {\n                ref: \"c_var_id\",\n              },\n            ],\n          },\n          {\n            seq: [\n              \" \",\n              \"&\",\n              \" \",\n              {\n                ref: \"c_var_id\",\n              },\n            ],\n          },\n          {\n            seq: [\n              \" \",\n              \"<<\",\n              \" \",\n              {\n                ref: \"c_var_id\",\n              },\n            ],\n          },\n          {\n            seq: [\n              \" \",\n              \">>\",\n              \" \",\n              {\n                ref: \"c_var_id\",\n              },\n            ],\n          },\n          {\n            seq: [\n              \" \",\n              \"==\",\n              \" \",\n              {\n                ref: \"c_var_id\",\n              },\n            ],\n          },\n          {\n            seq: [\n              \" \",\n              \"!=\",\n              \" \",\n              {\n                ref: \"c_var_id\",\n              },\n            ],\n          },\n          {\n            seq: [\n              \" \",\n              \">=\",\n              \" \",\n              {\n                ref: \"c_var_id\",\n              },\n            ],\n          },\n          {\n            seq: [\n              \" \",\n              \"<=\",\n              \" \",\n              {\n                ref: \"c_var_id\",\n              },\n            ],\n          },\n        ],\n      },\n    ],\n  },\n  c_ternary_exp: {\n    seq: [\n      {\n        ref: \"c_unary_exp\",\n      },\n      \" \",\n      \"?\",\n      \" \",\n      {\n        ref: \"c_unary_exp\",\n      },\n      \" \",\n      \":\",\n      \" \",\n      {\n        ref: \"c_unary_exp\",\n      },\n    ],\n  },\n  c_func_id: {\n    alt: [\n      {\n        seq: [\n          {\n            f: 0.5,\n            opt: \"std::\",\n          },\n          {\n            ref: \"c_func_id_suffix\",\n          },\n        ],\n      },\n      {\n        ref: \"generic_function_name\",\n      },\n    ],\n  },\n  c_func_id_suffix: {\n    alt: [\n      \"abort\",\n      \"bsearch\",\n      \"calloc\",\n      \"exit\",\n      \"fclose\",\n      \"fflush\",\n      \"fopen\",\n      \"free\",\n      \"malloc\",\n      \"memcmp\",\n      \"memcpy\",\n      \"memmove\",\n      \"memset\",\n      \"printf\",\n      \"qsort\",\n      \"realloc\",\n      \"strcat\",\n      \"strcmp\",\n      \"strcmp\",\n      \"strcpy\",\n      \"strlen\",\n      \"strlen\",\n    ],\n  },\n  c_var_id: {\n    seq: [\n      {\n        f: 0.5,\n        opt: {\n          f: 0.5,\n          opt: {\n            seq: [\n              {\n                alt: [\"p\", \"ptr\"],\n              },\n              \"_\",\n            ],\n          },\n        },\n      },\n      {\n        ref: \"generic_variable_name\",\n      },\n    ],\n  },\n} as Rules;\n","// Generated file, do not edit.\n\nimport { type Rules } from \"../ast.ts\";\n\nexport default {\n  start: {\n    ref: \"js_variable_statement\",\n  },\n  js_variable_statement: {\n    seq: [\n      {\n        alt: [\n          {\n            ref: \"kw_let\",\n          },\n          {\n            ref: \"kw_const\",\n          },\n        ],\n      },\n      \" \",\n      {\n        ref: \"js_var_id\",\n      },\n      \" \",\n      \"=\",\n      \" \",\n      {\n        ref: \"js_primary_exp\",\n      },\n      \";\",\n    ],\n  },\n  js_primary_exp: {\n    alt: [\n      {\n        ref: \"js_literal\",\n      },\n      {\n        ref: \"js_array_literal\",\n      },\n      {\n        ref: \"js_object_literal\",\n      },\n      {\n        ref: \"js_function_exp\",\n      },\n      {\n        ref: \"js_call_exp\",\n      },\n    ],\n  },\n  js_array_literal: {\n    seq: [\n      \"[\",\n      {\n        ref: \"js_primary_exp\",\n      },\n      {\n        f: 0.5,\n        opt: {\n          seq: [\n            \",\",\n            \" \",\n            {\n              ref: \"js_primary_exp\",\n            },\n          ],\n        },\n      },\n      \"]\",\n    ],\n  },\n  js_object_literal: {\n    seq: [\n      \"{\",\n      \" \",\n      {\n        ref: \"js_property_name\",\n      },\n      \":\",\n      \" \",\n      {\n        ref: \"js_property_value\",\n      },\n      \" \",\n      \"}\",\n    ],\n  },\n  js_property_name: {\n    alt: [\n      {\n        ref: \"js_id\",\n      },\n      {\n        seq: [\n          \"[\",\n          {\n            ref: \"js_id\",\n          },\n          \"]\",\n        ],\n      },\n    ],\n  },\n  js_property_value: {\n    ref: \"js_primary_exp\",\n  },\n  js_function_exp: {\n    seq: [\n      {\n        ref: \"js_function_args\",\n      },\n      \" \",\n      \"=>\",\n      \" \",\n      {\n        ref: \"js_primary_exp\",\n      },\n    ],\n  },\n  js_function_args: {\n    alt: [\n      {\n        ref: \"js_single_arg\",\n      },\n      {\n        ref: \"js_multi_args\",\n      },\n    ],\n  },\n  js_single_arg: {\n    ref: \"js_arg\",\n  },\n  js_multi_args: {\n    seq: [\n      \"(\",\n      {\n        ref: \"js_arg\",\n      },\n      \",\",\n      \" \",\n      {\n        ref: \"js_arg\",\n      },\n      {\n        f: 0.5,\n        opt: {\n          seq: [\n            \",\",\n            \" \",\n            {\n              ref: \"js_tail_arg\",\n            },\n          ],\n        },\n      },\n      \")\",\n    ],\n  },\n  js_arg: {\n    seq: [\n      {\n        ref: \"js_var_id\",\n      },\n      {\n        f: 0.5,\n        opt: {\n          seq: [\n            \" \",\n            \"=\",\n            \" \",\n            {\n              ref: \"js_primary_exp\",\n            },\n          ],\n        },\n      },\n    ],\n  },\n  js_tail_arg: {\n    seq: [\n      \"...\",\n      {\n        ref: \"js_var_id\",\n      },\n    ],\n  },\n  js_call_exp: {\n    seq: [\n      {\n        ref: \"js_func_id\",\n      },\n      \"(\",\n      {\n        ref: \"js_primary_exp\",\n      },\n      {\n        f: 0.5,\n        opt: {\n          seq: [\n            \",\",\n            \" \",\n            {\n              ref: \"js_primary_exp\",\n            },\n          ],\n        },\n      },\n      \")\",\n    ],\n  },\n  js_var_id: {\n    ref: \"js_id\",\n  },\n  js_func_id: {\n    alt: [\n      \"all\",\n      \"entries\",\n      \"every\",\n      \"filter\",\n      \"find\",\n      \"has\",\n      \"includes\",\n      \"keys\",\n      \"length\",\n      \"map\",\n      \"size\",\n      \"values\",\n    ],\n  },\n  js_id: {\n    alt: [\n      \"a\",\n      \"b\",\n      \"c\",\n      \"x\",\n      \"y\",\n      \"i\",\n      \"j\",\n      \"char\",\n      \"end\",\n      \"err\",\n      \"event\",\n      \"id\",\n      \"item\",\n      \"key\",\n      \"length\",\n      \"line\",\n      \"list\",\n      \"map\",\n      \"name\",\n      \"path\",\n      \"pos\",\n      \"start\",\n      \"str\",\n      \"text\",\n      \"value\",\n    ],\n  },\n  js_literal: {\n    alt: [\n      {\n        ref: \"kw_null\",\n      },\n      {\n        ref: \"kw_true\",\n      },\n      {\n        ref: \"kw_false\",\n      },\n      {\n        ref: \"js_string_literal\",\n      },\n      {\n        ref: \"js_template_literal\",\n      },\n    ],\n  },\n  js_string_literal: {\n    cls: \"string\",\n    span: {\n      alt: ['\"a\"', '\"b\"', '\"c\"'],\n    },\n  },\n  js_template_literal: {\n    cls: \"string\",\n    span: {\n      seq: [\n        \"`abc=${\",\n        {\n          ref: \"js_id\",\n        },\n        \"}`\",\n      ],\n    },\n  },\n} as Rules;\n","// Generated file, do not edit.\n\nimport { type Rules } from \"../ast.ts\";\n\nexport default {\n  start: {\n    ref: \"python_statement\",\n  },\n  python_statement: {\n    alt: [\n      {\n        ref: \"python_function_definition\",\n      },\n      {\n        ref: \"python_class_definition\",\n      },\n      {\n        ref: \"python_assign\",\n      },\n      {\n        ref: \"python_return\",\n      },\n      {\n        flag: \"comments\",\n        inv: false,\n        cond: {\n          ref: \"python_comment\",\n        },\n      },\n    ],\n  },\n  python_function_definition: {\n    seq: [\n      {\n        ref: \"kw_def\",\n      },\n      \" \",\n      {\n        ref: \"python_function_name\",\n      },\n      \"(\",\n      {\n        ref: \"python_arguments\",\n      },\n      \")\",\n      {\n        flag: \"types\",\n        inv: false,\n        cond: {\n          seq: [\n            \" \",\n            \"->\",\n            \" \",\n            {\n              ref: \"python_type\",\n            },\n          ],\n        },\n      },\n      \":\",\n    ],\n  },\n  python_class_definition: {\n    seq: [\n      {\n        ref: \"kw_class\",\n      },\n      \" \",\n      {\n        ref: \"python_class_name\",\n      },\n      {\n        f: 0.5,\n        opt: {\n          seq: [\n            \"(\",\n            {\n              ref: \"python_class_name\",\n            },\n            \")\",\n          ],\n        },\n      },\n      \":\",\n    ],\n  },\n  python_assign: {\n    seq: [\n      {\n        ref: \"python_variable_name\",\n      },\n      {\n        f: 0.5,\n        opt: {\n          seq: [\n            \"[\",\n            {\n              ref: \"python_literal\",\n            },\n            \"]\",\n          ],\n        },\n      },\n      \" \",\n      \"=\",\n      \" \",\n      {\n        ref: \"python_expression\",\n      },\n    ],\n  },\n  python_return: {\n    seq: [\n      {\n        ref: \"kw_return\",\n      },\n      \" \",\n      {\n        ref: \"python_expression\",\n      },\n    ],\n  },\n  python_arguments: {\n    seq: [\n      {\n        ref: \"python_argument\",\n      },\n      {\n        f: 0.5,\n        opt: {\n          seq: [\n            \",\",\n            \" \",\n            {\n              ref: \"python_argument\",\n            },\n          ],\n        },\n      },\n    ],\n  },\n  python_argument: {\n    seq: [\n      {\n        ref: \"python_variable_name\",\n      },\n      {\n        flag: \"types\",\n        inv: false,\n        cond: {\n          seq: [\n            \":\",\n            \" \",\n            {\n              ref: \"python_type\",\n            },\n          ],\n        },\n      },\n    ],\n  },\n  python_expression: {\n    alt: [\n      {\n        ref: \"python_literal\",\n      },\n      {\n        ref: \"python_unary_operation\",\n      },\n      {\n        ref: \"python_binary_operation\",\n      },\n      {\n        seq: [\n          \"(\",\n          {\n            ref: \"python_expression\",\n          },\n          \")\",\n        ],\n      },\n      {\n        ref: \"python_list_definition\",\n      },\n      {\n        ref: \"python_dict_definition\",\n      },\n      {\n        ref: \"python_function_call\",\n      },\n    ],\n  },\n  python_unary_operation: {\n    alt: [\n      {\n        seq: [\n          {\n            ref: \"python_expression\",\n          },\n          \" \",\n          {\n            ref: \"kw_is\",\n          },\n          \" \",\n          {\n            f: 0.5,\n            opt: {\n              seq: [\n                {\n                  ref: \"kw_not\",\n                },\n                \" \",\n              ],\n            },\n          },\n          {\n            ref: \"kw_None\",\n          },\n        ],\n      },\n      {\n        seq: [\n          {\n            ref: \"kw_not\",\n          },\n          \" \",\n          {\n            ref: \"python_expression\",\n          },\n        ],\n      },\n      {\n        seq: [\n          \"~\",\n          {\n            ref: \"python_expression\",\n          },\n        ],\n      },\n    ],\n  },\n  python_binary_operation: {\n    seq: [\n      {\n        ref: \"python_expression\",\n      },\n      \" \",\n      {\n        ref: \"python_binary_operator\",\n      },\n      \" \",\n      {\n        ref: \"python_expression\",\n      },\n    ],\n  },\n  python_function_call: {\n    seq: [\n      {\n        ref: \"python_function_name\",\n      },\n      \"(\",\n      {\n        ref: \"python_function_arg\",\n      },\n      {\n        f: 0.5,\n        opt: {\n          seq: [\n            \",\",\n            \" \",\n            {\n              ref: \"python_function_arg\",\n            },\n          ],\n        },\n      },\n    ],\n  },\n  python_function_arg: {\n    seq: [\n      {\n        ref: \"python_variable_name\",\n      },\n      \"=\",\n      {\n        ref: \"python_expression\",\n      },\n    ],\n  },\n  python_type: {\n    alt: [\n      {\n        ref: \"python_primitive_type\",\n      },\n      {\n        seq: [\n          \"list[\",\n          {\n            ref: \"python_primitive_type\",\n          },\n          \"]\",\n        ],\n      },\n      {\n        seq: [\n          \"dict[\",\n          {\n            ref: \"python_primitive_type\",\n          },\n          \",\",\n          \" \",\n          {\n            ref: \"python_primitive_type\",\n          },\n          \"]\",\n        ],\n      },\n      {\n        seq: [\n          \"tuple[\",\n          {\n            ref: \"python_primitive_type\",\n          },\n          \",\",\n          \" \",\n          \"...]\",\n        ],\n      },\n      {\n        seq: [\n          {\n            ref: \"python_primitive_type\",\n          },\n          \" \",\n          \"|\",\n          \" \",\n          {\n            ref: \"python_primitive_type\",\n          },\n        ],\n      },\n    ],\n  },\n  python_primitive_type: {\n    alt: [\n      {\n        ref: \"python_class_name\",\n      },\n      {\n        ref: \"kw_int\",\n      },\n      {\n        ref: \"kw_str\",\n      },\n      {\n        ref: \"kw_bool\",\n      },\n      {\n        ref: \"kw_float\",\n      },\n      {\n        ref: \"kw_None\",\n      },\n    ],\n  },\n  python_binary_operator: {\n    alt: [\n      \"+\",\n      \"-\",\n      \"*\",\n      \"/\",\n      \"//\",\n      \"%\",\n      \"**\",\n      \"@\",\n      \"&\",\n      \"|\",\n      \">\",\n      \"<\",\n      \">=\",\n      \"<=\",\n      \"==\",\n      {\n        seq: [\n          {\n            f: 0.5,\n            opt: {\n              seq: [\n                {\n                  ref: \"kw_not\",\n                },\n                \" \",\n              ],\n            },\n          },\n          {\n            ref: \"kw_in\",\n          },\n        ],\n      },\n      \"^\",\n    ],\n  },\n  python_list_definition: {\n    seq: [\n      \"[\",\n      {\n        ref: \"python_expression\",\n      },\n      {\n        f: 0.5,\n        opt: {\n          seq: [\n            \",\",\n            \" \",\n            {\n              ref: \"python_expression\",\n            },\n          ],\n        },\n      },\n      \"]\",\n    ],\n  },\n  python_dict_definition: {\n    seq: [\n      \"{\",\n      {\n        ref: \"python_dict_key_value_pair\",\n      },\n      {\n        f: 0.5,\n        opt: {\n          seq: [\n            \",\",\n            \" \",\n            {\n              ref: \"python_dict_key_value_pair\",\n            },\n          ],\n        },\n      },\n      \"}\",\n    ],\n  },\n  python_dict_key_value_pair: {\n    seq: [\n      {\n        ref: \"python_literal\",\n      },\n      \":\",\n      \" \",\n      {\n        ref: \"python_expression\",\n      },\n    ],\n  },\n  python_literal: {\n    seq: [\n      {\n        flag: \"numbers\",\n        inv: false,\n        cond: {\n          alt: [\n            {\n              ref: \"python_string_literal\",\n            },\n            {\n              ref: \"python_number_literal\",\n            },\n          ],\n        },\n      },\n      {\n        flag: \"numbers\",\n        inv: true,\n        cond: {\n          ref: \"python_string_literal\",\n        },\n      },\n    ],\n  },\n  python_string_literal: {\n    alt: [\n      {\n        cls: \"string\",\n        span: {\n          seq: [\n            '\"',\n            {\n              ref: \"python_string_value\",\n            },\n            '\"',\n          ],\n        },\n      },\n      {\n        cls: \"string\",\n        span: {\n          seq: [\n            \"'\",\n            {\n              ref: \"python_string_value\",\n            },\n            \"'\",\n          ],\n        },\n      },\n      {\n        cls: \"string\",\n        span: {\n          seq: [\n            '\"\"\"',\n            {\n              ref: \"python_string_value\",\n            },\n            '\"\"\"',\n          ],\n        },\n      },\n      {\n        cls: \"string\",\n        span: {\n          seq: [\n            \"'''\",\n            {\n              ref: \"python_string_value\",\n            },\n            \"'''\",\n          ],\n        },\n      },\n    ],\n  },\n  python_variable_name: {\n    ref: \"generic_variable_name\",\n  },\n  python_function_name: {\n    alt: [\n      \"__call__\",\n      \"__enter__\",\n      \"__eq__\",\n      \"__exit__\",\n      \"__getattr__\",\n      \"__getitem__\",\n      \"__init__\",\n      \"__iter__\",\n      \"__len__\",\n      \"__ne__\",\n      \"__new__\",\n      \"__repr__\",\n      \"__setattr__\",\n      \"__setitem__\",\n      \"__str__\",\n      {\n        ref: \"generic_function_name\",\n      },\n    ],\n  },\n  python_class_name: {\n    ref: \"generic_class_name\",\n  },\n  python_string_value: {\n    alt: [\n      \".\",\n      \"abc\",\n      \"channels_first\",\n      \"channels_last\",\n      \"constant\",\n      \"dtype\",\n      \"int\",\n      \"jax\",\n      \"name\",\n      \"same\",\n      \"shape\",\n      \"tensorflow\",\n      \"torch\",\n      \"uvw\",\n      \"valid\",\n      \"x\",\n      \"xyz\",\n      \"zeros\",\n    ],\n  },\n  python_number_literal: {\n    cls: \"number\",\n    span: {\n      alt: [\n        \"1\",\n        \"0.001\",\n        \"0.01\",\n        \"0.1\",\n        \"0.2\",\n        \"0.25\",\n        \"0.3\",\n        \"0.4\",\n        \"0.5\",\n        \"0.6\",\n        \"0.7\",\n        \"0.8\",\n        \"0.9\",\n        \"1.5\",\n        \"10\",\n        \"100\",\n        \"1000\",\n        \"1024\",\n        \"11\",\n        \"12\",\n        \"128\",\n        \"13\",\n        \"14\",\n        \"15\",\n        \"16\",\n        \"17\",\n        \"1e-05\",\n        \"1e-06\",\n        \"2\",\n        \"20\",\n        \"200\",\n        \"24\",\n        \"25\",\n        \"255\",\n        \"256\",\n        \"3\",\n        \"30\",\n        \"32\",\n        \"4\",\n        \"40\",\n        \"5\",\n        \"50.0\",\n        \"512\",\n        \"6\",\n        \"60\",\n        \"64\",\n        \"7\",\n        \"8\",\n        \"9\",\n      ],\n    },\n  },\n  python_comment: {\n    cls: \"comment\",\n    span: {\n      alt: [\n        \"# type: ignore\",\n        \"# TODO: fix\",\n        \"# TODO: implement\",\n        \"#!/usr/bin/env python\",\n      ],\n    },\n  },\n} as Rules;\n","// Generated file, do not edit.\n\nimport { type Rules } from \"../ast.ts\";\n\nexport default {\n  start: {\n    ref: \"rust_statement\",\n  },\n  rust_statement: {\n    alt: [\n      {\n        ref: \"rust_function_definition\",\n      },\n      {\n        ref: \"rust_struct_definition\",\n      },\n      {\n        ref: \"rust_assign\",\n      },\n      {\n        ref: \"rust_return\",\n      },\n      {\n        flag: \"comments\",\n        inv: false,\n        cond: {\n          ref: \"rust_comment\",\n        },\n      },\n    ],\n  },\n  rust_function_definition: {\n    seq: [\n      {\n        ref: \"kw_fn\",\n      },\n      \" \",\n      {\n        ref: \"rust_function_name\",\n      },\n      \"(\",\n      {\n        ref: \"rust_arguments\",\n      },\n      \")\",\n      {\n        f: 0.5,\n        opt: {\n          seq: [\n            \" \",\n            \"->\",\n            \" \",\n            {\n              ref: \"rust_type\",\n            },\n          ],\n        },\n      },\n      \"{\",\n    ],\n  },\n  rust_struct_definition: {\n    seq: [\n      {\n        f: 0.5,\n        opt: {\n          seq: [\n            {\n              ref: \"kw_pub\",\n            },\n            \" \",\n          ],\n        },\n      },\n      {\n        ref: \"kw_struct\",\n      },\n      \" \",\n      {\n        ref: \"rust_struct_name\",\n      },\n      \" \",\n      \"{\",\n    ],\n  },\n  rust_assign: {\n    seq: [\n      {\n        ref: \"kw_let\",\n      },\n      \" \",\n      {\n        ref: \"rust_variable_name\",\n      },\n      {\n        f: 0.5,\n        opt: {\n          seq: [\n            \":\",\n            \" \",\n            {\n              ref: \"rust_type\",\n            },\n          ],\n        },\n      },\n      \" \",\n      \"=\",\n      \" \",\n      {\n        ref: \"rust_expression\",\n      },\n      \";\",\n    ],\n  },\n  rust_return: {\n    seq: [\n      {\n        ref: \"kw_return\",\n      },\n      \" \",\n      {\n        ref: \"rust_expression\",\n      },\n      \";\",\n    ],\n  },\n  rust_arguments: {\n    seq: [\n      {\n        ref: \"rust_argument\",\n      },\n      {\n        f: 0.5,\n        opt: {\n          seq: [\n            \",\",\n            \" \",\n            {\n              ref: \"rust_argument\",\n            },\n          ],\n        },\n      },\n    ],\n  },\n  rust_argument: {\n    seq: [\n      {\n        ref: \"rust_variable_name\",\n      },\n      \":\",\n      \" \",\n      {\n        ref: \"rust_type\",\n      },\n    ],\n  },\n  rust_expression: {\n    alt: [\n      {\n        ref: \"rust_literal\",\n      },\n      {\n        ref: \"rust_unary_operation\",\n      },\n      {\n        ref: \"rust_binary_operation\",\n      },\n      {\n        seq: [\n          \"(\",\n          {\n            ref: \"rust_expression\",\n          },\n          \")\",\n        ],\n      },\n      {\n        ref: \"rust_array_definition\",\n      },\n      {\n        ref: \"rust_struct_instantiation\",\n      },\n      {\n        ref: \"rust_function_call\",\n      },\n    ],\n  },\n  rust_unary_operation: {\n    alt: [\n      {\n        seq: [\n          \"!\",\n          {\n            ref: \"rust_expression\",\n          },\n        ],\n      },\n      {\n        seq: [\n          \"-\",\n          {\n            ref: \"rust_expression\",\n          },\n        ],\n      },\n      {\n        seq: [\n          \"*\",\n          {\n            ref: \"rust_expression\",\n          },\n        ],\n      },\n      {\n        seq: [\n          \"&\",\n          {\n            ref: \"rust_expression\",\n          },\n        ],\n      },\n    ],\n  },\n  rust_binary_operation: {\n    seq: [\n      {\n        ref: \"rust_expression\",\n      },\n      \" \",\n      {\n        ref: \"rust_binary_operator\",\n      },\n      \" \",\n      {\n        ref: \"rust_expression\",\n      },\n    ],\n  },\n  rust_function_call: {\n    seq: [\n      {\n        ref: \"rust_function_name\",\n      },\n      \"(\",\n      {\n        f: 0.5,\n        opt: {\n          ref: \"rust_function_args\",\n        },\n      },\n      \")\",\n    ],\n  },\n  rust_function_args: {\n    seq: [\n      {\n        ref: \"rust_expression\",\n      },\n      {\n        f: 0.5,\n        opt: {\n          seq: [\n            \",\",\n            \" \",\n            {\n              ref: \"rust_expression\",\n            },\n          ],\n        },\n      },\n    ],\n  },\n  rust_type: {\n    alt: [\n      {\n        ref: \"rust_primitive_type\",\n      },\n      {\n        seq: [\n          \"&\",\n          {\n            f: 0.5,\n            opt: {\n              seq: [\n                {\n                  ref: \"kw_mut\",\n                },\n                \" \",\n              ],\n            },\n          },\n          {\n            ref: \"rust_type\",\n          },\n        ],\n      },\n      {\n        seq: [\n          {\n            ref: \"rust_type\",\n          },\n          \" \",\n          \"<\",\n          {\n            ref: \"rust_type\",\n          },\n          {\n            f: 0.5,\n            opt: {\n              seq: [\n                \",\",\n                \" \",\n                {\n                  ref: \"rust_type\",\n                },\n              ],\n            },\n          },\n          \">\",\n        ],\n      },\n      {\n        seq: [\n          \"[\",\n          {\n            ref: \"rust_type\",\n          },\n          \";\",\n          \" \",\n          {\n            ref: \"rust_number_literal\",\n          },\n          \"]\",\n        ],\n      },\n      {\n        seq: [\n          \"(\",\n          {\n            ref: \"rust_type\",\n          },\n          {\n            f: 0.5,\n            opt: {\n              seq: [\n                \",\",\n                \" \",\n                {\n                  ref: \"rust_type\",\n                },\n              ],\n            },\n          },\n          \")\",\n        ],\n      },\n    ],\n  },\n  rust_primitive_type: {\n    alt: [\n      {\n        ref: \"rust_struct_name\",\n      },\n      {\n        ref: \"kw_u32\",\n      },\n      {\n        ref: \"kw_u64\",\n      },\n      {\n        ref: \"kw_i32\",\n      },\n      {\n        ref: \"kw_i64\",\n      },\n      {\n        ref: \"kw_f32\",\n      },\n      {\n        ref: \"kw_f64\",\n      },\n      {\n        ref: \"kw_usize\",\n      },\n      {\n        ref: \"kw_isize\",\n      },\n      {\n        ref: \"kw_bool\",\n      },\n      {\n        ref: \"kw_char\",\n      },\n      {\n        ref: \"kw_str\",\n      },\n      \"String\",\n    ],\n  },\n  rust_binary_operator: {\n    alt: [\n      \"+\",\n      \"-\",\n      \"*\",\n      \"/\",\n      \"%\",\n      \"&&\",\n      \"||\",\n      \"==\",\n      \"!=\",\n      \"<\",\n      \"<=\",\n      \">\",\n      \">=\",\n      \"<<\",\n      \">>\",\n      \"&\",\n      \"|\",\n      \"^\",\n    ],\n  },\n  rust_array_definition: {\n    alt: [\n      {\n        seq: [\n          \"[\",\n          {\n            ref: \"rust_expression\",\n          },\n          {\n            f: 0.5,\n            opt: {\n              seq: [\n                \",\",\n                \" \",\n                {\n                  ref: \"rust_expression\",\n                },\n              ],\n            },\n          },\n          \"]\",\n        ],\n      },\n      {\n        seq: [\n          \"[\",\n          {\n            ref: \"rust_expression\",\n          },\n          \";\",\n          \" \",\n          {\n            ref: \"rust_number_literal\",\n          },\n          \"]\",\n        ],\n      },\n    ],\n  },\n  rust_struct_instantiation: {\n    seq: [\n      {\n        ref: \"rust_struct_name\",\n      },\n      \" \",\n      \"{\",\n      \" \",\n      {\n        ref: \"rust_struct_fields\",\n      },\n      \" \",\n      \"}\",\n    ],\n  },\n  rust_struct_fields: {\n    seq: [\n      {\n        ref: \"rust_field_assignment\",\n      },\n      {\n        f: 0.5,\n        opt: {\n          seq: [\n            \",\",\n            \" \",\n            {\n              ref: \"rust_field_assignment\",\n            },\n          ],\n        },\n      },\n    ],\n  },\n  rust_field_assignment: {\n    seq: [\n      {\n        ref: \"rust_variable_name\",\n      },\n      \":\",\n      \" \",\n      {\n        ref: \"rust_expression\",\n      },\n    ],\n  },\n  rust_literal: {\n    alt: [\n      {\n        ref: \"rust_string_literal\",\n      },\n      {\n        ref: \"rust_number_literal\",\n      },\n      {\n        ref: \"rust_boolean_literal\",\n      },\n      {\n        ref: \"rust_char_literal\",\n      },\n    ],\n  },\n  rust_string_literal: {\n    cls: \"string\",\n    span: {\n      seq: [\n        '\"',\n        {\n          ref: \"rust_string_value\",\n        },\n        '\"',\n      ],\n    },\n  },\n  rust_char_literal: {\n    cls: \"string\",\n    span: {\n      seq: [\n        \"'\",\n        {\n          ref: \"rust_char_value\",\n        },\n        \"'\",\n      ],\n    },\n  },\n  rust_boolean_literal: {\n    alt: [\n      {\n        ref: \"kw_true\",\n      },\n      {\n        ref: \"kw_false\",\n      },\n    ],\n  },\n  rust_variable_name: {\n    ref: \"generic_variable_name\",\n  },\n  rust_function_name: {\n    ref: \"generic_function_name\",\n  },\n  rust_struct_name: {\n    ref: \"generic_class_name\",\n  },\n  rust_string_value: {\n    alt: [\n      \"\",\n      \"Hello, world!\",\n      \"Error\",\n      \"OK\",\n      \"Test\",\n      \"Name\",\n      \"Value\",\n      \"Message\",\n      \"Key\",\n      \"Input\",\n      \"Output\",\n      \"Data\",\n      \"Result\",\n      \"Success\",\n      \"Failure\",\n      \"Warning\",\n      \"Info\",\n      \"Debug\",\n      \"Rust\",\n      \"Sample\",\n    ],\n  },\n  rust_char_value: {\n    alt: [\"a\", \"b\", \"c\", \"x\", \"y\", \"z\", \"0\", \"1\", \"2\", \"\\\\n\", \"\\\\t\", \"\\\\r\"],\n  },\n  rust_number_literal: {\n    cls: \"number\",\n    span: {\n      alt: [\n        \"0\",\n        \"1\",\n        \"2\",\n        \"3\",\n        \"4\",\n        \"5\",\n        \"10\",\n        \"100\",\n        \"123i32\",\n        \"0.0\",\n        \"0.5\",\n        \"1.5\",\n        \"2.5_f64\",\n        \"3.14f32\",\n        \"42\",\n        \"255\",\n        \"256\",\n        \"1024\",\n        \"1_000_000\",\n      ],\n    },\n  },\n  rust_comment: {\n    cls: \"comment\",\n    span: {\n      alt: [\n        {\n          seq: [\n            \"//\",\n            \" \",\n            {\n              ref: \"rust_comment_text\",\n            },\n          ],\n        },\n        {\n          seq: [\n            \"//!\",\n            \" \",\n            {\n              ref: \"rust_comment_text\",\n            },\n          ],\n        },\n        {\n          seq: [\n            \"/*\",\n            \" \",\n            {\n              ref: \"rust_comment_text\",\n            },\n            \" \",\n            \"*/\",\n          ],\n        },\n        {\n          seq: [\n            \"/*!\",\n            \" \",\n            {\n              ref: \"rust_comment_text\",\n            },\n            \" \",\n            \"*/\",\n          ],\n        },\n      ],\n    },\n  },\n  rust_comment_text: {\n    alt: [\n      \"TODO: Implement error handling\",\n      \"FIXME: Potential race condition\",\n      \"Unsafe: Raw pointer manipulation\",\n      \"Optimize memory allocation\",\n      \"Ensure thread safety\",\n      \"Zero-copy deserialization\",\n      \"Handle lifetime issues\",\n      \"Implement Drop trait\",\n      \"Lock-free data structure\",\n      \"FFI: C interop\",\n      \"Benchmark performance\",\n      \"Async/await transformation\",\n      \"Check for integer overflow\",\n    ],\n  },\n} as Rules;\n","// Generated file, do not edit.\n\nimport { type Rules } from \"../ast.ts\";\n\nexport default {\n  start: {\n    seq: [\n      {\n        ref: \"shell_command\",\n      },\n      \";\",\n    ],\n  },\n  shell_command: {\n    seq: [\n      {\n        ref: \"command_name\",\n      },\n      \" \",\n      {\n        ref: \"arg_list\",\n      },\n      {\n        f: 0.5,\n        opt: {\n          seq: [\n            \" \",\n            {\n              alt: [\n                {\n                  ref: \"redirect_suffix\",\n                },\n                {\n                  ref: \"pipe_suffix\",\n                },\n              ],\n            },\n          ],\n        },\n      },\n    ],\n  },\n  redirect_suffix: {\n    seq: [\n      {\n        alt: [\">\", \">>\"],\n      },\n      \" \",\n      {\n        ref: \"file_name\",\n      },\n    ],\n  },\n  pipe_suffix: {\n    seq: [\n      \"|\",\n      \" \",\n      {\n        ref: \"command_name\",\n      },\n      {\n        f: 0.5,\n        opt: {\n          seq: [\n            \" \",\n            {\n              ref: \"short_arg\",\n            },\n          ],\n        },\n      },\n      {\n        f: 0.5,\n        opt: {\n          seq: [\n            \" \",\n            {\n              ref: \"short_arg\",\n            },\n          ],\n        },\n      },\n    ],\n  },\n  arg_list: {\n    seq: [\n      {\n        ref: \"short_arg\",\n      },\n      {\n        f: 0.5,\n        opt: {\n          seq: [\n            \" \",\n            {\n              ref: \"short_arg\",\n            },\n          ],\n        },\n      },\n      \" \",\n      {\n        ref: \"long_arg\",\n      },\n      {\n        f: 0.5,\n        opt: {\n          seq: [\n            \" \",\n            {\n              ref: \"long_arg\",\n            },\n          ],\n        },\n      },\n      \" \",\n      {\n        alt: [\n          {\n            ref: \"file_arg\",\n          },\n          {\n            ref: \"wildcard_arg\",\n          },\n          {\n            ref: \"var_arg\",\n          },\n          {\n            ref: \"string_arg\",\n          },\n        ],\n      },\n    ],\n  },\n  short_arg: {\n    alt: [\"-a\", \"-b\", \"-c\", \"-d\", \"-e\", \"-f\", \"-h\", \"-l\", \"-v\"],\n  },\n  long_arg: {\n    alt: [\n      \"--color\",\n      {\n        seq: [\n          \"--conf\",\n          \"=\",\n          {\n            ref: \"file_name\",\n          },\n        ],\n      },\n      {\n        seq: [\n          \"--dir\",\n          \"=\",\n          {\n            ref: \"file_name\",\n          },\n        ],\n      },\n      {\n        seq: [\n          \"--dump\",\n          \"=\",\n          {\n            ref: \"file_name\",\n          },\n        ],\n      },\n      {\n        seq: [\n          \"--file\",\n          \"=\",\n          {\n            ref: \"file_name\",\n          },\n        ],\n      },\n      \"--help\",\n      {\n        seq: [\n          \"--home\",\n          \"=\",\n          {\n            ref: \"file_name\",\n          },\n        ],\n      },\n      {\n        seq: [\n          \"--in\",\n          \"=\",\n          {\n            ref: \"file_name\",\n          },\n        ],\n      },\n      {\n        seq: [\n          \"--list\",\n          \"=\",\n          {\n            ref: \"file_name\",\n          },\n        ],\n      },\n      {\n        seq: [\n          \"--log\",\n          \"=\",\n          {\n            ref: \"file_name\",\n          },\n        ],\n      },\n      \"--null\",\n      {\n        seq: [\n          \"--out\",\n          \"=\",\n          {\n            ref: \"file_name\",\n          },\n        ],\n      },\n      \"--quiet\",\n      \"--version\",\n    ],\n  },\n  file_arg: {\n    ref: \"file_name\",\n  },\n  wildcard_arg: {\n    seq: [\n      \"*\",\n      \".\",\n      {\n        alt: [\n          {\n            ref: \"file_ext_name\",\n          },\n          {\n            seq: [\n              \"{\",\n              {\n                ref: \"file_ext_name\",\n              },\n              \",\",\n              {\n                ref: \"file_ext_name\",\n              },\n              \"}\",\n            ],\n          },\n        ],\n      },\n    ],\n  },\n  var_arg: {\n    alt: [\n      {\n        seq: [\n          \"$\",\n          \"{\",\n          {\n            ref: \"var_name\",\n          },\n          \"}\",\n        ],\n      },\n      {\n        seq: [\n          \"$\",\n          \"(\",\n          {\n            ref: \"command_name\",\n          },\n          \" \",\n          {\n            ref: \"file_arg\",\n          },\n          \")\",\n        ],\n      },\n      {\n        seq: [\"$\", \"(\", \"pwd\", \")\"],\n      },\n    ],\n  },\n  string_arg: {\n    cls: \"string\",\n    span: {\n      seq: [\n        '\"',\n        \"$\",\n        \"{\",\n        {\n          ref: \"var_name\",\n        },\n        \"}\",\n        '\"',\n      ],\n    },\n  },\n  dir_name: {\n    alt: [\n      \"~\",\n      \"/bin\",\n      \"/home\",\n      \"/lib\",\n      \"/mnt\",\n      \"/opt\",\n      \"/tmp\",\n      \"/usr\",\n      \"/usr/bin\",\n      \"/usr/include\",\n      \"/usr/lib\",\n      \"/var\",\n      \"/var/lib\",\n      \"/var/log\",\n      \"/var/tmp\",\n      \"~/.cache\",\n      \"~/.config\",\n      \"~/.local\",\n      \"~/data\",\n      \"~/docs\",\n      \"~/work\",\n    ],\n  },\n  file_name: {\n    alt: [\n      \"/dev/null\",\n      {\n        alt: [\n          {\n            seq: [\n              {\n                ref: \"dir_name\",\n              },\n              \"/\",\n              {\n                seq: [\n                  {\n                    ref: \"file_base_name\",\n                  },\n                  \".\",\n                  {\n                    ref: \"file_ext_name\",\n                  },\n                ],\n              },\n            ],\n          },\n          \".env\",\n        ],\n      },\n    ],\n  },\n  var_name: {\n    alt: [\n      \"a\",\n      \"addr\",\n      \"b\",\n      \"c\",\n      \"date\",\n      \"db\",\n      \"dir\",\n      \"env\",\n      \"ext\",\n      \"file\",\n      \"host\",\n      \"in\",\n      \"job\",\n      \"lang\",\n      \"out\",\n      \"path\",\n      \"root\",\n      \"shell\",\n      \"time\",\n      \"user\",\n    ],\n  },\n  file_base_name: {\n    alt: [\n      \"a\",\n      \"b\",\n      \"c\",\n      \"close\",\n      \"config\",\n      \"data\",\n      \"db\",\n      \"delete\",\n      \"file\",\n      \"groups\",\n      \"hosts\",\n      \"index\",\n      \"info\",\n      \"input\",\n      \"list\",\n      \"main\",\n      \"open\",\n      \"output\",\n      \"print\",\n      \"read\",\n      \"receive\",\n      \"scan\",\n      \"send\",\n      \"source\",\n      \"users\",\n      \"write\",\n    ],\n  },\n  file_ext_name: {\n    alt: [\n      \"c\",\n      \"bash\",\n      \"bin\",\n      \"cpp\",\n      \"err\",\n      \"h\",\n      \"hpp\",\n      \"java\",\n      \"js\",\n      \"json\",\n      \"lib\",\n      \"log\",\n      \"md\",\n      \"o\",\n      \"out\",\n      \"pdf\",\n      \"ps\",\n      \"py\",\n      \"sh\",\n      \"so\",\n      \"ts\",\n      \"txt\",\n      \"unit\",\n    ],\n  },\n  command_name: {\n    cls: \"keyword\",\n    span: {\n      alt: [\n        \"cargo\",\n        \"cat\",\n        \"cd\",\n        \"chmod\",\n        \"chown\",\n        \"cp\",\n        \"cut\",\n        \"df\",\n        \"docker\",\n        \"du\",\n        \"echo\",\n        \"gcc\",\n        \"git\",\n        \"grep\",\n        \"gunzip\",\n        \"gzip\",\n        \"head\",\n        \"kill\",\n        \"less\",\n        \"ls\",\n        \"make\",\n        \"man\",\n        \"mkdir\",\n        \"mv\",\n        \"nmap\",\n        \"node\",\n        \"npm\",\n        \"ping\",\n        \"ps\",\n        \"pwd\",\n        \"rm\",\n        \"rmdir\",\n        \"scp\",\n        \"sed\",\n        \"sort\",\n        \"ssh\",\n        \"tail\",\n        \"tar\",\n        \"time\",\n        \"top\",\n        \"uname\",\n        \"uniq\",\n        \"unzip\",\n        \"uptime\",\n        \"vi\",\n        \"wc\",\n        \"zip\",\n      ],\n    },\n  },\n} as Rules;\n","// Generated file, do not edit.\n\nimport { type Rules } from \"../ast.ts\";\n\nexport default {\n  start: {\n    seq: [\n      \"/\",\n      {\n        f: 0.5,\n        opt: \"^\",\n      },\n      {\n        ref: \"item\",\n      },\n      {\n        f: 0.5,\n        opt: \"$\",\n      },\n      \"/\",\n      {\n        f: 0.5,\n        opt: \"i\",\n      },\n      {\n        f: 0.5,\n        opt: \"g\",\n      },\n    ],\n  },\n  item: {\n    seq: [\n      {\n        alt: [\n          {\n            ref: \"group\",\n          },\n          {\n            ref: \"union\",\n          },\n        ],\n      },\n      {\n        ref: \"quantifier\",\n      },\n    ],\n  },\n  group: {\n    seq: [\n      \"(\",\n      {\n        f: 0.5,\n        opt: {\n          alt: [\n            {\n              ref: \"group_name\",\n            },\n            \"?:\",\n          ],\n        },\n      },\n      {\n        ref: \"group_item\",\n      },\n      \")\",\n    ],\n  },\n  group_name: {\n    seq: [\n      \"?<\",\n      {\n        alt: [\"name\", \"item\", \"email\", \"url\", \"param\", \"id\"],\n      },\n      \">\",\n    ],\n  },\n  group_item: {\n    alt: [\n      {\n        ref: \"char_class\",\n      },\n      {\n        ref: \"char\",\n      },\n    ],\n  },\n  union: {\n    seq: [\n      {\n        ref: \"union_item\",\n      },\n      \"|\",\n      {\n        ref: \"union_item\",\n      },\n    ],\n  },\n  union_item: {\n    alt: [\n      {\n        ref: \"char_class\",\n      },\n      {\n        ref: \"char\",\n      },\n    ],\n  },\n  char_class: {\n    seq: [\n      \"[\",\n      {\n        f: 0.5,\n        opt: \"^\",\n      },\n      {\n        f: 0.5,\n        opt: \"-\",\n      },\n      {\n        f: 0.5,\n        opt: \".\",\n      },\n      {\n        f: 0.5,\n        opt: {\n          ref: \"escaped_char\",\n        },\n      },\n      {\n        alt: [\"a-z\", \"a-f\"],\n      },\n      \"]\",\n    ],\n  },\n  char: {\n    alt: [\n      \".\",\n      \"\\\\d\",\n      \"\\\\s\",\n      {\n        seq: [\n          {\n            ref: \"literal_char\",\n          },\n          {\n            f: 0.5,\n            opt: {\n              seq: [\n                {\n                  ref: \"literal_char\",\n                },\n                {\n                  f: 0.5,\n                  opt: {\n                    ref: \"literal_char\",\n                  },\n                },\n              ],\n            },\n          },\n        ],\n      },\n      {\n        ref: \"escaped_char\",\n      },\n      {\n        ref: \"unicode_char\",\n      },\n    ],\n  },\n  literal_char: {\n    alt: [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"],\n  },\n  escaped_char: {\n    alt: [\"\\\\t\", \"\\\\n\"],\n  },\n  unicode_char: {\n    seq: [\n      {\n        alt: [\"\\\\p\", \"\\\\P\"],\n      },\n      \"{\",\n      {\n        ref: \"unicode_category\",\n      },\n      \"}\",\n    ],\n  },\n  unicode_category: {\n    alt: [\"L\", \"Lu\", \"Ll\", \"Lt\", \"N\", \"Z\"],\n  },\n  quantifier: {\n    alt: [\"*\", \"+\", \"?\"],\n  },\n} as Rules;\n","import { Enum, type EnumItem } from \"@keybr/lang\";\nimport { type RNG } from \"@keybr/rand\";\nimport { type StyledText } from \"@keybr/textinput\";\nimport { type Grammar } from \"./ast.ts\";\nimport { findFlags } from \"./find-flags.ts\";\nimport { type Flags } from \"./flags.ts\";\nimport { generate } from \"./generate.ts\";\nimport { Output } from \"./output.ts\";\nimport {\n  grammar_cpp,\n  grammar_html_css,\n  grammar_javascript,\n  grammar_python,\n  grammar_regex,\n  grammar_rust,\n  grammar_shell,\n} from \"./syntax/grammars.ts\";\nimport { validate } from \"./validate.ts\";\n\nexport class Syntax implements EnumItem {\n  static readonly HTML = new Syntax(\"html\", \"HTML\", grammar_html_css, \"html\");\n  static readonly CSS = new Syntax(\"css\", \"CSS\", grammar_html_css, \"css\");\n  static readonly CPP = new Syntax(\"cpp\", \"C/C++\", grammar_cpp);\n  static readonly CPP_FPROTO = new Syntax(\n    \"cpp_fproto\",\n    \"C/C++ Function Prototypes\",\n    grammar_cpp,\n    \"start_fproto\",\n  );\n  static readonly CPP_STMT = new Syntax(\n    \"cpp_stmt\",\n    \"C/C++ Statements\",\n    grammar_cpp,\n    \"start_stmt\",\n  );\n  static readonly JAVASCRIPT_EXP = new Syntax(\n    \"javascript_exp\",\n    \"Java Script Expressions\",\n    grammar_javascript,\n  );\n  static readonly PYTHON = new Syntax(\"python\", \"Python\", grammar_python);\n  static readonly RUST = new Syntax(\"rust\", \"Rust\", grammar_rust);\n  static readonly SHELL = new Syntax(\"shell\", \"Shell\", grammar_shell);\n  static readonly REGEX = new Syntax(\"regex\", \"Regex\", grammar_regex);\n\n  static readonly ALL = new Enum<Syntax>(\n    Syntax.HTML,\n    Syntax.CSS,\n    Syntax.CPP,\n    Syntax.CPP_FPROTO,\n    Syntax.CPP_STMT,\n    Syntax.JAVASCRIPT_EXP,\n    Syntax.PYTHON,\n    Syntax.RUST,\n    Syntax.SHELL,\n    Syntax.REGEX,\n  );\n\n  readonly id: string;\n  readonly name: string;\n  readonly grammar: Grammar;\n  readonly start: string;\n  readonly flags: ReadonlySet<string>;\n\n  private constructor(\n    id: string,\n    name: string,\n    grammar: Grammar,\n    start: string = \"start\",\n  ) {\n    this.id = id;\n    this.name = name;\n    this.grammar = validate(grammar);\n    this.start = start;\n    this.flags = findFlags(grammar.rules);\n    Object.freeze(this);\n  }\n\n  generate(flags: Flags, rng?: RNG): StyledText {\n    const output = new Output(200);\n    while (true) {\n      try {\n        if (output.length > 0) {\n          output.separate(\" \");\n        }\n        generate(this.grammar, { start: this.start, flags, output, rng });\n      } catch (err) {\n        if (err === Output.Stop) {\n          break;\n        } else {\n          throw err;\n        }\n      }\n    }\n    return output.text;\n  }\n\n  toString() {\n    return this.id;\n  }\n\n  toJSON() {\n    return this.id;\n  }\n}\n","import {\n  findRule,\n  type Grammar,\n  isAlt,\n  isCond,\n  isLit,\n  isOpt,\n  isRef,\n  isSeq,\n  isSpan,\n  type Prod,\n} from \"./ast.ts\";\n\n/**\n * Checks that the given grammar is valid.\n *\n * - Checks that there are no empty `seq`s.\n * - Checks that there are no empty `alt`s.\n * - Checks that all refs can be resolved.\n * - Checks that there are no unreferenced rules.\n */\nexport function validate(grammar: Grammar): Grammar {\n  const referenced = new Set<string>();\n  referenced.add(\"start\");\n  for (const rule of Object.values(grammar.rules)) {\n    visit(rule);\n  }\n  for (const name of Object.keys(grammar.rules)) {\n    if (!name.startsWith(\"start_\") && !referenced.has(name)) {\n      throw new Error(`Unreferenced rule <${name}>`);\n    }\n  }\n  return grammar;\n\n  function visit(p: Prod): void {\n    if (isCond(p)) {\n      visit(p.cond);\n      return;\n    }\n\n    if (isSpan(p)) {\n      visit(p.span);\n      return;\n    }\n\n    if (isOpt(p)) {\n      const { f, opt } = p;\n      if (f < 0 || f > 1) {\n        throw new Error(`Invalid opt probability ${f}`);\n      }\n      visit(opt);\n      return;\n    }\n\n    if (isSeq(p)) {\n      const { seq } = p;\n      if (seq.length === 0) {\n        throw new Error(`Empty seq`);\n      }\n      for (const child of seq) {\n        visit(child);\n      }\n      return;\n    }\n\n    if (isAlt(p)) {\n      const { alt } = p;\n      if (alt.length === 0) {\n        throw new Error(`Empty alt`);\n      }\n      for (const child of alt) {\n        visit(child);\n      }\n      return;\n    }\n\n    if (isRef(p)) {\n      const { ref } = p;\n      if (findRule(grammar, ref) == null) {\n        throw new Error(`Invalid ref <${ref}>`);\n      }\n      referenced.add(ref);\n      return;\n    }\n\n    if (isLit(p)) {\n      return;\n    }\n\n    throw new Error(`Invalid element`);\n  }\n}\n","import {\n  isAlt,\n  isCond,\n  isOpt,\n  isSeq,\n  isSpan,\n  type Prod,\n  type Rules,\n} from \"./ast.ts\";\n\nexport function findFlags(rules: Rules): Set<string> {\n  const flags = new Set<string>();\n  for (const rule of Object.values(rules)) {\n    visit(rule);\n  }\n  return flags;\n\n  function visit(p: Prod): void {\n    if (isCond(p)) {\n      flags.add(p.flag);\n      visit(p.cond);\n      return;\n    }\n\n    if (isSpan(p)) {\n      visit(p.span);\n      return;\n    }\n\n    if (isOpt(p)) {\n      visit(p.opt);\n      return;\n    }\n\n    if (isSeq(p)) {\n      for (const child of p.seq) {\n        visit(child);\n      }\n      return;\n    }\n\n    if (isAlt(p)) {\n      for (const child of p.alt) {\n        visit(child);\n      }\n      return;\n    }\n  }\n}\n","import { Language } from \"@keybr/keyboard\";\nimport { Enum, type EnumItem } from \"@keybr/lang\";\nimport coverImageAliceWonderland from \"../../assets/cover-image-alice-wanderland.jpg\";\nimport coverImageCallWild from \"../../assets/cover-image-call-wild.jpg\";\nimport coverImageJekyllHyde from \"../../assets/cover-image-jekyll-hyde.jpg\";\n\nexport class Book implements EnumItem {\n  static readonly EN_ALICE_WONDERLAND = new Book(\n    /* id= */ \"en-alice-wonderland\",\n    /* language= */ Language.EN,\n    /* title= */ \"Alice’s Adventures in Wonderland\",\n    /* author= */ \"Lewis Carroll\",\n    /* coverImage= */ coverImageAliceWonderland,\n  );\n\n  static readonly EN_JEKYLL_HYDE = new Book(\n    /* id= */ \"en-jekyll-hyde\",\n    /* language= */ Language.EN,\n    /* title= */ \"The Strange Case Of Dr. Jekyll And Mr. Hyde\",\n    /* author= */ \"Robert Louis Stevenson\",\n    /* coverImage= */ coverImageJekyllHyde,\n  );\n\n  static readonly EN_CALL_WILD = new Book(\n    /* id= */ \"en-call-wild\",\n    /* language= */ Language.EN,\n    /* title= */ \"The Call of the Wild\",\n    /* author= */ \"Jack London\",\n    /* coverImage= */ coverImageCallWild,\n  );\n\n  static readonly ALL = new Enum<Book>(\n    Book.EN_ALICE_WONDERLAND,\n    Book.EN_JEKYLL_HYDE,\n    Book.EN_CALL_WILD,\n  );\n\n  private constructor(\n    readonly id: string,\n    readonly language: Language,\n    readonly title: string,\n    readonly author: string,\n    readonly coverImage: string,\n  ) {\n    Object.freeze(this);\n  }\n\n  toString() {\n    return this.id;\n  }\n\n  toJSON() {\n    return this.id;\n  }\n}\n","import { type Content } from \"./types.ts\";\n\nexport function flattenContent(content: Content): readonly string[] {\n  const result: string[] = [];\n  for (const [title, paragraphs] of content) {\n    result.push(...paragraphs);\n  }\n  return result;\n}\n\nexport function splitParagraph(paragraph: string): readonly string[] {\n  return paragraph.split(/\\s+/g);\n}\n","import { useIntlNumbers } from \"@keybr/intl\";\nimport { textStatsOf } from \"@keybr/unicode\";\nimport { NameValue } from \"@keybr/widget\";\nimport { memo, type ReactNode, useMemo } from \"react\";\nimport { useIntl } from \"react-intl\";\nimport * as styles from \"./BookPreview.module.less\";\nimport { type BookContent } from \"./types.ts\";\nimport { flattenContent } from \"./util.ts\";\n\nexport const BookPreview = memo(function BookPreview({\n  book,\n  content,\n}: BookContent): ReactNode {\n  const { formatMessage } = useIntl();\n  const { formatNumber } = useIntlNumbers();\n  const {\n    numChapters,\n    numParagraphs,\n    numWords,\n    numUniqueWords,\n    numCharacters,\n    avgWordLength,\n  } = useMemo(() => {\n    const paragraphs = flattenContent(content);\n    const numChapters = content.length;\n    const numParagraphs = paragraphs.length;\n    const textStats = textStatsOf(book.language.locale, paragraphs);\n    return {\n      numChapters,\n      numParagraphs,\n      ...textStats,\n    };\n  }, [book, content]);\n  return (\n    <div className={styles.root}>\n      <img\n        className={styles.coverImage}\n        src={book.coverImage}\n        alt=\"Book cover image\"\n        title={`${book.title} by ${book.author}`}\n      />\n      <div className={styles.details}>\n        <p>\n          <strong>{book.title}</strong> by <strong>{book.author}</strong>\n        </p>\n        <p>\n          <NameValue\n            name={formatMessage({\n              id: \"textStats.numChapters\",\n              defaultMessage: \"Chapters\",\n            })}\n            value={formatNumber(numChapters)}\n          />\n          <NameValue\n            name={formatMessage({\n              id: \"textStats.numParagraphs\",\n              defaultMessage: \"Paragraphs\",\n            })}\n            value={formatNumber(numParagraphs)}\n          />\n          <NameValue\n            name={formatMessage({\n              id: \"textStats.numAllWords\",\n              defaultMessage: \"All words\",\n            })}\n            value={formatNumber(numWords)}\n          />\n          <NameValue\n            name={formatMessage({\n              id: \"textStats.numUniqueWords\",\n              defaultMessage: \"Unique words\",\n            })}\n            value={formatNumber(numUniqueWords)}\n          />\n          <NameValue\n            name={formatMessage({\n              id: \"textStats.numCharacters\",\n              defaultMessage: \"Characters\",\n            })}\n            value={formatNumber(numCharacters)}\n          />\n        </p>\n        <p>\n          <NameValue\n            name={formatMessage({\n              id: \"textStats.averageWordLength\",\n              defaultMessage: \"Average word length\",\n            })}\n            value={formatNumber(avgWordLength, 2)}\n          />\n        </p>\n      </div>\n    </div>\n  );\n});\n","// extracted by mini-css-extract-plugin\nvar _1 = \"V7eFoTQXDO\";\nvar _2 = \"PHtgownT4b\";\nvar _3 = \"PM8WmkEm8i\";\nexport { _1 as \"coverImage\", _2 as \"details\", _3 as \"root\" }\n","import { Field, FieldList, OptionList } from \"@keybr/widget\";\nimport { type ReactNode } from \"react\";\nimport { Book } from \"./book.ts\";\n\nexport function BookSelector({\n  book,\n  onChange,\n}: {\n  readonly book: Book;\n  readonly onChange: (book: Book) => void;\n}): ReactNode {\n  return (\n    <FieldList>\n      <Field>Book:</Field>\n      <Field>\n        <OptionList\n          size={24}\n          options={Book.ALL.map(({ id, title }) => ({\n            value: id,\n            name: title,\n          }))}\n          value={book.id}\n          onSelect={(value) => {\n            onChange(Book.ALL.get(value));\n          }}\n        />\n      </Field>\n    </FieldList>\n  );\n}\n","// extracted by mini-css-extract-plugin\nvar _1 = \"KNRtiD8Pgo\";\nvar _2 = \"OCgkY52OZb\";\nvar _3 = \"wt_T3t7sTZ\";\nvar _4 = \"K6g0S1GSz0\";\nvar _5 = \"xzMDSxzuEp\";\nvar _6 = \"xh5FAN5m96\";\nvar _7 = \"QvcryBm_FQ\";\nexport { _1 as \"content\", _2 as \"index\", _3 as \"item\", _4 as \"item_active\", _5 as \"item_inactive\", _6 as \"root\", _7 as \"separator\" }\n","import { clsx } from \"clsx\";\nimport { memo, type ReactNode } from \"react\";\nimport * as styles from \"./ParagraphPreview.module.less\";\n\nexport const ParagraphPreview = memo(function ParagraphPreview({\n  paragraphs,\n  paragraphIndex,\n  around = 2,\n}: {\n  readonly paragraphs: readonly string[];\n  readonly paragraphIndex: number;\n  readonly around?: number;\n}): ReactNode {\n  const { length } = paragraphs;\n  const begin = Math.max(0, paragraphIndex - around);\n  const end = Math.min(length - 1, paragraphIndex + around);\n  const items = paragraphs\n    .slice(begin, end + 1)\n    .map((paragraph, index) => [begin + index, paragraph] as [number, string]);\n  return (\n    <div className={styles.root}>\n      {items.map(([index, paragraph]) => (\n        <div\n          key={index}\n          className={clsx(\n            styles.item,\n            index === paragraphIndex\n              ? styles.item_active\n              : styles.item_inactive,\n          )}\n        >\n          <ParagraphIndex paragraphIndex={index} />\n          <span className={styles.separator}>\n            {index === paragraphIndex ? \"\\u27A4\" : \" \"}\n          </span>\n          <ParagraphContent paragraph={paragraph} />\n        </div>\n      ))}\n    </div>\n  );\n});\n\nexport function ParagraphIndex({\n  paragraphIndex,\n}: {\n  readonly paragraphIndex: number;\n}) {\n  return <span className={styles.index}>#{paragraphIndex + 1}</span>;\n}\n\nexport function ParagraphContent({\n  paragraph,\n}: {\n  readonly paragraph: string;\n}) {\n  return <span className={styles.content}>{paragraph}</span>;\n}\n","import { Dir } from \"@keybr/intl\";\nimport { Field, FieldList, Icon, IconButton, Range } from \"@keybr/widget\";\nimport { mdiSkipNext, mdiSkipPrevious } from \"@mdi/js\";\nimport { type ReactNode } from \"react\";\nimport { ParagraphIndex } from \"./ParagraphPreview.tsx\";\n\nexport function ParagraphSelector({\n  paragraphs,\n  paragraphIndex,\n  onChange,\n}: {\n  readonly paragraphs: readonly string[];\n  readonly paragraphIndex: number;\n  readonly onChange: (paragraphIndex: number) => void;\n}): ReactNode {\n  return (\n    <FieldList>\n      <Field>Paragraph:</Field>\n      <Field>\n        <ParagraphIndex paragraphIndex={paragraphIndex} />\n      </Field>\n      <Field>\n        <Range\n          size={32}\n          min={0}\n          max={paragraphs.length - 1}\n          step={1}\n          value={paragraphIndex}\n          onChange={onChange}\n        />\n      </Field>\n      <Field>\n        <Dir swap=\"icon\">\n          <IconButton\n            icon={<Icon shape={mdiSkipPrevious} />}\n            disabled={paragraphIndex === 0}\n            onClick={() => {\n              if (paragraphIndex > 0) {\n                onChange(paragraphIndex - 1);\n              }\n            }}\n          />\n          <IconButton\n            icon={<Icon shape={mdiSkipNext} />}\n            disabled={paragraphIndex === paragraphs.length - 1}\n            onClick={() => {\n              if (paragraphIndex < paragraphs.length - 1) {\n                onChange(paragraphIndex + 1);\n              }\n            }}\n          />\n        </Dir>\n      </Field>\n    </FieldList>\n  );\n}\n","import { type WordList } from \"./types.ts\";\n\nexport function wordListStats(wordList: WordList): {\n  readonly wordCount: number;\n  readonly avgWordLength: number;\n} {\n  let wordLength = 0;\n  let wordCount = 0;\n  for (const word of wordList) {\n    wordLength += word.length;\n    wordCount += 1;\n  }\n  return {\n    wordCount,\n    avgWordLength: wordCount > 0 ? wordLength / wordCount : 0,\n  };\n}\n","// extracted by mini-css-extract-plugin\nvar _1 = \"H7FDGpuCXv\";\nvar _2 = \"qLQOJqNXMt\";\nvar _3 = \"Qw3degVPi8\";\nvar _4 = \"ZKN9XQpVOA\";\nvar _5 = \"YQ8gEY1Tim\";\nvar _6 = \"h26MSy52_U\";\nvar _7 = \"Y_OaTzYJ92\";\nexport { _1 as \"calendar\", _2 as \"caption\", _3 as \"cell\", _4 as \"headerCell\", _5 as \"item\", _6 as \"root\", _7 as \"table\" }\n","// extracted by mini-css-extract-plugin\nvar _1 = \"dvOQLpC486\";\nexport { _1 as \"root\" }\n","import { defineMessages } from \"react-intl\";\n\nexport const messages = defineMessages({\n  averageSpeedName: {\n    id: \"metric.averageSpeed.name\",\n    defaultMessage: \"Average speed\",\n  },\n  averageSpeedDescription: {\n    id: \"metric.averageSpeed.description\",\n    defaultMessage:\n      \"Average typing speed in all lessons ({speedUnitName}). The more, the better.\",\n  },\n  topSpeedName: {\n    id: \"metric.topSpeed.name\",\n    defaultMessage: \"Top speed\",\n  },\n  topSpeedDescription: {\n    id: \"metric.topSpeed.description\",\n    defaultMessage:\n      \"Top typing speed in all lessons ({speedUnitName}). The more, the better.\",\n  },\n  lastSpeedName: {\n    id: \"metric.lastSpeed.name\",\n    defaultMessage: \"Last speed\",\n  },\n  lastSpeedDescription: {\n    id: \"metric.lastSpeed.description\",\n    defaultMessage:\n      \"Typing speed in the last lesson ({speedUnitName}). The more, the better.\",\n  },\n  confidenceLevelName: {\n    id: \"metric.confidenceLevel.name\",\n    defaultMessage: \"Confidence level\",\n  },\n  confidenceLevelDescription: {\n    id: \"metric.confidenceLevel.description\",\n    defaultMessage: \"How close you are to unlocking this key.\",\n  },\n  learningRateName: {\n    id: \"metric.learningRate.name\",\n    defaultMessage: \"Learning rate\",\n  },\n  learningRateDescription: {\n    id: \"metric.learningRate.description\",\n    defaultMessage: \"How your typing speed is changing with each lesson.\",\n  },\n  learningRateValue: {\n    id: \"metric.learningRate.value\",\n    defaultMessage: \"{value}/lesson\",\n  },\n  uncertainValue: {\n    id: \"metric.uncertainValue\",\n    defaultMessage: \"Uncertain\",\n  },\n  notCalibratedText: {\n    id: \"lesson.notCalibrated.message\",\n    defaultMessage: \"Not calibrated, need more samples.\",\n  },\n  characterName: {\n    id: \"lesson.characterName\",\n    defaultMessage: \"Character ‘{name}’\",\n  },\n  focusedKeyText: {\n    id: \"lesson.focusedKeyText\",\n    defaultMessage: \"A key with increased frequency.\",\n  },\n  forcedKeyText: {\n    id: \"lesson.forcedKeyText\",\n    defaultMessage: \"A manually added key.\",\n  },\n});\n","import { useIntlNumbers } from \"@keybr/intl\";\nimport { SpeedUnit, uiProps } from \"@keybr/result\";\nimport { useSettings } from \"@keybr/settings\";\nimport { useMemo } from \"react\";\nimport { useIntl } from \"react-intl\";\nimport { messages } from \"./intl.ts\";\n\nexport type FormatterOptions = {\n  readonly unit?: boolean;\n};\n\nexport type Formatter = {\n  readonly speedUnit: SpeedUnit;\n  readonly speedUnitName: string;\n  readonly formatSpeed: (value: number, options?: FormatterOptions) => string;\n  readonly formatConfidence: (value: number | null) => string;\n  readonly formatLearningRate: (lr: number | null) => string;\n};\n\nexport const useFormatter = (): Formatter => {\n  const { formatMessage } = useIntl();\n  const { formatNumber, formatPercents } = useIntlNumbers();\n  const { settings } = useSettings();\n  return useMemo(() => {\n    const speedUnit = settings.get(uiProps.speedUnit);\n    const speedUnitName = formatMessage(speedUnit.name);\n    const f1 = { minimumFractionDigits: 1, maximumFractionDigits: 1 };\n    const f2 = { minimumFractionDigits: 2, maximumFractionDigits: 2 };\n    const formatSpeed = (\n      value: number,\n      { unit = true }: FormatterOptions = {},\n    ): string => {\n      let opts;\n      switch (speedUnit) {\n        case SpeedUnit.WPM:\n          opts = f1;\n          break;\n        case SpeedUnit.WPS:\n          opts = f2;\n          break;\n        case SpeedUnit.CPM:\n          opts = f1;\n          break;\n        case SpeedUnit.CPS:\n          opts = f2;\n          break;\n      }\n      const s = formatNumber(speedUnit.measure(value), opts);\n      if (unit) {\n        return s + speedUnit.id;\n      } else {\n        return s;\n      }\n    };\n    const formatConfidence = (confidence: number | null): string => {\n      if (confidence != null) {\n        return formatPercents(confidence, 0);\n      } else {\n        return formatMessage(messages.uncertainValue);\n      }\n    };\n    const formatLearningRate = (lr: number | null): string => {\n      if (lr != null && lr === lr) {\n        return signed(\n          formatMessage(messages.learningRateValue, {\n            value: formatSpeed(lr),\n          }),\n          lr,\n        );\n      } else {\n        return formatMessage(messages.uncertainValue);\n      }\n    };\n    return {\n      speedUnit,\n      speedUnitName,\n      formatSpeed,\n      formatConfidence,\n      formatLearningRate,\n    };\n  }, [formatMessage, formatNumber, formatPercents, settings]);\n};\n\nfunction signed(value: any, learningRate: number) {\n  return learningRate > 0 ? `+${value}` : `${value}`;\n}\n","import { useIntlNumbers } from \"@keybr/intl\";\nimport { type DailyStats as DailyStatsType } from \"@keybr/result\";\nimport { formatDuration, Name, NameValue, Para, Value } from \"@keybr/widget\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport * as styles from \"./DailyStats.module.less\";\nimport { type Effort } from \"./effort.ts\";\nimport { useFormatter } from \"./format.ts\";\n\nexport function DailyStats({\n  stats: { date, results, stats },\n  effort,\n}: {\n  stats: DailyStatsType;\n  effort: Effort;\n}) {\n  const { formatDate, formatMessage } = useIntl();\n  const { formatNumber, formatPercents } = useIntlNumbers();\n  const { formatSpeed } = useFormatter();\n  return (\n    <div className={styles.root}>\n      <Para align=\"center\">\n        {formatDate(Number(date), { dateStyle: \"long\" })}\n      </Para>\n      <div>\n        <Name>\n          <FormattedMessage\n            id=\"profile.calendar.dailyGoal.description\"\n            defaultMessage=\"Daily goal: {value}\"\n            values={{\n              value: <Value>{formatPercents(effort.effort(stats.time))}</Value>,\n            }}\n          />\n        </Name>\n      </div>\n      <div>\n        <Name>\n          <FormattedMessage\n            id=\"profile.calendar.totalTime.description\"\n            defaultMessage=\"Time of lessons: {value}\"\n            values={{\n              value: <Value>{formatDuration(stats.time)}</Value>,\n            }}\n          />\n        </Name>\n      </div>\n      <div>\n        <Name>\n          <FormattedMessage\n            id=\"profile.calendar.totalLessons.description\"\n            defaultMessage=\"Number of lessons: {value}\"\n            values={{\n              value: <Value>{formatNumber(results.length)}</Value>,\n            }}\n          />\n        </Name>\n      </div>\n      <div>\n        <NameValue\n          name={formatMessage({\n            id: \"metric.topSpeed.name\",\n            defaultMessage: \"Top speed\",\n          })}\n          value={formatSpeed(stats.speed.max)}\n        />\n      </div>\n      <div>\n        <NameValue\n          name={formatMessage({\n            id: \"metric.averageSpeed.name\",\n            defaultMessage: \"Average speed\",\n          })}\n          value={formatSpeed(stats.speed.avg)}\n        />\n      </div>\n      <div>\n        <NameValue\n          name={formatMessage({\n            id: \"metric.averageAccuracy.name\",\n            defaultMessage: \"Average accuracy\",\n          })}\n          value={formatPercents(stats.accuracy.avg)}\n        />\n      </div>\n    </div>\n  );\n}\n","import { Tasks } from \"@keybr/lang\";\nimport { type DailyStats, type DailyStatsMap, LocalDate } from \"@keybr/result\";\nimport { Popup, Portal } from \"@keybr/widget\";\nimport { useEffect, useMemo, useRef, useState } from \"react\";\nimport { useIntl } from \"react-intl\";\nimport * as styles from \"./Calendar.module.less\";\nimport { DailyStats as DailyStatsWidget } from \"./DailyStats.tsx\";\nimport { type Effort } from \"./effort.ts\";\n\nexport function Calendar({\n  dailyStatsMap,\n  effort,\n}: {\n  dailyStatsMap: DailyStatsMap;\n  effort: Effort;\n}) {\n  type State = Readonly<\n    | { type: \"hidden\" }\n    | { type: \"visible-in\"; stats: DailyStats; elem: Element }\n    | { type: \"visible\"; stats: DailyStats; elem: Element }\n    | { type: \"visible-out\"; stats: DailyStats; elem: Element }\n  >;\n  const [state, setState] = useState<State>({ type: \"hidden\" });\n  useEffect(() => {\n    const tasks = new Tasks();\n    switch (state.type) {\n      case \"visible-in\":\n        tasks.delayed(300, () => {\n          setState({ ...state, type: \"visible\" });\n        });\n        break;\n      case \"visible-out\":\n        tasks.delayed(300, () => {\n          setState({ type: \"hidden\" });\n        });\n        break;\n    }\n    return () => {\n      tasks.cancelAll();\n    };\n  }, [state]);\n  return (\n    <>\n      <BlockList\n        dailyStatsMap={dailyStatsMap}\n        effort={effort}\n        onCellHoverIn={(stats, elem) => {\n          setState({ type: \"visible-in\", stats, elem });\n        }}\n        onCellHoverOut={() => {\n          switch (state.type) {\n            case \"visible-in\":\n              setState({ type: \"hidden\" });\n              break;\n            case \"visible\":\n              setState({ ...state, type: \"visible-out\" });\n              break;\n          }\n        }}\n      />\n      {(state.type === \"visible\" || state.type === \"visible-out\") && (\n        <Portal>\n          <Popup\n            anchor={state.elem}\n            onMouseEnter={() => {\n              setState({ ...state, type: \"visible\" });\n            }}\n            onMouseLeave={() => {\n              setState({ ...state, type: \"visible-out\" });\n            }}\n          >\n            <DailyStatsWidget stats={state.stats} effort={effort} />\n          </Popup>\n        </Portal>\n      )}\n    </>\n  );\n}\n\nfunction BlockList({\n  dailyStatsMap,\n  effort,\n  onCellHoverIn,\n  onCellHoverOut,\n  onCellClick,\n}: {\n  dailyStatsMap: DailyStatsMap;\n  effort: Effort;\n  onCellHoverIn?: (stats: DailyStats, elem: Element) => void;\n  onCellHoverOut?: (stats: DailyStats, elem: Element) => void;\n  onCellClick?: (stats: DailyStats, elem: Element) => void;\n}) {\n  const ref = useRef<HTMLDivElement>(null);\n  const blocks = useMemo(() => blockList(dailyStatsMap), [dailyStatsMap]);\n  return (\n    <div\n      ref={ref}\n      className={styles.root}\n      onMouseOver={(event) => {\n        relayEvent(ref.current!, event, onCellHoverIn);\n      }}\n      onMouseOut={(event) => {\n        relayEvent(ref.current!, event, onCellHoverOut);\n      }}\n      onClick={(event) => {\n        relayEvent(ref.current!, event, onCellClick);\n      }}\n    >\n      {blocks.map((block) => (\n        <Block key={block.key} block={block} effort={effort} />\n      ))}\n    </div>\n  );\n}\n\nfunction relayEvent(\n  root: Element,\n  { target }: { target: any },\n  handler?: (stats: DailyStats, elem: Element) => void,\n) {\n  while (\n    handler != null &&\n    target instanceof Element &&\n    root.contains(target)\n  ) {\n    const stats = Cell.attached(target);\n    if (stats) {\n      handler(stats, target);\n      return;\n    }\n    target = target.parentElement;\n  }\n}\n\ntype BlockCells = {\n  key: string;\n  year: number;\n  month: number;\n  cells: (DailyStats | null)[][];\n};\n\nfunction Block({ block, effort }: { block: BlockCells; effort: Effort }) {\n  const { formatMessage } = useIntl();\n\n  const weekDayName = formatMessage({\n    id: \"calendar.weekDayName\",\n    defaultMessage: \"M|T|W|T|F|S|S\",\n  }).split(\"|\");\n\n  return (\n    <div className={styles.calendar}>\n      <table className={styles.table}>\n        <caption className={styles.caption}>\n          {block.year}/{block.month}\n        </caption>\n        <thead>\n          <tr>\n            <th className={styles.headerCell}>{weekDayName[0]}</th>\n            <th className={styles.headerCell}>{weekDayName[1]}</th>\n            <th className={styles.headerCell}>{weekDayName[2]}</th>\n            <th className={styles.headerCell}>{weekDayName[3]}</th>\n            <th className={styles.headerCell}>{weekDayName[4]}</th>\n            <th className={styles.headerCell}>{weekDayName[5]}</th>\n            <th className={styles.headerCell}>{weekDayName[6]}</th>\n          </tr>\n        </thead>\n        <tbody>\n          {block.cells.map((row, m) => (\n            <tr key={m}>\n              {row.map((cell, n) => (\n                <Cell key={n} cell={cell} effort={effort} />\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nfunction Cell({ cell, effort }: { cell: DailyStats | null; effort: Effort }) {\n  if (cell == null) {\n    return <td />;\n  }\n  const { results, stats } = cell;\n  if (results.length === 0) {\n    return (\n      <td className={styles.cell}>\n        <span className={styles.item}>{cell.date.dayOfMonth}</span>\n      </td>\n    );\n  }\n  return (\n    <td className={styles.cell}>\n      <span\n        ref={Cell.attach(cell)}\n        className={styles.item}\n        style={{\n          backgroundColor: String(effort.shade(effort.effort(stats.time))),\n        }}\n        data-date={String(cell.date)}\n      >\n        {cell.date.dayOfMonth}\n      </span>\n    </td>\n  );\n}\n\nconst attachment = Symbol();\n\nCell.attach = (stats: DailyStats) => {\n  return (target: Element | null): void => {\n    if (target != null) {\n      (target as any)[attachment] = stats;\n    }\n  };\n};\n\nCell.attached = (target: Element | null): DailyStats | null => {\n  return (target as any)?.[attachment] ?? null;\n};\n\nfunction blockList(map: DailyStatsMap): BlockCells[] {\n  const blocks = new Map<string, BlockCells>();\n  for (const { date } of map) {\n    addBlock(date);\n  }\n  addBlock(map.today.date);\n  return [...blocks.values()];\n\n  function addBlock({ year, month }: LocalDate) {\n    const key = `${year}:${month}`;\n    let block = blocks.get(key);\n    if (block == null) {\n      const cells: (DailyStats | null)[][] = [\n        [null, null, null, null, null, null, null],\n        [null, null, null, null, null, null, null],\n        [null, null, null, null, null, null, null],\n        [null, null, null, null, null, null, null],\n        [null, null, null, null, null, null, null],\n        [null, null, null, null, null, null, null],\n      ];\n      const a = new LocalDate(year, month, 1);\n      const offset = a.dayOfWeek - 1;\n      for (let i = 0; i < 6; i++) {\n        for (let j = 0; j < 7; j++) {\n          const b = a.plusDays(i * 7 + j - offset);\n          if (a.month === b.month) {\n            cells[i][j] = map.get(b);\n          }\n        }\n      }\n      blocks.set(key, (block = { key, year, month, cells }));\n    }\n    return block;\n  }\n}\n","// extracted by mini-css-extract-plugin\nvar _1 = \"bBt_eHl0Mv\";\nvar _2 = \"sofYclBdYo\";\nvar _3 = \"TFr_CmgsaC\";\nvar _4 = \"oHu5bwoCB2\";\nvar _5 = \"JbmeqBVGxy\";\nvar _6 = \"h5bpuew1Xb\";\nvar _7 = \"hrN4gxT_MS\";\nvar _8 = \"vQp0aePmiy\";\nvar _9 = \"g1xT4SO6CG\";\nvar _a = \"LbZ4m3wAlq\";\nvar _b = \"sXEw880Rnp\";\nvar _c = \"Zl43PdKFmb\";\nvar _d = \"wwN0EvYtKj\";\nvar _e = \"M_DBJJJ4BX\";\nvar _f = \"jUXTIWIzg8\";\nexport { _1 as \"cross\", _2 as \"keyDetails\", _3 as \"keyDetails_calibrated\", _4 as \"keyDetails_uncalibrated\", _5 as \"lessonKey\", _6 as \"lessonKey_announcement\", _7 as \"lessonKey_current\", _8 as \"lessonKey_excluded\", _9 as \"lessonKey_focused\", _a as \"lessonKey_forced\", _b as \"lessonKey_included\", _c as \"lessonKey_large\", _d as \"lessonKey_normal\", _e as \"lessonKey_selectable\", _f as \"lessonKey_uncalibrated\" }\n","import { clamp } from \"@keybr/lang\";\nimport { type Color } from \"./color.ts\";\nimport { type RgbColor } from \"./color-rgb.ts\";\nimport { oklabToRgb, rgbToOklab0 } from \"./convert-xyz.ts\";\nimport { type Oklab } from \"./types.ts\";\n\nconst u: Oklab = { l: 0, a: 0, b: 0, alpha: 1 };\nconst v: Oklab = { l: 0, a: 0, b: 0, alpha: 1 };\n\nexport function mixColors(a: Color, b: Color, ratio: number): RgbColor {\n  ratio = clamp(ratio, 0, 1);\n  rgbToOklab0(a.toRgb(), u);\n  rgbToOklab0(b.toRgb(), v);\n  u.l = u.l * (1 - ratio) + v.l * ratio;\n  u.a = u.a * (1 - ratio) + v.a * ratio;\n  u.b = u.b * (1 - ratio) + v.b * ratio;\n  u.alpha = u.alpha * (1 - ratio) + v.alpha * ratio;\n  return oklabToRgb(u);\n}\n","import { mixColors, parseColor } from \"@keybr/color\";\nimport { useComputedStyles } from \"@keybr/themes\";\nimport { type CSSProperties, useMemo } from \"react\";\n\nexport function useKeyStyles() {\n  const { getPropertyValue } = useComputedStyles();\n  const slow = getPropertyValue(\"--slow-key-color\") || \"#cc0000\";\n  const fast = getPropertyValue(\"--fast-key-color\") || \"#60d788\";\n\n  return useMemo(() => {\n    const min = parseColor(slow);\n    const max = parseColor(fast);\n\n    function confidenceColor(confidence: number) {\n      return mixColors(min, max, confidence);\n    }\n\n    function keyStyles(\n      isIncluded: boolean,\n      confidence: number | null,\n    ): CSSProperties {\n      if (isIncluded && confidence != null) {\n        return {\n          backgroundColor: String(confidenceColor(confidence)),\n        };\n      } else {\n        return {};\n      }\n    }\n\n    return { confidenceColor, keyStyles };\n  }, [slow, fast]);\n}\n","import { type LessonKey } from \"@keybr/lesson\";\nimport { type MouseProps } from \"@keybr/widget\";\nimport { clsx } from \"clsx\";\nimport * as styles from \"./styles.module.less\";\nimport { useKeyStyles } from \"./styles.ts\";\n\nexport const Key = ({\n  lessonKey,\n  isSelectable = false,\n  isCurrent = false,\n  size = \"normal\",\n  title,\n  ...props\n}: {\n  lessonKey: LessonKey;\n  isSelectable?: boolean;\n  isCurrent?: boolean;\n  size?: \"normal\" | \"large\" | \"announcement\";\n  title?: string;\n} & MouseProps) => {\n  const { keyStyles } = useKeyStyles();\n  const {\n    letter: { codePoint, label },\n    confidence,\n    isIncluded,\n    isFocused,\n    isForced,\n  } = lessonKey;\n  return (\n    <span\n      {...props}\n      ref={Key.attach(lessonKey)}\n      key={codePoint}\n      className={clsx(\n        styles.lessonKey,\n        size === \"normal\" && styles.lessonKey_normal,\n        size === \"large\" && styles.lessonKey_large,\n        size === \"announcement\" && styles.lessonKey_announcement,\n        isIncluded ? styles.lessonKey_included : styles.lessonKey_excluded,\n        isIncluded && confidence == null && styles.lessonKey_uncalibrated,\n        isIncluded && isFocused && styles.lessonKey_focused,\n        isIncluded && isForced && styles.lessonKey_forced,\n        isSelectable && styles.lessonKey_selectable,\n        isCurrent && styles.lessonKey_current,\n      )}\n      style={keyStyles(true, confidence)}\n      title={title}\n      data-code-point={codePoint}\n    >\n      {label}\n      {isIncluded || (\n        <svg viewBox=\"0 0 100 100\" className={styles.cross}>\n          <path d=\"M 0 100 L 100 0\" />\n        </svg>\n      )}\n    </span>\n  );\n};\n\nconst attachment = Symbol();\n\nKey.attach = (key: LessonKey) => {\n  return (target: Element | null): void => {\n    if (target != null) {\n      (target as any)[attachment] = key;\n    }\n  };\n};\n\nKey.attached = (target: Element | null): LessonKey | null => {\n  return (target as any)?.[attachment] ?? null;\n};\n","// extracted by mini-css-extract-plugin\nvar _1 = \"mHNoHM5Xlf\";\nvar _2 = \"oqD6aPtWfz\";\nvar _3 = \"tQC1wHs9LI\";\nexport { _1 as \"happy\", _2 as \"icon\", _3 as \"sad\" }\n","import { Icon } from \"@keybr/widget\";\nimport { mdiEmoticonHappy, mdiEmoticonSad } from \"@mdi/js\";\nimport * as styles from \"./Happiness.module.less\";\n\nexport function Happiness({ learningRate }: { learningRate: number }) {\n  if (learningRate > 0) {\n    return (\n      <span className={styles.happy}>\n        <Happy />\n        {learningRate >= +5 && <Happy />}\n        {learningRate >= +10 && <Happy />}\n      </span>\n    );\n  }\n  if (learningRate < 0) {\n    return (\n      <span className={styles.sad}>\n        <Sad />\n        {learningRate <= -5 && <Sad />}\n        {learningRate <= -10 && <Sad />}\n      </span>\n    );\n  }\n  return null;\n}\n\nfunction Happy() {\n  return <Icon className={styles.icon} shape={mdiEmoticonHappy} />;\n}\n\nfunction Sad() {\n  return <Icon className={styles.icon} shape={mdiEmoticonSad} />;\n}\n","import { LearningRate, type LessonKey, Target } from \"@keybr/lesson\";\nimport { timeToSpeed } from \"@keybr/result\";\nimport { useSettings } from \"@keybr/settings\";\nimport { Name, NameValue, Value } from \"@keybr/widget\";\nimport { clsx } from \"clsx\";\nimport { useIntl } from \"react-intl\";\nimport { useFormatter } from \"./format.ts\";\nimport { Happiness } from \"./Happiness.tsx\";\nimport { messages } from \"./intl.ts\";\nimport * as styles from \"./styles.module.less\";\n\nexport const KeyDetails = ({ lessonKey }: { lessonKey: LessonKey }) => {\n  const { formatMessage } = useIntl();\n  const { formatSpeed, formatConfidence, formatLearningRate, speedUnitName } =\n    useFormatter();\n  const { settings } = useSettings();\n  const { timeToType, bestTimeToType, confidence, bestConfidence } = lessonKey;\n  if (\n    timeToType != null &&\n    bestTimeToType != null &&\n    confidence != null &&\n    bestConfidence != null\n  ) {\n    const learningRate =\n      LearningRate.from(\n        lessonKey.samples, //\n        new Target(settings),\n      )?.learningRate ?? null;\n    return (\n      <span className={clsx(styles.keyDetails, styles.keyDetails_calibrated)}>\n        <NameValue\n          name={<Name name={formatMessage(messages.lastSpeedName)} />}\n          value={\n            <Value>\n              {`${formatSpeed(timeToSpeed(timeToType))}`}\n              {` (${formatConfidence(confidence)})`}\n            </Value>\n          }\n          title={formatMessage(messages.lastSpeedDescription, {\n            speedUnitName,\n          })}\n        />\n        <NameValue\n          name={<Name name={formatMessage(messages.topSpeedName)} />}\n          value={\n            <Value>\n              {`${formatSpeed(timeToSpeed(bestTimeToType))}`}\n              {` (${formatConfidence(bestConfidence)})`}\n            </Value>\n          }\n          title={formatMessage(messages.topSpeedDescription, {\n            speedUnitName,\n          })}\n        />\n        <NameValue\n          name={<Name name={formatMessage(messages.learningRateName)} />}\n          value={\n            <Value\n              value={\n                <>\n                  {formatLearningRate(learningRate)}\n                  {\"\\u00A0\"}\n                  <Happiness learningRate={learningRate ?? 0} />\n                </>\n              }\n              delta={learningRate ?? 0}\n            />\n          }\n          title={formatMessage(messages.learningRateDescription)}\n        />\n      </span>\n    );\n  } else {\n    return (\n      <span className={clsx(styles.keyDetails, styles.keyDetails_uncalibrated)}>\n        {formatMessage(messages.notCalibratedText)}\n      </span>\n    );\n  }\n};\n","import { type LessonKeys } from \"@keybr/lesson\";\nimport { type ClassName, styleTextTruncate } from \"@keybr/widget\";\nimport { FormattedMessage } from \"react-intl\";\nimport { Key } from \"./Key.tsx\";\nimport { KeyDetails } from \"./KeyDetails.tsx\";\n\nexport const CurrentKey = ({\n  id,\n  className,\n  lessonKeys,\n}: {\n  id?: string;\n  className?: ClassName;\n  lessonKeys: LessonKeys;\n}) => {\n  const focusedKey = lessonKeys.findFocusedKey();\n  return (\n    <span id={id} className={className}>\n      {focusedKey != null ? (\n        <>\n          <Key lessonKey={focusedKey} /> <KeyDetails lessonKey={focusedKey} />\n        </>\n      ) : (\n        <span className={styleTextTruncate}>\n          <FormattedMessage\n            id=\"lesson.allKeysUnlocked.message\"\n            defaultMessage=\"All keys are unlocked.\"\n          />\n        </span>\n      )}\n    </span>\n  );\n};\n","import { useIntlDurations, useIntlNumbers } from \"@keybr/intl\";\nimport { type DailyGoal as DailyGoalType } from \"@keybr/lesson\";\nimport { type ClassName, Value } from \"@keybr/widget\";\nimport { clsx } from \"clsx\";\nimport * as styles from \"./DailyGoal.module.less\";\n\nexport const DailyGoal = ({\n  id,\n  className,\n  dailyGoal,\n}: {\n  id?: string;\n  className?: ClassName;\n  dailyGoal: DailyGoalType;\n}) => {\n  return (\n    <span id={id} className={clsx(styles.root, className)}>\n      <DailyGoalLabel value={dailyGoal.value} goal={dailyGoal.goal} />\n      <DailyGoalGauge value={dailyGoal.value} />\n    </span>\n  );\n};\n\nconst DailyGoalLabel = ({ value, goal }: { value: number; goal: number }) => {\n  const { formatPercents } = useIntlNumbers();\n  const { formatDuration } = useIntlDurations();\n  return (\n    <Value\n      value={`${formatPercents(value, 0)}/${formatDuration({ minutes: goal })}`}\n    />\n  );\n};\n\nconst DailyGoalGauge = ({ value }: { value: number }) => {\n  value = Math.max(0, value);\n  const barWidth = value > 1 ? 100 : Math.round(value * 100);\n  const frameWidth = value > 1 ? Math.round((1 / value) * 100) : 100;\n  return (\n    <div className={styles.gauge}>\n      <div className={styles.bar} style={{ inlineSize: `${barWidth}%` }} />\n      <div className={styles.frame} style={{ inlineSize: `${frameWidth}%` }} />\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nvar _1 = \"j6b2EwG5QR\";\nvar _2 = \"AsTByx3OiA\";\nvar _3 = \"oyGdNSX303\";\nvar _4 = \"A_UrSbt5U3\";\nexport { _1 as \"bar\", _2 as \"frame\", _3 as \"gauge\", _4 as \"root\" }\n","import { type Color, parseColor } from \"@keybr/color\";\nimport { MutableDailyGoal } from \"@keybr/lesson\";\nimport { useSettings } from \"@keybr/settings\";\nimport { useComputedStyles } from \"@keybr/themes\";\nimport { useMemo } from \"react\";\n\nexport type Effort = {\n  readonly effort: (time: number) => number;\n  readonly shade: (effort: number) => Color;\n};\n\nexport function useEffort(): Effort {\n  const { settings } = useSettings();\n  const { getPropertyValue } = useComputedStyles();\n  const color = getPropertyValue(\"--effort-color\") || \"#000000\";\n  return useMemo(() => {\n    const dailyGoal = new MutableDailyGoal(settings);\n    const effort = (time: number) => {\n      return dailyGoal.goal > 0 ? dailyGoal.measure(time) : 1.0;\n    };\n    const shade = (effort: number) => {\n      return parseColor(color).fade(effort);\n    };\n    return { effort, shade };\n  }, [settings, color]);\n}\n","// extracted by mini-css-extract-plugin\nvar _1 = \"iL4l7evwsM\";\nvar _2 = \"uJnu10QLvp\";\nexport { _1 as \"cell\", _2 as \"item\" }\n","import { useIntlNumbers } from \"@keybr/intl\";\nimport { FormattedMessage } from \"react-intl\";\nimport { type Effort } from \"./effort.ts\";\nimport * as styles from \"./EffortLegent.module.less\";\n\nexport function EffortLegend({ effort }: { effort: Effort }) {\n  const { formatPercents } = useIntlNumbers();\n  return (\n    <>\n      <FormattedMessage\n        id=\"settings.dailyGoal.label\"\n        defaultMessage=\"Daily goal:\"\n      />{\" \"}\n      {[1.0, 0.75, 0.5, 0.25, 0.0].map((value) => (\n        <span key={value} className={styles.cell}>\n          <span\n            className={styles.item}\n            style={{ backgroundColor: String(effort.shade(value)) }}\n          >\n            {formatPercents(value)}\n          </span>\n        </span>\n      ))}\n    </>\n  );\n}\n","import { useIntlNumbers } from \"@keybr/intl\";\nimport { type SummaryStats } from \"@keybr/result\";\nimport { type ClassName, Name, Value } from \"@keybr/widget\";\nimport { clsx } from \"clsx\";\nimport { memo, type ReactNode } from \"react\";\nimport { useIntl } from \"react-intl\";\nimport { useFormatter } from \"./format.ts\";\nimport * as styles from \"./gauges.module.less\";\nimport { type Names } from \"./names.ts\";\n\nexport const GaugeList = memo(function GaugeRow({\n  summaryStats,\n  names,\n}: {\n  summaryStats: SummaryStats;\n  names?: Names;\n}) {\n  return (\n    <div className={styles.gaugeList}>\n      <SpeedGauge summaryStats={summaryStats} names={names} />\n      <AccuracyGauge summaryStats={summaryStats} names={names} />\n      <ScoreGauge summaryStats={summaryStats} names={names} />\n    </div>\n  );\n});\n\nexport const SpeedGauge = memo(function SpeedGauge({\n  summaryStats,\n  names,\n}: {\n  summaryStats: SummaryStats;\n  names?: Names;\n}) {\n  const { formatMessage } = useIntl();\n  const { formatSpeed } = useFormatter();\n  const { last, delta } = summaryStats.speed;\n  return (\n    <Gauge\n      id={names?.speed}\n      name={\n        <Name\n          name={formatMessage({\n            id: \"metric.speed.name\",\n            defaultMessage: \"Speed\",\n          })}\n        />\n      }\n      value={<Value value={formatSpeed(last)} />}\n      delta={\n        <Value\n          value={signed(formatSpeed(delta), delta)}\n          delta={delta}\n          title={formatMessage({\n            id: \"metric.speedChange.description\",\n            defaultMessage: \"The difference from the average value.\",\n          })}\n        />\n      }\n      title={formatMessage({\n        id: \"metric.speed.description\",\n        defaultMessage: \"Typing speed in the last lesson.\",\n      })}\n    />\n  );\n});\n\nexport const AccuracyGauge = memo(function AccuracyGauge({\n  summaryStats,\n  names,\n}: {\n  summaryStats: SummaryStats;\n  names?: Names;\n}) {\n  const { formatMessage } = useIntl();\n  const { formatPercents } = useIntlNumbers();\n  const { last, delta } = summaryStats.accuracy;\n  return (\n    <Gauge\n      id={names?.accuracy}\n      name={\n        <Name\n          name={formatMessage({\n            id: \"metric.accuracy.name\",\n            defaultMessage: \"Accuracy\",\n          })}\n        />\n      }\n      value={<Value value={formatPercents(last)} />}\n      delta={\n        <Value\n          value={signed(formatPercents(delta), delta)}\n          delta={delta}\n          title={formatMessage({\n            id: \"metric.accuracyChange.description\",\n            defaultMessage: \"The difference from the average value.\",\n          })}\n        />\n      }\n      title={formatMessage({\n        id: \"metric.accuracy.description\",\n        defaultMessage:\n          \"The percentage of characters typed without errors in the last lesson.\",\n      })}\n    />\n  );\n});\n\nexport const ScoreGauge = memo(function ScoreGauge({\n  summaryStats,\n  names,\n}: {\n  summaryStats: SummaryStats;\n  names?: Names;\n}) {\n  const { formatMessage } = useIntl();\n  const { formatNumber } = useIntlNumbers();\n  const { last, delta } = summaryStats.score;\n  return (\n    <Gauge\n      id={names?.score}\n      name={\n        <Name\n          name={formatMessage({\n            id: \"metric.score.name\",\n            defaultMessage: \"Score\",\n          })}\n        />\n      }\n      value={<Value value={formatNumber(last, 0)} />}\n      delta={\n        <Value\n          value={signed(formatNumber(delta, 0), delta)}\n          delta={delta}\n          title={formatMessage({\n            id: \"metric.scoreChange.description\",\n            defaultMessage: \"The difference from the average value.\",\n          })}\n        />\n      }\n      title={formatMessage({\n        id: \"metric.score.description\",\n        defaultMessage:\n          \"Score of the last lesson in abstract points. \" +\n          \"Scores are greater when you type faster and with fewer errors.\",\n      })}\n    />\n  );\n});\n\nexport const Gauge = memo(function Gauge({\n  id,\n  className,\n  name,\n  value,\n  delta,\n  title,\n}: {\n  id?: string;\n  className?: ClassName;\n  name: ReactNode;\n  value: ReactNode;\n  delta: ReactNode;\n  title: string;\n}) {\n  return (\n    <span id={id} className={clsx(styles.gauge, className)} title={title}>\n      {name} {value} ({delta})\n    </span>\n  );\n});\n\nfunction signed(value: any, delta: number): string {\n  const s = String(value);\n  if (delta > 0) {\n    return `\\u2191+${s}`;\n  }\n  if (delta < 0) {\n    return `\\u2193${s}`;\n  }\n  return s;\n}\n","// extracted by mini-css-extract-plugin\nvar _1 = \"tCoF0rcFRM\";\nvar _2 = \"wm0vl4Vbht\";\nexport { _1 as \"gauge\", _2 as \"gaugeList\" }\n","// extracted by mini-css-extract-plugin\nvar _1 = \"zUUi0Oar0X\";\nvar _2 = \"mYbhKDwyLS\";\nvar _3 = \"BPx8NbbbdE\";\nexport { _1 as \"name\", _2 as \"row\", _3 as \"value\" }\n","import { type LessonKey, type LessonKeys } from \"@keybr/lesson\";\nimport { type ClassName } from \"@keybr/widget\";\nimport { useRef } from \"react\";\nimport { Key } from \"./Key.tsx\";\n\nexport const KeySet = ({\n  id,\n  className,\n  lessonKeys,\n  onKeyHoverIn,\n  onKeyHoverOut,\n  onKeyClick,\n}: {\n  id?: string;\n  className?: ClassName;\n  lessonKeys: LessonKeys;\n  onKeyHoverIn?: (key: LessonKey, elem: Element) => void;\n  onKeyHoverOut?: (key: LessonKey, elem: Element) => void;\n  onKeyClick?: (key: LessonKey, elem: Element) => void;\n}) => {\n  const ref = useRef<HTMLElement>(null);\n  return (\n    <span\n      ref={ref}\n      id={id}\n      className={className}\n      onMouseOver={(event) => {\n        relayEvent(ref.current!, event, onKeyHoverIn);\n      }}\n      onMouseOut={(event) => {\n        relayEvent(ref.current!, event, onKeyHoverOut);\n      }}\n      onClick={(event) => {\n        relayEvent(ref.current!, event, onKeyClick);\n      }}\n    >\n      {[...lessonKeys].map((lessonKey) => (\n        <Key key={lessonKey.letter.codePoint} lessonKey={lessonKey} />\n      ))}\n    </span>\n  );\n};\n\nfunction relayEvent(\n  root: Element,\n  { target }: { target: any },\n  handler?: (key: LessonKey, elem: Element) => void,\n) {\n  while (\n    handler != null &&\n    target instanceof Element &&\n    root.contains(target)\n  ) {\n    const key = Key.attached(target);\n    if (key) {\n      handler(key, target);\n      return;\n    }\n    target = target.parentElement;\n  }\n}\n","import { useIntlNumbers } from \"@keybr/intl\";\nimport { type StreakList as StreakListType } from \"@keybr/result\";\nimport { type ClassName, styleTextTruncate, Value } from \"@keybr/widget\";\nimport { FormattedMessage } from \"react-intl\";\n\nexport const StreakList = ({\n  id,\n  className,\n  streakList,\n}: {\n  id?: string;\n  className?: ClassName;\n  streakList: StreakListType;\n}) => {\n  const { formatPercents } = useIntlNumbers();\n  const children = [];\n  for (const { level, results } of streakList) {\n    if (results.length > 0) {\n      if (children.length > 0) {\n        children.push(\" \");\n      }\n      children.push(\n        <FormattedMessage\n          id=\"streakList.streakLength\"\n          defaultMessage=\"{length, plural, =1 {One lesson} other {# lessons}} with {accuracy} accuracy.\"\n          values={{\n            length: results.length,\n            accuracy: <Value value={formatPercents(level)} />,\n          }}\n        />,\n      );\n    }\n  }\n  if (children.length === 0) {\n    children.push(\n      <FormattedMessage\n        id=\"streakList.noStreaks\"\n        defaultMessage=\"No accuracy streaks.\"\n      />,\n    );\n  }\n  return (\n    <span id={id} className={className}>\n      <span className={styleTextTruncate}>{...children}</span>\n    </span>\n  );\n};\n","import {\n  type DailyGoal as DailyGoalType,\n  type LessonKey,\n  type LessonKeys,\n} from \"@keybr/lesson\";\nimport {\n  type StreakList as StreakListType,\n  type SummaryStats,\n} from \"@keybr/result\";\nimport { Name } from \"@keybr/widget\";\nimport { memo } from \"react\";\nimport { useIntl } from \"react-intl\";\nimport { CurrentKey } from \"./CurrentKey.tsx\";\nimport { DailyGoal } from \"./DailyGoal.tsx\";\nimport { GaugeList } from \"./gauges.tsx\";\nimport * as styles from \"./indicators.module.less\";\nimport { KeySet } from \"./KeySet.tsx\";\nimport { type Names } from \"./names.ts\";\nimport { StreakList } from \"./StreakList.tsx\";\n\nexport const GaugeRow = memo(function GaugeRow({\n  summaryStats,\n  names,\n}: {\n  summaryStats: SummaryStats;\n  names?: Names;\n}) {\n  const { formatMessage } = useIntl();\n  return (\n    <div className={styles.row}>\n      <Name\n        className={styles.name}\n        name={formatMessage({\n          id: \"lesson.panel.gauges.label\",\n          defaultMessage: \"Metrics\",\n        })}\n      />\n      <GaugeList summaryStats={summaryStats} names={names} />\n    </div>\n  );\n});\n\nexport const KeySetRow = memo(function KeySetRow({\n  lessonKeys,\n  names,\n  onKeyHoverIn,\n  onKeyHoverOut,\n  onKeyClick,\n}: {\n  lessonKeys: LessonKeys;\n  names?: Names;\n  onKeyHoverIn?: (key: LessonKey, elem: Element) => void;\n  onKeyHoverOut?: (key: LessonKey, elem: Element) => void;\n  onKeyClick?: (key: LessonKey, elem: Element) => void;\n}) {\n  const { formatMessage } = useIntl();\n  return (\n    <div className={styles.row}>\n      <Name\n        className={styles.name}\n        name={formatMessage({\n          id: \"lesson.panel.keySet.label\",\n          defaultMessage: \"All keys\",\n        })}\n      />\n      <KeySet\n        id={names?.keySet}\n        className={styles.value}\n        lessonKeys={lessonKeys}\n        onKeyHoverIn={onKeyHoverIn}\n        onKeyHoverOut={onKeyHoverOut}\n        onKeyClick={onKeyClick}\n      />\n    </div>\n  );\n});\n\nexport const CurrentKeyRow = memo(function CurrentKeyRow({\n  lessonKeys,\n  names,\n}: {\n  lessonKeys: LessonKeys;\n  names?: Names;\n}) {\n  const { formatMessage } = useIntl();\n  return (\n    <div className={styles.row}>\n      <Name\n        className={styles.name}\n        name={formatMessage({\n          id: \"lesson.panel.currentKey.label\",\n          defaultMessage: \"Current key\",\n        })}\n      />\n      <CurrentKey\n        id={names?.currentKey}\n        className={styles.value}\n        lessonKeys={lessonKeys}\n      />\n    </div>\n  );\n});\n\nexport const StreakListRow = memo(function StreakListRow({\n  streakList,\n  names,\n}: {\n  streakList: StreakListType;\n  names?: Names;\n}) {\n  const { formatMessage } = useIntl();\n  return (\n    <div className={styles.row}>\n      <Name\n        className={styles.name}\n        name={formatMessage({\n          id: \"lesson.panel.streakList.label\",\n          defaultMessage: \"Accuracy\",\n        })}\n      />\n      <StreakList\n        id={names?.streakList}\n        className={styles.value}\n        streakList={streakList}\n      />\n    </div>\n  );\n});\n\nexport const DailyGoalRow = memo(function DailyGoalRow({\n  dailyGoal,\n  names,\n}: {\n  dailyGoal: DailyGoalType;\n  names?: Names;\n}) {\n  const { formatMessage } = useIntl();\n  return (\n    <div className={styles.row}>\n      <Name\n        className={styles.name}\n        name={formatMessage({\n          id: \"lesson.panel.dailyGoal.label\",\n          defaultMessage: \"Daily goal\",\n        })}\n      />\n      <DailyGoal\n        id={names?.dailyGoal}\n        className={styles.value}\n        dailyGoal={dailyGoal}\n      />\n    </div>\n  );\n});\n","import { type MouseProps } from \"@keybr/widget\";\nimport { clsx } from \"clsx\";\nimport * as styles from \"./styles.module.less\";\nimport { useKeyStyles } from \"./styles.ts\";\n\nexport const KeyLegend = ({\n  confidence,\n  isIncluded,\n  isFocused,\n  isForced,\n  size = \"normal\",\n  title,\n  ...props\n}: {\n  confidence: number | null;\n  isIncluded: boolean;\n  isFocused: boolean;\n  isForced: boolean;\n  size?: \"normal\" | \"large\";\n  title?: string;\n} & MouseProps) => {\n  const { keyStyles } = useKeyStyles();\n  return (\n    <span\n      {...props}\n      className={clsx(\n        styles.lessonKey,\n        size === \"normal\" && styles.lessonKey_normal,\n        size === \"large\" && styles.lessonKey_large,\n        isIncluded ? styles.lessonKey_included : styles.lessonKey_excluded,\n        isIncluded && confidence == null && styles.lessonKey_uncalibrated,\n        isIncluded && isFocused && styles.lessonKey_focused,\n        isIncluded && isForced && styles.lessonKey_forced,\n      )}\n      style={keyStyles(isIncluded ?? false, confidence ?? null)}\n      title={title}\n    >\n      ?\n      {isIncluded || (\n        <svg viewBox=\"0 0 100 100\" className={styles.cross}>\n          <path d=\"M 0 100 L 100 0\" />\n        </svg>\n      )}\n    </span>\n  );\n};\n","import { FormattedMessage } from \"react-intl\";\nimport { KeyLegend } from \"./KeyLegend.tsx\";\n\nexport const KeyLegendList = () => {\n  return (\n    <ul>\n      <li>\n        <KeyLegend //\n          isIncluded={true}\n          confidence={null}\n          isFocused={false}\n          isForced={false}\n        />{\" \"}\n        <FormattedMessage\n          id=\"lesson.indicator.notCalibrated\"\n          defaultMessage=\"A non-calibrated key with an unknown confidence level. You still have not pressed this key yet.\"\n        />\n      </li>\n      <li>\n        <KeyLegend //\n          isIncluded={true}\n          confidence={0}\n          isFocused={false}\n          isForced={false}\n        />{\" \"}\n        <FormattedMessage\n          id=\"lesson.indicator.leastConfidence\"\n          defaultMessage=\"A calibrated key with the lowest confidence level. The more times you press this key, the more accurate this metric becomes.\"\n        />\n      </li>\n      <li>\n        <KeyLegend //\n          isIncluded={true}\n          confidence={1}\n          isFocused={false}\n          isForced={false}\n        />{\" \"}\n        <FormattedMessage\n          id=\"lesson.indicator.mostConfidence\"\n          defaultMessage=\"A calibrated key with the highest confidence level. The more times you press this key, the more accurate this metric becomes.\"\n        />\n      </li>\n      <li>\n        <KeyLegend //\n          isIncluded={true}\n          confidence={0.3}\n          isFocused={true}\n          isForced={false}\n        />{\" \"}\n        <FormattedMessage\n          id=\"lesson.indicator.focused\"\n          defaultMessage=\"A key with increased frequency. It takes you the most time to find this key so the algorithm chose it to be included in every generated word.\"\n        />\n      </li>\n      <li>\n        <KeyLegend //\n          isIncluded={true}\n          confidence={null}\n          isFocused={false}\n          isForced={true}\n        />{\" \"}\n        <FormattedMessage\n          id=\"lesson.indicator.forced\"\n          defaultMessage=\"A key which was manually included in the lessons.\"\n        />\n      </li>\n      <li>\n        <KeyLegend //\n          isIncluded={false}\n          confidence={null}\n          isFocused={false}\n          isForced={false}\n        />{\" \"}\n        <FormattedMessage\n          id=\"lesson.indicator.notIncluded\"\n          defaultMessage=\"A key which was not yet included in the lessons.\"\n        />\n      </li>\n    </ul>\n  );\n};\n","import { LessonKey, Target } from \"@keybr/lesson\";\nimport { type Letter } from \"@keybr/phonetic-model\";\nimport { type KeyStatsMap } from \"@keybr/result\";\nimport { useSettings } from \"@keybr/settings\";\nimport { type FocusProps, useHotkeysHandler } from \"@keybr/widget\";\nimport { Key } from \"./Key.tsx\";\nimport * as styles from \"./KeySelector.module.less\";\n\nexport const KeySelector = ({\n  current,\n  disabled,\n  keyStatsMap,\n  tabIndex,\n  title,\n  onSelect,\n  onFocus,\n  onBlur,\n}: {\n  current: Letter;\n  keyStatsMap: KeyStatsMap;\n  title?: string;\n  onSelect?: (letter: Letter) => void;\n} & FocusProps) => {\n  const { settings } = useSettings();\n  const target = new Target(settings);\n  const { letters } = keyStatsMap;\n  const handlePrev = () => {\n    if (onSelect != null) {\n      const currentIndex = letters.findIndex(\n        (letter) => letter.codePoint === current.codePoint,\n      );\n      let selectedIndex;\n      if (currentIndex === -1 || currentIndex === 0) {\n        selectedIndex = letters.length - 1;\n      } else {\n        selectedIndex = currentIndex - 1;\n      }\n      onSelect(letters[selectedIndex]);\n    }\n  };\n  const handleNext = () => {\n    if (onSelect != null) {\n      const currentIndex = letters.findIndex(\n        (letter) => letter.codePoint === current.codePoint,\n      );\n      let selectedIndex;\n      if (currentIndex === -1 || currentIndex === letters.length - 1) {\n        selectedIndex = 0;\n      } else {\n        selectedIndex = currentIndex + 1;\n      }\n      onSelect(letters[selectedIndex]);\n    }\n  };\n  return (\n    <span\n      className={styles.root}\n      tabIndex={disabled ? undefined : (tabIndex ?? 0)}\n      title={title}\n      onFocus={onFocus}\n      onBlur={onBlur}\n      onKeyDown={useHotkeysHandler({\n        [\"ArrowLeft\"]: handlePrev,\n        [\"ArrowUp\"]: handlePrev,\n        [\"ArrowRight\"]: handleNext,\n        [\"ArrowDown\"]: handleNext,\n      })}\n    >\n      {letters.map((letter) => (\n        <Key\n          key={letter.codePoint}\n          lessonKey={LessonKey.from(\n            keyStatsMap.get(letter),\n            target,\n          ).asIncluded()}\n          isSelectable={true}\n          isCurrent={current.codePoint === letter.codePoint}\n          onClick={() => {\n            if (onSelect != null) {\n              onSelect(letter);\n            }\n          }}\n        />\n      ))}\n    </span>\n  );\n};\n","// extracted by mini-css-extract-plugin\nvar _1 = \"ayEXwLPLQs\";\nexport { _1 as \"root\" }\n","// extracted by mini-css-extract-plugin\nvar _1 = \"wDhvk0rXZS\";\nvar _2 = \"xmhZRpmiVa\";\nvar _3 = \"f1BvXbFE4v\";\nvar _4 = \"oKiVowjUBZ\";\nvar _5 = \"aiZz93JUNJ\";\nvar _6 = \"E0bITlna2T\";\nvar _7 = \"ZL5a5Z6Skm\";\nvar _8 = \"LGAMGK6Sdx\";\nvar _9 = \"WDVkIKvR38\";\nvar _a = \"oyzuPOqGUt\";\nvar _b = \"t8DwdyOdBu\";\nexport { _1 as \"accuracy\", _2 as \"controls\", _3 as \"currentKey\", _4 as \"dailyGoal\", _5 as \"indicators\", _6 as \"keySet\", _7 as \"keyboard\", _8 as \"score\", _9 as \"speed\", _a as \"streakList\", _b as \"textInput\" }\n","import { type Letter } from \"@keybr/phonetic-model\";\nimport { type KeySample, type KeyStats, type KeyStatsMap } from \"@keybr/result\";\nimport { type CodePoint } from \"@keybr/unicode\";\nimport { type Target } from \"./target.ts\";\n\nexport class LessonKey implements KeyStats {\n  static from(keyStats: KeyStats, target: Target): LessonKey {\n    const { letter, samples, timeToType, bestTimeToType } = keyStats;\n    return new LessonKey({\n      letter,\n      samples,\n      timeToType,\n      bestTimeToType,\n      confidence: target.confidence(timeToType),\n      bestConfidence: target.confidence(bestTimeToType),\n    });\n  }\n\n  readonly letter: Letter;\n  readonly samples: readonly KeySample[];\n  readonly timeToType: number | null;\n  readonly bestTimeToType: number | null;\n  readonly confidence: number | null;\n  readonly bestConfidence: number | null;\n  readonly isIncluded: boolean;\n  readonly isFocused: boolean;\n  readonly isForced: boolean;\n\n  constructor({\n    letter,\n    samples,\n    timeToType,\n    bestTimeToType,\n    confidence,\n    bestConfidence,\n    isIncluded = false,\n    isFocused = false,\n    isForced = false,\n  }: {\n    letter: Letter;\n    samples: readonly KeySample[];\n    timeToType: number | null;\n    bestTimeToType: number | null;\n    confidence: number | null;\n    bestConfidence: number | null;\n    isIncluded?: boolean;\n    isFocused?: boolean;\n    isForced?: boolean;\n  }) {\n    this.letter = letter;\n    this.samples = samples;\n    this.timeToType = timeToType;\n    this.bestTimeToType = bestTimeToType;\n    this.confidence = confidence;\n    this.bestConfidence = bestConfidence;\n    this.isIncluded = isIncluded;\n    this.isFocused = isFocused;\n    this.isForced = isForced;\n    Object.freeze(this);\n  }\n\n  asIncluded(): LessonKey {\n    return new LessonKey({\n      ...this,\n      isIncluded: true,\n    });\n  }\n\n  asExcluded(): LessonKey {\n    return new LessonKey({\n      ...this,\n      isIncluded: false,\n      isFocused: false,\n      isForced: false,\n    });\n  }\n\n  asForced(): LessonKey {\n    return new LessonKey({\n      ...this,\n      isIncluded: true,\n      isForced: true,\n    });\n  }\n\n  asFocused(): LessonKey {\n    return new LessonKey({\n      ...this,\n      isIncluded: true,\n      isFocused: true,\n    });\n  }\n}\n\nexport class LessonKeys implements Iterable<LessonKey> {\n  static includeAll(keyStatsMap: KeyStatsMap, target: Target): LessonKeys {\n    return new LessonKeys(\n      [...keyStatsMap].map((keyStats) =>\n        LessonKey.from(keyStats, target).asIncluded(),\n      ),\n    );\n  }\n\n  readonly #letters: readonly Letter[];\n  readonly #keys: Map<CodePoint, LessonKey>;\n\n  constructor(keys: readonly LessonKey[]) {\n    this.#letters = [...keys.map(({ letter }) => letter)];\n    this.#keys = new Map(keys.map((key) => [key.letter.codePoint, key]));\n  }\n\n  get letters(): readonly Letter[] {\n    return this.#letters;\n  }\n\n  [Symbol.iterator](): IterableIterator<LessonKey> {\n    return this.#keys.values();\n  }\n\n  findIncludedKeys(): LessonKey[] {\n    return [...this.#keys.values()].filter((key) => key.isIncluded);\n  }\n\n  findExcludedKeys(): LessonKey[] {\n    return [...this.#keys.values()].filter((key) => !key.isIncluded);\n  }\n\n  findFocusedKey(): LessonKey | null {\n    return [...this.#keys.values()].find((key) => key.isFocused) ?? null;\n  }\n\n  include({ codePoint }: Letter): void {\n    this.#keys.set(codePoint, this.#keys.get(codePoint)!.asIncluded());\n  }\n\n  exclude({ codePoint }: Letter): void {\n    this.#keys.set(codePoint, this.#keys.get(codePoint)!.asExcluded());\n  }\n\n  force({ codePoint }: Letter): void {\n    this.#keys.set(codePoint, this.#keys.get(codePoint)!.asForced());\n  }\n\n  focus({ codePoint }: Letter): void {\n    this.#keys.set(codePoint, this.#keys.get(codePoint)!.asFocused());\n  }\n\n  find(codePoint: CodePoint): LessonKey | null {\n    return this.#keys.get(codePoint) ?? null;\n  }\n}\n","import {\n  type Keyboard,\n  KeyboardOptions,\n  type WeightedCodePointSet,\n} from \"@keybr/keyboard\";\nimport { type Letter, PhoneticModel } from \"@keybr/phonetic-model\";\nimport { LCG, type RNGStream } from \"@keybr/rand\";\nimport { type KeyStatsMap, type Result, ResultGroups } from \"@keybr/result\";\nimport { type Settings } from \"@keybr/settings\";\nimport { type StyledText } from \"@keybr/textinput\";\nimport { type LessonKeys } from \"./key.ts\";\n\nexport abstract class Lesson {\n  static rng: RNGStream = LCG(Date.now());\n\n  readonly settings: Settings;\n  readonly keyboard: Keyboard;\n  readonly codePoints: WeightedCodePointSet;\n  readonly model: PhoneticModel;\n\n  protected constructor(\n    settings: Settings,\n    keyboard: Keyboard,\n    model: PhoneticModel,\n  ) {\n    this.settings = settings;\n    this.keyboard = keyboard;\n    this.codePoints = keyboard.getCodePoints();\n    this.model = PhoneticModel.restrict(model, this.codePoints);\n  }\n\n  filter(results: readonly Result[]): readonly Result[] {\n    return ResultGroups.byLayoutFamily(results).get(\n      KeyboardOptions.from(this.settings).layout.family,\n    );\n  }\n\n  abstract get letters(): readonly Letter[];\n\n  abstract update(keyStatsMap: KeyStatsMap): LessonKeys;\n\n  abstract generate(lessonKeys: LessonKeys, rng: RNGStream): StyledText;\n}\n","import { Enum, type EnumItem } from \"@keybr/lang\";\nimport { TextType } from \"@keybr/result\";\n\nexport class LessonType implements EnumItem {\n  static readonly GUIDED = new LessonType(\"guided\", TextType.GENERATED);\n  static readonly WORDLIST = new LessonType(\"wordlist\", TextType.NATURAL);\n  static readonly BOOKS = new LessonType(\"books\", TextType.NATURAL);\n  static readonly CUSTOM = new LessonType(\"custom\", TextType.NATURAL);\n  static readonly CODE = new LessonType(\"code\", TextType.CODE);\n  static readonly NUMBERS = new LessonType(\"numbers\", TextType.NUMBERS);\n  static readonly ALL = new Enum<LessonType>(\n    LessonType.GUIDED,\n    LessonType.WORDLIST,\n    LessonType.BOOKS,\n    LessonType.CUSTOM,\n    LessonType.CODE,\n    LessonType.NUMBERS,\n  );\n\n  private constructor(\n    readonly id: string,\n    readonly textType: TextType,\n  ) {\n    Object.freeze(this);\n  }\n\n  toString() {\n    return this.id;\n  }\n\n  toJSON() {\n    return this.id;\n  }\n}\n","import { Syntax } from \"@keybr/code\";\nimport { Book } from \"@keybr/content\";\nimport {\n  booleanProp,\n  flagsProp,\n  itemProp,\n  numberProp,\n  stringProp,\n} from \"@keybr/settings\";\nimport { LessonType } from \"./lessontype.ts\";\n\nexport const lessonProps = {\n  type: itemProp(\"lesson.type\", LessonType.ALL, LessonType.GUIDED),\n  length: numberProp(\"lesson.length\", 0, { min: 0, max: 1 }),\n  guided: {\n    naturalWords: booleanProp(\"lesson.guided.naturalWords\", true),\n    keyboardOrder: booleanProp(\"lesson.guided.keyboardOrder\", false),\n    alphabetSize: numberProp(\"lesson.guided.alphabetSize\", 0, {\n      min: 0,\n      max: 1,\n    }),\n    recoverKeys: booleanProp(\"lesson.guided.recoverKeys\", false),\n  } as const,\n  wordList: {\n    wordListSize: numberProp(\"lesson.wordList.wordListSize\", 1000, {\n      min: 10,\n      max: 1000,\n    }),\n    longWordsOnly: booleanProp(\"lesson.wordList.longWordsOnly\", false),\n  } as const,\n  books: {\n    book: itemProp(\"lesson.books.book\", Book.ALL, Book.EN_ALICE_WONDERLAND),\n    paragraphIndex: numberProp(\"lesson.books.paragraphIndex\", 0, {\n      min: 0,\n      max: 1000,\n    }),\n    lettersOnly: booleanProp(\"lesson.books.lettersOnly\", false),\n    lowercase: booleanProp(\"lesson.books.lowercase\", false),\n  },\n  customText: {\n    content: stringProp(\n      \"lesson.customText.content\",\n      \"The quick brown fox jumps over the lazy dog.\",\n      { maxLength: 10_000 },\n    ),\n    lettersOnly: booleanProp(\"lesson.customText.lettersOnly\", true),\n    lowercase: booleanProp(\"lesson.customText.lowercase\", true),\n    randomize: booleanProp(\"lesson.customText.randomize\", false),\n  } as const,\n  numbers: {\n    benford: booleanProp(\"lesson.numbers.benford\", true),\n  } as const,\n  code: {\n    syntax: itemProp(\"lesson.code.syntax\", Syntax.ALL, Syntax.HTML),\n    flags: flagsProp(\"lesson.code.flags\", [\n      \"capitals\",\n      \"numbers\",\n      \"types\",\n      \"comments\",\n    ]),\n  } as const,\n  capitals: numberProp(\"lesson.capitals\", 0, { min: 0, max: 1 }),\n  punctuators: numberProp(\"lesson.punctuators\", 0, { min: 0, max: 1 }),\n  repeatWords: numberProp(\"lesson.repeatWords\", 1, { min: 1, max: 10 }),\n  targetSpeed: numberProp(\"lesson.targetSpeed\", 175, { min: 75, max: 750 }),\n  dailyGoal: numberProp(\"lesson.dailyGoal\", 30, { min: 0, max: 120 }),\n} as const;\n","import { speedToTime } from \"@keybr/result\";\nimport { type Settings } from \"@keybr/settings\";\nimport { lessonProps } from \"./settings.ts\";\n\nexport class Target {\n  readonly targetSpeed: number;\n\n  constructor(settings: Settings) {\n    this.targetSpeed = settings.get(lessonProps.targetSpeed);\n  }\n\n  confidence(timeToType: number): number;\n  confidence(timeToType: null): null;\n  confidence(timeToType: number | null): number | null;\n  confidence(timeToType: number | null): number | null {\n    if (timeToType == null) {\n      return null;\n    }\n    if (!Number.isFinite(timeToType) || timeToType === 0) {\n      throw new Error();\n    }\n    return speedToTime(this.targetSpeed) / timeToType;\n  }\n}\n","import { type Settings } from \"@keybr/settings\";\nimport { lessonProps } from \"../settings.ts\";\nimport { type WordGenerator } from \"./words.ts\";\n\nexport function generateFragment(\n  settings: Settings,\n  nextWord: WordGenerator,\n  { repeatWords = 1 }: { readonly repeatWords?: number } = {},\n): string {\n  const length = 100 + Math.round(settings.get(lessonProps.length) * 100);\n  const words: string[] = [];\n  let wordsLength = 0;\n  while (true) {\n    const word = nextWord() || \"?\";\n    for (let i = 1; i <= repeatWords; i++) {\n      words.push(word);\n      wordsLength += word.length;\n      if (wordsLength >= length) {\n        return words.join(\" \");\n      }\n    }\n  }\n}\n","import { type Language } from \"@keybr/keyboard\";\nimport {\n  type Filter,\n  type Letter,\n  type PhoneticModel,\n} from \"@keybr/phonetic-model\";\nimport { randomSample, type RNG, weightedRandomSample } from \"@keybr/rand\";\n\nexport type WordGenerator = () => string | \"\" | null;\n\nexport function phoneticWords(\n  model: PhoneticModel,\n  filter: Filter,\n  random: RNG,\n): WordGenerator {\n  return () => {\n    return model.nextWord(filter, random) || null;\n  };\n}\n\nexport function randomWords(\n  wordList: readonly string[],\n  random: RNG,\n): WordGenerator {\n  return () => {\n    if (wordList.length > 0) {\n      return randomSample(wordList, random);\n    } else {\n      return null;\n    }\n  };\n}\n\nexport function wordSequence(\n  wordList: readonly string[],\n  cursor: { wordIndex: number },\n): WordGenerator {\n  return () => {\n    const { length } = wordList;\n    if (length > 0) {\n      let { wordIndex } = cursor;\n      if (wordIndex >= length) {\n        wordIndex = 0;\n      }\n      const word = wordList[wordIndex];\n      cursor.wordIndex = wordIndex + 1;\n      return word;\n    } else {\n      return null;\n    }\n  };\n}\n\nexport function uniqueWords(nextWord: WordGenerator): WordGenerator {\n  let last = \"\";\n  return () => {\n    let n = 0;\n    let word = null;\n    while (n < 3) {\n      word = nextWord();\n      if (word == null || word === \"\") {\n        return null;\n      }\n      if (word !== last) {\n        last = word;\n        return word;\n      }\n      n++;\n    }\n    return word;\n  };\n}\n\nexport function mangledWords(\n  nextWord: WordGenerator,\n  language: Language,\n  punctuators: readonly Letter[],\n  {\n    withCapitals = 0,\n    withPunctuators = 0,\n  }: {\n    withCapitals?: number;\n    withPunctuators?: number;\n  },\n  random: RNG,\n): WordGenerator {\n  return () => {\n    let word = nextWord();\n    if (word == null || word === \"\") {\n      return null;\n    }\n    if (withCapitals > 0 && withCapitals >= random()) {\n      word = language.capitalCase(word);\n    }\n    if (withPunctuators > 0 && withPunctuators >= random()) {\n      const { codePoint } = weightedRandomSample(\n        punctuators,\n        ({ f }) => f,\n        random,\n      );\n      switch (codePoint) {\n        case 33:\n          word = `${word}!`;\n          break;\n        case 34:\n          word = `\"${word}\"`;\n          break;\n        case 39:\n          word = `'${word}'`;\n          break;\n        case 44:\n          word = `${word},`;\n          break;\n        case 45:\n          word = `${word}-${nextWord()}`;\n          break;\n        case 46:\n          word = `${word}.`;\n          break;\n        case 58:\n          word = `${word}:`;\n          break;\n        case 59:\n          word = `${word};`;\n          break;\n        case 63:\n          word = `${word}?`;\n          break;\n      }\n    }\n    return word;\n  };\n}\n","import {\n  type Book,\n  type BookContent,\n  type Content,\n  flattenContent,\n  splitParagraph,\n} from \"@keybr/content\";\nimport { filterText, type Keyboard } from \"@keybr/keyboard\";\nimport { clamp } from \"@keybr/lang\";\nimport { type PhoneticModel } from \"@keybr/phonetic-model\";\nimport { type KeyStatsMap } from \"@keybr/result\";\nimport { type Settings } from \"@keybr/settings\";\nimport { LessonKeys } from \"./key.ts\";\nimport { Lesson } from \"./lesson.ts\";\nimport { lessonProps } from \"./settings.ts\";\nimport { Target } from \"./target.ts\";\nimport { generateFragment } from \"./text/fragment.ts\";\nimport { wordSequence } from \"./text/words.ts\";\n\nexport class BooksLesson extends Lesson {\n  readonly book: Book;\n  readonly content: Content;\n  readonly paragraphs: readonly string[];\n  readonly paragraphIndex: number;\n  readonly wordList: readonly string[];\n  wordIndex = 0;\n\n  constructor(\n    settings: Settings,\n    keyboard: Keyboard,\n    model: PhoneticModel,\n    { book, content }: BookContent,\n  ) {\n    super(settings, keyboard, model);\n    const paragraphIndex = this.settings.get(lessonProps.books.paragraphIndex);\n    this.book = book;\n    this.content = content;\n    this.paragraphs = this.#flattenContent(content);\n    this.paragraphIndex = clamp(paragraphIndex, 0, this.paragraphs.length);\n    this.wordList = [\n      ...this.paragraphs.slice(this.paragraphIndex),\n      ...this.paragraphs.slice(0, this.paragraphIndex),\n    ]\n      .map(splitParagraph)\n      .flat();\n  }\n\n  override get letters() {\n    return this.model.letters;\n  }\n\n  override update(keyStatsMap: KeyStatsMap) {\n    return LessonKeys.includeAll(keyStatsMap, new Target(this.settings));\n  }\n\n  override generate() {\n    return generateFragment(this.settings, wordSequence(this.wordList, this));\n  }\n\n  #flattenContent(content: Content) {\n    const lettersOnly = this.settings.get(lessonProps.books.lettersOnly);\n    const lowercase = this.settings.get(lessonProps.books.lowercase);\n    const codePoints = new Set(this.keyboard.getCodePoints());\n    if (lettersOnly) {\n      for (const codePoint of codePoints) {\n        if (!this.model.language.includes(codePoint)) {\n          codePoints.delete(codePoint);\n        }\n      }\n    }\n    return flattenContent(content).map((paragraph) => {\n      let text = filterText(paragraph, codePoints);\n      if (lowercase) {\n        text = this.model.language.lowerCase(text);\n      }\n      return text;\n    });\n  }\n}\n","import { type Keyboard } from \"@keybr/keyboard\";\nimport { Letter, type PhoneticModel } from \"@keybr/phonetic-model\";\nimport { type RNGStream } from \"@keybr/rand\";\nimport { type KeyStatsMap } from \"@keybr/result\";\nimport { type Settings } from \"@keybr/settings\";\nimport { LessonKeys } from \"./key.ts\";\nimport { Lesson } from \"./lesson.ts\";\nimport { lessonProps } from \"./settings.ts\";\nimport { Target } from \"./target.ts\";\n\nexport class CodeLesson extends Lesson {\n  constructor(settings: Settings, keyboard: Keyboard, model: PhoneticModel) {\n    super(settings, keyboard, model);\n  }\n\n  override get letters(): readonly Letter[] {\n    return Letter.programming;\n  }\n\n  override update(keyStatsMap: KeyStatsMap) {\n    return LessonKeys.includeAll(keyStatsMap, new Target(this.settings));\n  }\n\n  override generate(lessonKeys: LessonKeys, rng: RNGStream) {\n    const syntax = this.settings.get(lessonProps.code.syntax);\n    const flags = this.settings.get(lessonProps.code.flags);\n    return syntax.generate(new Set(flags), rng);\n  }\n}\n","import { filterText, type Keyboard } from \"@keybr/keyboard\";\nimport { type PhoneticModel } from \"@keybr/phonetic-model\";\nimport { type RNGStream } from \"@keybr/rand\";\nimport { type KeyStatsMap } from \"@keybr/result\";\nimport { type Settings } from \"@keybr/settings\";\nimport { LessonKeys } from \"./key.ts\";\nimport { Lesson } from \"./lesson.ts\";\nimport { lessonProps } from \"./settings.ts\";\nimport { Target } from \"./target.ts\";\nimport { generateFragment } from \"./text/fragment.ts\";\nimport { randomWords, uniqueWords, wordSequence } from \"./text/words.ts\";\n\nexport class CustomTextLesson extends Lesson {\n  readonly wordList: readonly string[];\n  wordIndex = 0;\n\n  constructor(settings: Settings, keyboard: Keyboard, model: PhoneticModel) {\n    super(settings, keyboard, model);\n    this.wordList = this.#getWordList();\n  }\n\n  override get letters() {\n    return this.model.letters;\n  }\n\n  override update(keyStatsMap: KeyStatsMap) {\n    return LessonKeys.includeAll(keyStatsMap, new Target(this.settings));\n  }\n\n  override generate(lessonKeys: LessonKeys, rng: RNGStream) {\n    return generateFragment(this.settings, this.#makeWordGenerator(rng));\n  }\n\n  #makeWordGenerator(rng: RNGStream) {\n    const randomize = this.settings.get(lessonProps.customText.randomize);\n    if (randomize && this.wordList.length > 0) {\n      return uniqueWords(randomWords(this.wordList, rng));\n    } else {\n      return wordSequence(this.wordList, this);\n    }\n  }\n\n  #getWordList() {\n    const content = this.settings.get(lessonProps.customText.content);\n    const lettersOnly = this.settings.get(lessonProps.customText.lettersOnly);\n    const lowercase = this.settings.get(lessonProps.customText.lowercase);\n    const codePoints = new Set(this.codePoints);\n    if (lettersOnly) {\n      for (const codePoint of codePoints) {\n        if (!this.model.language.includes(codePoint)) {\n          codePoints.delete(codePoint);\n        }\n      }\n    }\n    let text = filterText(content, codePoints);\n    if (lowercase) {\n      text = this.model.language.lowerCase(text);\n    }\n    return text.split(/\\s+/);\n  }\n}\n","import { type Result, Today } from \"@keybr/result\";\nimport { type Settings } from \"@keybr/settings\";\nimport { lessonProps } from \"./settings.ts\";\n\nexport type DailyGoal = {\n  /** Daily goal in minutes. */\n  readonly goal: number;\n  /** Progress in range [0, 1]. */\n  readonly value: number;\n};\n\nexport class MutableDailyGoal implements DailyGoal {\n  readonly #goal: number;\n  readonly #today: Today;\n  #time: number;\n  #value: number;\n\n  constructor(settings: Settings, today: Today = new Today()) {\n    this.#goal = settings.get(lessonProps.dailyGoal);\n    this.#today = today;\n    this.#time = 0;\n    this.#value = 0;\n  }\n\n  get goal(): number {\n    return this.#goal;\n  }\n\n  get value(): number {\n    return this.#value;\n  }\n\n  append(result: Result) {\n    if (this.#today.includes(result.timeStamp)) {\n      this.#time += result.time;\n      this.#value = this.measure(this.#time);\n    }\n  }\n\n  measure(time: number): number {\n    return this.#goal > 0 ? time / 1000 / 60 / this.#goal : 0;\n  }\n\n  copy(): DailyGoal {\n    return { goal: this.#goal, value: this.#value };\n  }\n}\n","import { type WordList } from \"@keybr/content\";\nimport { type Filter } from \"@keybr/phonetic-model\";\nimport {\n  type CodePoint,\n  type CodePointSet,\n  toCodePoints,\n} from \"@keybr/unicode\";\n\nexport class Dictionary implements Iterable<string> {\n  readonly #words: Word[] = [];\n  readonly #dict = new Map<CodePoint, Word[]>();\n\n  constructor(wordList: WordList) {\n    for (const item of wordList) {\n      const word = new Word(item);\n      this.#words.push(word);\n      for (const codePoint of word.codePoints) {\n        let list = this.#dict.get(codePoint);\n        if (list == null) {\n          this.#dict.set(codePoint, (list = []));\n        }\n        if (!list.includes(word)) {\n          list.push(word);\n        }\n      }\n    }\n  }\n\n  *[Symbol.iterator](): IterableIterator<string> {\n    for (const word of this.#words) {\n      yield word.value;\n    }\n  }\n\n  find({ codePoints, focusedCodePoint }: Filter): WordList {\n    let words = this.#words;\n    if (focusedCodePoint != null) {\n      words = this.#dict.get(focusedCodePoint) ?? [];\n    }\n    if (codePoints != null) {\n      words = words.filter((word) => word.matches(codePoints));\n    }\n    return words.map(({ value }) => value);\n  }\n}\n\nclass Word {\n  readonly value: string;\n  readonly codePoints: readonly CodePoint[];\n\n  constructor(value: string) {\n    this.value = value;\n    this.codePoints = [...toCodePoints(value)];\n  }\n\n  matches(codePoints: CodePointSet): boolean {\n    return this.codePoints.every((codePoint) => codePoints.has(codePoint));\n  }\n\n  toString() {\n    return this.value;\n  }\n}\n\nexport const filterWordList = (\n  words: WordList,\n  codePoints: CodePointSet,\n): string[] =>\n  words.filter((word) =>\n    [...toCodePoints(word)].every((codePoint) => codePoints.has(codePoint)),\n  );\n","import { type WordList } from \"@keybr/content\";\nimport { type Keyboard } from \"@keybr/keyboard\";\nimport { Filter, Letter, type PhoneticModel } from \"@keybr/phonetic-model\";\nimport { type RNGStream } from \"@keybr/rand\";\nimport { type KeyStatsMap } from \"@keybr/result\";\nimport { type Settings } from \"@keybr/settings\";\nimport { Dictionary, filterWordList } from \"./dictionary.ts\";\nimport { LessonKey, LessonKeys } from \"./key.ts\";\nimport { Lesson } from \"./lesson.ts\";\nimport { lessonProps } from \"./settings.ts\";\nimport { Target } from \"./target.ts\";\nimport { generateFragment } from \"./text/fragment.ts\";\nimport {\n  mangledWords,\n  phoneticWords,\n  randomWords,\n  uniqueWords,\n} from \"./text/words.ts\";\n\nexport class GuidedLesson extends Lesson {\n  readonly dictionary: Dictionary;\n\n  constructor(\n    settings: Settings,\n    keyboard: Keyboard,\n    model: PhoneticModel,\n    wordList: WordList,\n  ) {\n    super(settings, keyboard, model);\n    this.dictionary = new Dictionary(\n      filterWordList(wordList, this.codePoints).filter(\n        (word) => word.length > 2,\n      ),\n    );\n  }\n\n  override get letters() {\n    return this.model.letters;\n  }\n\n  override update(keyStatsMap: KeyStatsMap) {\n    const alphabetSize = this.settings.get(lessonProps.guided.alphabetSize);\n    const recoverKeys = this.settings.get(lessonProps.guided.recoverKeys);\n\n    const letters = this.#getLetters();\n\n    const minSize = 6;\n    const maxSize =\n      minSize + Math.round((letters.length - minSize) * alphabetSize);\n\n    const target = new Target(this.settings);\n\n    const lessonKeys = new LessonKeys(\n      letters.map((letter) => LessonKey.from(keyStatsMap.get(letter), target)),\n    );\n\n    for (const lessonKey of lessonKeys) {\n      const includedKeys = lessonKeys.findIncludedKeys();\n\n      if (includedKeys.length < minSize) {\n        // Meet the minimal required alphabet size.\n        lessonKeys.include(lessonKey.letter);\n        continue;\n      }\n\n      if (includedKeys.length < maxSize) {\n        // Meet the maximal required alphabet size.\n        lessonKeys.force(lessonKey.letter);\n        continue;\n      }\n\n      if ((lessonKey.bestConfidence ?? 0) >= 1) {\n        // Must include all confident keys.\n        lessonKeys.include(lessonKey.letter);\n        continue;\n      }\n\n      if (recoverKeys) {\n        if (includedKeys.every((key) => (key.confidence ?? 0) >= 1)) {\n          // Include a new key only when all the previous keys\n          // are now above the target speed.\n          lessonKeys.include(lessonKey.letter);\n          continue;\n        }\n      } else {\n        if (includedKeys.every((key) => (key.bestConfidence ?? 0) >= 1)) {\n          // Include a new key only when all the previous keys\n          // were once above the target speed.\n          lessonKeys.include(lessonKey.letter);\n          continue;\n        }\n      }\n    }\n\n    // Find the least confident of all included keys and focus on it.\n    const confidenceOf = (key: LessonKey): number => {\n      return recoverKeys ? (key.confidence ?? 0) : (key.bestConfidence ?? 0);\n    };\n    const weakestKeys = lessonKeys\n      .findIncludedKeys()\n      .filter((key) => confidenceOf(key) < 1)\n      .sort((a, b) => confidenceOf(a) - confidenceOf(b));\n    if (weakestKeys.length > 0) {\n      lessonKeys.focus(weakestKeys[0].letter);\n    }\n\n    return lessonKeys;\n  }\n\n  override generate(lessonKeys: LessonKeys, rng: RNGStream) {\n    const filter = new Filter(\n      lessonKeys.findIncludedKeys(),\n      lessonKeys.findFocusedKey(),\n    );\n    const wordGenerator = this.#makeWordGenerator(filter, rng);\n    const words = mangledWords(\n      uniqueWords(wordGenerator),\n      this.model.language,\n      Letter.restrict(Letter.punctuators, this.codePoints),\n      {\n        withCapitals: this.settings.get(lessonProps.capitals),\n        withPunctuators: this.settings.get(lessonProps.punctuators),\n      },\n      rng,\n    );\n    return generateFragment(this.settings, words, {\n      repeatWords: this.settings.get(lessonProps.repeatWords),\n    });\n  }\n\n  #getLetters() {\n    const { letters } = this.model;\n    const { codePoints } = this;\n    if (this.settings.get(lessonProps.guided.keyboardOrder)) {\n      return Letter.weightedFrequencyOrder(letters, ({ codePoint }) =>\n        codePoints.weight(codePoint),\n      );\n    } else {\n      return Letter.frequencyOrder(letters);\n    }\n  }\n\n  #makeWordGenerator(filter: Filter, rng: RNGStream) {\n    const pseudoWords = phoneticWords(this.model, filter, rng);\n    if (this.settings.get(lessonProps.guided.naturalWords)) {\n      const words = this.dictionary.find(filter).slice(0, 1000);\n      while (words.length < 15) {\n        const word = pseudoWords();\n        if (word != null) {\n          words.push(word);\n        } else {\n          break;\n        }\n      }\n      if (words.length === 0) {\n        words.push(\"?\");\n      }\n      return randomWords(words, rng);\n    }\n    return pseudoWords;\n  }\n}\n","import {\n  hasData,\n  type Polynomial,\n  polynomialRegression,\n  r2,\n  Vector,\n} from \"@keybr/math\";\nimport { type KeySample, timeToSpeed } from \"@keybr/result\";\nimport { findSession } from \"./learningsession.ts\";\nimport { type Target } from \"./target.ts\";\n\nexport class LearningRate {\n  static from(\n    samples: readonly KeySample[],\n    target: Target,\n  ): LearningRate | null {\n    const recent = samples.slice(-30);\n    if (hasData(recent)) {\n      return new LearningRate(recent, target);\n    } else {\n      return null;\n    }\n  }\n\n  static example(target: Target): LearningRate {\n    return new LearningRate(\n      new Array(14).fill(0).map((value, index) => {\n        const timeStamp =\n          /* 2001-01-01T12:00:00Z */ 978350400000 + index * 60000;\n        const timeToType = 500 - index * 10;\n        return {\n          index,\n          timeStamp: timeStamp,\n          hitCount: 30,\n          missCount: 0,\n          timeToType: timeToType,\n          filteredTimeToType: timeToType,\n        } satisfies KeySample;\n      }),\n      target,\n    );\n  }\n\n  /** A vector of indices which are lesson numbers. */\n  readonly vIndex: Vector;\n  /** A vector of values which are typing speeds. */\n  readonly vSpeed: Vector;\n  /** A derived model which approximates values. */\n  readonly mSpeed: Polynomial;\n\n  readonly certainty: number = NaN;\n  readonly learningRate: number = NaN;\n  readonly remainingLessons: number = NaN;\n\n  constructor(\n    readonly samples: readonly KeySample[],\n    readonly target: Target,\n  ) {\n    const session = findSession(samples);\n    if (hasData(session)) {\n      // Replace all samples with the latest learning session\n      // of lessons without breaks between them.\n      samples = session;\n    }\n    const { length } = samples;\n    const vIndex = new Vector();\n    const vSpeed = new Vector();\n    for (let index = 0; index < length; index++) {\n      const sample = samples[index];\n      vIndex.add(sample.index + 1);\n      vSpeed.add(timeToSpeed(sample.filteredTimeToType));\n    }\n    const mSpeed = polynomialRegression(\n      vIndex,\n      vSpeed,\n      getPolynomialDegree(length),\n    );\n    this.vIndex = vIndex;\n    this.vSpeed = vSpeed;\n    this.mSpeed = mSpeed;\n    const certainty = r2(vIndex, vSpeed, mSpeed);\n    if (certainty >= 0.5) {\n      const lastIndex = samples[length - 1].index + 1;\n      this.certainty = certainty;\n      this.learningRate = mSpeed.derivative().eval(lastIndex);\n      for (let i = 1; i <= 50; i++) {\n        if (mSpeed.eval(lastIndex + i) >= this.target.targetSpeed) {\n          this.remainingLessons = i;\n          break;\n        }\n      }\n    }\n  }\n}\n\nfunction getPolynomialDegree(length: number): number {\n  if (length > 20) {\n    return 3; // Fit cubic polynomial.\n  }\n  if (length > 10) {\n    return 2; // Fit quadratic polynomial.\n  }\n  return 1; // Fit linear polynomial.\n}\n","import { type KeySample } from \"@keybr/result\";\n\nexport function findSession(samples: readonly KeySample[]): KeySample[] {\n  const { length } = samples;\n  for (let i = length - 1; i > 0; i--) {\n    const a = samples[i - 1];\n    const b = samples[i];\n    if (b.timeStamp - a.timeStamp > /* one hour */ 3600000) {\n      return samples.slice(i);\n    }\n    if (b.filteredTimeToType > a.filteredTimeToType && length - i + 1 >= 5) {\n      return samples.slice(i);\n    }\n  }\n  return samples.slice(0);\n}\n","import { type Keyboard } from \"@keybr/keyboard\";\nimport { Letter, type PhoneticModel } from \"@keybr/phonetic-model\";\nimport {\n  randomSample,\n  type RNGStream,\n  weightedRandomSample,\n} from \"@keybr/rand\";\nimport { type KeyStatsMap } from \"@keybr/result\";\nimport { type Settings } from \"@keybr/settings\";\nimport { LessonKeys } from \"./key.ts\";\nimport { Lesson } from \"./lesson.ts\";\nimport { lessonProps } from \"./settings.ts\";\nimport { Target } from \"./target.ts\";\n\nexport class NumbersLesson extends Lesson {\n  constructor(settings: Settings, keyboard: Keyboard, model: PhoneticModel) {\n    super(settings, keyboard, model);\n  }\n\n  override get letters() {\n    return Letter.digits;\n  }\n\n  override update(keyStatsMap: KeyStatsMap) {\n    return LessonKeys.includeAll(keyStatsMap, new Target(this.settings));\n  }\n\n  override generate(lessonKeys: LessonKeys, rng: RNGStream) {\n    const words = [];\n    let wordsLength = 0;\n    while (true) {\n      const word = this.nextWord(rng);\n      words.push(word);\n      wordsLength += word.length;\n      if (wordsLength >= 50) {\n        break;\n      }\n    }\n    return words.join(\" \");\n  }\n\n  nextWord(rng: RNGStream) {\n    const benford = this.settings.get(lessonProps.numbers.benford);\n    const [zeroDigit, ...nonZeroDigits] = Letter.digits;\n    const allDigits = [zeroDigit, ...nonZeroDigits];\n    const length = Math.floor(3 + rng() * 4);\n    const word = [];\n    let last = null;\n    for (let i = 0; i < length; i++) {\n      while (true) {\n        const digit =\n          i === 0\n            ? benford\n              ? weightedRandomSample(nonZeroDigits, ({ f }) => f, rng)\n              : randomSample(nonZeroDigits, rng)\n            : randomSample(allDigits, rng);\n        if (digit !== last) {\n          word.push(digit);\n          last = digit;\n          break;\n        }\n      }\n    }\n    return String.fromCodePoint(...word.map(({ codePoint }) => codePoint));\n  }\n}\n","import { type WordList } from \"@keybr/content\";\nimport { type Keyboard } from \"@keybr/keyboard\";\nimport { Letter, type PhoneticModel } from \"@keybr/phonetic-model\";\nimport { type RNGStream } from \"@keybr/rand\";\nimport { type KeyStatsMap } from \"@keybr/result\";\nimport { type Settings } from \"@keybr/settings\";\nimport { filterWordList } from \"./dictionary.ts\";\nimport { LessonKeys } from \"./key.ts\";\nimport { Lesson } from \"./lesson.ts\";\nimport { lessonProps } from \"./settings.ts\";\nimport { Target } from \"./target.ts\";\nimport { generateFragment } from \"./text/fragment.ts\";\nimport { mangledWords, randomWords, uniqueWords } from \"./text/words.ts\";\n\nexport class WordListLesson extends Lesson {\n  readonly wordList: WordList;\n\n  constructor(\n    settings: Settings,\n    keyboard: Keyboard,\n    model: PhoneticModel,\n    wordList: WordList,\n  ) {\n    super(settings, keyboard, model);\n    const wordListSize = settings.get(lessonProps.wordList.wordListSize);\n    const longWordsOnly = settings.get(lessonProps.wordList.longWordsOnly);\n    this.wordList = filterWordList(wordList, this.codePoints)\n      .filter((word) => !longWordsOnly || word.length > 3)\n      .slice(0, wordListSize);\n  }\n\n  override get letters() {\n    return this.model.letters;\n  }\n\n  override update(keyStatsMap: KeyStatsMap) {\n    return LessonKeys.includeAll(keyStatsMap, new Target(this.settings));\n  }\n\n  override generate(lessonKeys: LessonKeys, rng: RNGStream) {\n    const wordGenerator = randomWords(this.wordList, rng);\n    const words = mangledWords(\n      uniqueWords(wordGenerator),\n      this.model.language,\n      Letter.restrict(Letter.punctuators, this.codePoints),\n      {\n        withCapitals: this.settings.get(lessonProps.capitals),\n        withPunctuators: this.settings.get(lessonProps.punctuators),\n      },\n      rng,\n    );\n    return generateFragment(this.settings, words, {\n      repeatWords: this.settings.get(lessonProps.repeatWords),\n    });\n  }\n}\n","import {\n  createContext,\n  type ReactNode,\n  type RefObject,\n  useContext,\n} from \"react\";\n\nexport const DynamicStylesContext = createContext({\n  getStyledElement: (): HTMLElement => document.body,\n});\n\nexport const DynamicStylesProvider = ({\n  children,\n  elementRef,\n}: {\n  readonly children: ReactNode;\n  readonly elementRef: RefObject<HTMLElement>;\n}) => {\n  return (\n    <DynamicStylesContext.Provider\n      value={{\n        getStyledElement: () => elementRef.current ?? document.body,\n      }}\n    >\n      {children}\n    </DynamicStylesContext.Provider>\n  );\n};\n\nexport const useDynamicStyles = () => {\n  return useContext(DynamicStylesContext);\n};\n","import { parseColor } from \"@keybr/color\";\nimport { type GraphicsStyle } from \"@keybr/widget\";\nimport { type ClassValue, clsx } from \"clsx\";\nimport { useMemo } from \"react\";\nimport { useTheme } from \"./context.ts\";\nimport { useDynamicStyles } from \"./dynamic-styles-context.tsx\";\nimport { type PropName } from \"./theme-props.ts\";\n\nexport const useComputedStyles = () => {\n  const { color, font, hash } = useTheme();\n  const { getStyledElement } = useDynamicStyles();\n  const element = getStyledElement();\n  return useMemo(() => {\n    use(color, font, hash);\n\n    const style = getComputedStyle(element);\n\n    const getPropertyValue = (name: PropName): string => {\n      return style.getPropertyValue(name);\n    };\n\n    const computeStyle = (...className: ClassValue[]): GraphicsStyle => {\n      // https://developer.mozilla.org/en-US/docs/Web/API/Window/getComputedStyle\n      // The returned style is a live CSSStyleDeclaration object, which updates itself automatically\n      // when the element's style is changed.\n      // The values returned by getComputedStyle are known as resolved values. These are usually the\n      // same as the CSS 2.1 computed values, but for some older properties like width, height or\n      // padding, they are instead the used values.\n      const child = createElement(\"div\", className);\n      element.appendChild(child);\n      const {\n        font,\n        fontStyle,\n        fontVariant,\n        fontWeight,\n        fontSize,\n        lineHeight,\n        fontFamily,\n        textAlign,\n        verticalAlign,\n        color,\n        opacity,\n        fill,\n        fillOpacity,\n        fillRule,\n        stroke,\n        strokeDasharray,\n        strokeDashoffset,\n        strokeLinecap,\n        strokeLinejoin,\n        strokeMiterlimit,\n        strokeOpacity,\n        strokeWidth,\n      } = getComputedStyle(child);\n      element.removeChild(child);\n      const result: GraphicsStyle = {};\n      if (font != null) {\n        if (font.length > 0) {\n          result.font = font;\n        } else {\n          // A fix for Firefox in which the font property is an empty string.\n          result.font = `${fontStyle} ${fontVariant} ${fontWeight} ${fontSize} / ${lineHeight} ${fontFamily}`;\n        }\n      }\n      switch (textAlign) {\n        case \"left\":\n          result.textAlign = \"left\";\n          break;\n        case \"right\":\n          result.textAlign = \"right\";\n          break;\n        case \"center\":\n          result.textAlign = \"center\";\n          break;\n        case \"start\":\n          result.textAlign = \"start\";\n          break;\n        case \"end\":\n          result.textAlign = \"end\";\n          break;\n      }\n      switch (verticalAlign) {\n        case \"top\":\n          result.textBaseline = \"top\";\n          break;\n        case \"baseline\":\n          result.textBaseline = \"alphabetic\";\n          break;\n        case \"middle\":\n          result.textBaseline = \"middle\";\n          break;\n        case \"bottom\":\n          result.textBaseline = \"bottom\";\n          break;\n      }\n      if (fill != null && fill !== \"none\") {\n        try {\n          const color = parseColor(fill).toRgb();\n          if (fillOpacity != null) {\n            const value = Number(fillOpacity);\n            if (value !== 1) {\n              color.alpha = value;\n            }\n          }\n          result.fillStyle = color;\n        } catch {\n          // Ignore.\n        }\n      }\n      switch (fillRule) {\n        case \"nonzero\":\n        case \"evenodd\":\n          result.fillRule = fillRule;\n          break;\n      }\n      if (stroke != null && stroke !== \"none\") {\n        try {\n          const color = parseColor(stroke).toRgb();\n          if (strokeOpacity != null) {\n            const value = Number(strokeOpacity);\n            if (value !== 1) {\n              color.alpha = value;\n            }\n          }\n          result.strokeStyle = color;\n        } catch {\n          // Ignore.\n        }\n      }\n      switch (strokeLinecap) {\n        case \"butt\":\n        case \"round\":\n        case \"square\":\n          result.lineCap = strokeLinecap;\n          break;\n      }\n      switch (strokeLinejoin) {\n        case \"bevel\":\n        case \"round\":\n        case \"miter\":\n          result.lineJoin = strokeLinejoin;\n          break;\n      }\n      if (strokeWidth != null && isPx(strokeWidth)) {\n        result.lineWidth = parsePx(strokeWidth);\n      }\n      if (strokeMiterlimit != null) {\n        result.miterLimit = Number(strokeMiterlimit);\n      }\n      return result;\n    };\n\n    const computeLineHeight = (...className: ClassValue[]): number => {\n      const child = createElement(\"p\", className);\n      child.style.lineHeight = \"1\";\n      element.appendChild(child);\n      const value = child.clientHeight;\n      element.removeChild(child);\n      return value;\n    };\n\n    return { getPropertyValue, computeStyle, computeLineHeight };\n  }, [color, font, hash, element]);\n};\n\nfunction use(...arg: any) {}\n\nconst createElement = (tagName: string, className: ClassValue): HTMLElement => {\n  const element = document.createElement(tagName);\n  element.textContent = \"?\";\n  element.className = clsx(className);\n  element.style.position = \"fixed\";\n  element.style.insetInlineStart = \"0px\";\n  element.style.insetBlockStart = \"0px\";\n  return element;\n};\n\nconst isPx = (value: string): boolean => {\n  return value.endsWith(\"px\");\n};\n\nconst parsePx = (value: string): number => {\n  return Number(value.substring(0, value.length - 2));\n};\n"],"names":["isCond","v","isSpan","isOpt","isSeq","isAlt","isRef","isLit","compose","rules","rest","composes","map","findRule","grammar","name","rule","composed","flagSet","flags","set","Set","has","flag","Output","static","Error","constructor","limit","this","text","length","remaining","separate","Stop","append","cls","push","clear","generate","start","output","rng","Array","alts","Map","visit","p","inv","cond","span","pop","f","opt","child","seq","a","prev","get","next","Math","floor","choose","alt","getRule","ref","at","undefined","generic_variable_name","generic_function_name","generic_class_name","kw_False","kw_None","kw_Self","kw_True","kw_abstract","kw_alignas","kw_alignof","kw_and","kw_arguments","kw_as","kw_asm","kw_assert","kw_async","kw_auto","kw_await","kw_become","kw_bool","kw_boolean","kw_box","kw_break","kw_byte","kw_case","kw_catch","kw_char","kw_char16_t","kw_char32_t","kw_class","kw_co_await","kw_co_return","kw_co_yield","kw_concept","kw_const","kw_const_cast","kw_constexpr","kw_continue","kw_crate","kw_debugger","kw_decltype","kw_def","kw_default","kw_del","kw_delete","kw_do","kw_double","kw_dyn","kw_dynamic_cast","kw_elif","kw_else","kw_enum","kw_except","kw_explicit","kw_export","kw_extends","kw_extern","kw_f32","kw_f64","kw_false","kw_final","kw_finally","kw_float","kw_fn","kw_for","kw_friend","kw_from","kw_function","kw_global","kw_goto","kw_i128","kw_i16","kw_i32","kw_i64","kw_i8","kw_if","kw_impl","kw_implements","kw_import","kw_in","kw_inline","kw_instanceof","kw_int","kw_interface","kw_is","kw_isize","kw_lambda","kw_let","kw_long","kw_loop","kw_match","kw_mod","kw_move","kw_mut","kw_mutable","kw_namespace","kw_native","kw_new","kw_noexcept","kw_nonlocal","kw_not","kw_null","kw_nullptr","kw_operator","kw_or","kw_override","kw_package","kw_pass","kw_priv","kw_private","kw_protected","kw_pub","kw_public","kw_raise","kw_ref","kw_register","kw_reinterpret_cast","kw_requires","kw_return","kw_self","kw_short","kw_signed","kw_sizeof","kw_static","kw_static_assert","kw_static_cast","kw_str","kw_strictfp","kw_struct","kw_super","kw_switch","kw_synchronized","kw_template","kw_this","kw_thread_local","kw_throw","kw_throws","kw_trait","kw_transient","kw_true","kw_try","kw_type","kw_typedef","kw_typeid","kw_typename","kw_typeof","kw_u128","kw_u16","kw_u32","kw_u64","kw_u8","kw_undefined","kw_union","kw_unsafe","kw_unsigned","kw_use","kw_using","kw_usize","kw_var","kw_virtual","kw_void","kw_volatile","kw_wchar_t","kw_where","kw_while","kw_with","kw_yield","grammar_html_css","html","html_tag","html_self_closing_tag","html_attr_list","html_id_attr","html_class_attr","html_style_attr","html_ident","html_entity","css","css_rule","css_selector","css_id_selector","css_class_selector","css_pseudo_selector","css_pseudo_class","css_pseudo_class_name","css_pseudo_element","css_pseudo_element_name","css_property_list","css_property","css_property_name","css_property_value","css_std_value","css_var_value","css_url_value","css_image_url","css_font_url","css_var_id","css_color_value","css_hex_digit","css_class_id","css_named_color","_keywords","grammar_cpp","start_fproto","start_stmt","c_func","c_func_proto","c_type","c_param_list","c_param","c_arg_list","c_arg","c_func_body","c_stmt","c_var_stmt","c_call_stmt","c_if_stmt","c_return_stmt","c_expr","c_unary_exp","c_binary_exp","c_ternary_exp","c_func_id","c_func_id_suffix","c_var_id","_ident","grammar_javascript","js_variable_statement","js_primary_exp","js_array_literal","js_object_literal","js_property_name","js_property_value","js_function_exp","js_function_args","js_single_arg","js_multi_args","js_arg","js_tail_arg","js_call_exp","js_var_id","js_func_id","js_id","js_literal","js_string_literal","js_template_literal","grammar_python","python_statement","python_function_definition","python_class_definition","python_assign","python_return","python_arguments","python_argument","python_expression","python_unary_operation","python_binary_operation","python_function_call","python_function_arg","python_type","python_primitive_type","python_binary_operator","python_list_definition","python_dict_definition","python_dict_key_value_pair","python_literal","python_string_literal","python_variable_name","python_function_name","python_class_name","python_string_value","python_number_literal","python_comment","grammar_rust","rust_statement","rust_function_definition","rust_struct_definition","rust_assign","rust_return","rust_arguments","rust_argument","rust_expression","rust_unary_operation","rust_binary_operation","rust_function_call","rust_function_args","rust_type","rust_primitive_type","rust_binary_operator","rust_array_definition","rust_struct_instantiation","rust_struct_fields","rust_field_assignment","rust_literal","rust_string_literal","rust_char_literal","rust_boolean_literal","rust_variable_name","rust_function_name","rust_struct_name","rust_string_value","rust_char_value","rust_number_literal","rust_comment","rust_comment_text","grammar_shell","shell_command","redirect_suffix","pipe_suffix","arg_list","short_arg","long_arg","file_arg","wildcard_arg","var_arg","string_arg","dir_name","file_name","var_name","file_base_name","file_ext_name","command_name","grammar_regex","item","group","group_name","group_item","union","union_item","char_class","char","literal_char","escaped_char","unicode_char","unicode_category","quantifier","Syntax","HTML","CSS","CPP","CPP_FPROTO","CPP_STMT","JAVASCRIPT_EXP","PYTHON","RUST","SHELL","REGEX","id","referenced","add","Object","values","keys","startsWith","validate","findFlags","freeze","err","toString","toJSON","Book","language","title","author","coverImage","EN","EN_ALICE_WONDERLAND","EN_JEKYLL_HYDE","EN_CALL_WILD","flattenContent","content","result","paragraphs","splitParagraph","paragraph","split","BookPreview","memo","book","formatMessage","useIntl","formatNumber","numChapters","numParagraphs","numWords","numUniqueWords","numCharacters","avgWordLength","useMemo","locale","className","src","NameValue","value","BookSelector","onChange","FieldList","OptionList","size","options","ALL","onSelect","ParagraphPreview","paragraphIndex","around","begin","max","end","min","items","slice","index","clsx","ParagraphIndex","ParagraphContent","ParagraphSelector","Range","step","swap","IconButton","icon","Icon","I","shape","mdi","disabled","onClick","wordListStats","wordList","wordLength","wordCount","word","_1","_2","_3","_4","_5","_6","_7","messages","averageSpeedName","averageSpeedDescription","topSpeedName","topSpeedDescription","lastSpeedName","lastSpeedDescription","confidenceLevelName","confidenceLevelDescription","learningRateName","learningRateDescription","learningRateValue","uncertainValue","notCalibratedText","characterName","focusedKeyText","forcedKeyText","useFormatter","formatPercents","settings","speedUnit","speedUnitName","f1","minimumFractionDigits","maximumFractionDigits","f2","formatSpeed","unit","opts","WPM","WPS","CPM","CPS","s","measure","formatConfidence","confidence","formatLearningRate","lr","DailyStats","stats","date","results","effort","formatDate","Para","align","Number","dateStyle","time","speed","avg","accuracy","Calendar","dailyStatsMap","state","setState","useState","type","useEffect","tasks","delayed","cancelAll","BlockList","onCellHoverIn","elem","onCellHoverOut","Portal","Popup","anchor","onMouseEnter","onMouseLeave","onCellClick","useRef","blocks","addBlock","today","year","month","key","block","cells","offset","dayOfWeek","i","j","b","plusDays","blockList","onMouseOver","event","relayEvent","current","onMouseOut","Block","root","target","handler","Element","contains","Cell","attached","parentElement","weekDayName","row","m","cell","n","dayOfMonth","attach","style","backgroundColor","String","shade","attachment","Symbol","_8","_9","_a","_b","_c","_d","_f","u","l","alpha","useKeyStyles","getPropertyValue","slow","fast","parse","confidenceColor","ratio","toRgb","keyStyles","isIncluded","Key","lessonKey","isSelectable","isCurrent","props","letter","codePoint","label","isFocused","isForced","viewBox","d","Happiness","learningRate","Happy","Sad","KeyDetails","timeToType","bestTimeToType","bestConfidence","from","samples","delta","CurrentKey","lessonKeys","focusedKey","findFocusedKey","DailyGoal","dailyGoal","DailyGoalLabel","goal","DailyGoalGauge","formatDuration","minutes","barWidth","round","frameWidth","inlineSize","useEffort","color","fade","EffortLegend","GaugeList","summaryStats","names","SpeedGauge","AccuracyGauge","ScoreGauge","last","Gauge","score","KeySet","onKeyHoverIn","onKeyHoverOut","onKeyClick","StreakList","streakList","children","level","GaugeRow","KeySetRow","keySet","CurrentKeyRow","currentKey","StreakListRow","DailyGoalRow","KeyLegend","KeyLegendList","KeySelector","keyStatsMap","tabIndex","onFocus","onBlur","letters","handlePrev","currentIndex","findIndex","selectedIndex","handleNext","onKeyDown","asIncluded","LessonKey","keyStats","asExcluded","asForced","asFocused","LessonKeys","includeAll","iterator","findIncludedKeys","filter","findExcludedKeys","find","include","exclude","force","focus","Lesson","Date","now","keyboard","codePoints","model","getCodePoints","restrict","byLayoutFamily","layout","family","LessonType","textType","GENERATED","NATURAL","CODE","NUMBERS","GUIDED","WORDLIST","BOOKS","CUSTOM","lessonProps","guided","naturalWords","keyboardOrder","alphabetSize","recoverKeys","wordListSize","longWordsOnly","books","lettersOnly","lowercase","customText","maxLength","randomize","numbers","benford","code","syntax","capitals","punctuators","repeatWords","targetSpeed","Target","isFinite","generateFragment","nextWord","words","wordsLength","join","randomWords","random","wordSequence","cursor","wordIndex","uniqueWords","mangledWords","withCapitals","withPunctuators","capitalCase","BooksLesson","super","flat","update","includes","delete","lowerCase","CodeLesson","programming","CustomTextLesson","MutableDailyGoal","timeStamp","copy","Dictionary","Word","list","focusedCodePoint","matches","every","filterWordList","GuidedLesson","dictionary","maxSize","includedKeys","confidenceOf","weakestKeys","sort","weightedFrequencyOrder","weight","frequencyOrder","pseudoWords","phoneticWords","LearningRate","recent","example","fill","hitCount","missCount","filteredTimeToType","vIndex","vSpeed","mSpeed","certainty","NaN","remainingLessons","session","findSession","sample","getPolynomialDegree","r2","lastIndex","derivative","eval","NumbersLesson","digits","zeroDigit","nonZeroDigits","allDigits","digit","fromCodePoint","WordListLesson","DynamicStylesContext","createContext","getStyledElement","document","body","DynamicStylesProvider","elementRef","Provider","useDynamicStyles","useContext","useComputedStyles","font","hash","element","getComputedStyle","computeStyle","createElement","appendChild","fontStyle","fontVariant","fontWeight","fontSize","lineHeight","fontFamily","textAlign","verticalAlign","opacity","fillOpacity","fillRule","stroke","strokeDasharray","strokeDashoffset","strokeLinecap","strokeLinejoin","strokeMiterlimit","strokeOpacity","strokeWidth","removeChild","textBaseline","fillStyle","strokeStyle","lineCap","lineJoin","isPx","lineWidth","parsePx","miterLimit","computeLineHeight","clientHeight","tagName","textContent","position","insetInlineStart","insetBlockStart","endsWith","substring"],"sourceRoot":""}