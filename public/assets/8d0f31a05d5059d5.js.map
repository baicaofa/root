{"version":3,"file":"8d0f31a05d5059d5.js","mappings":"wNAGIA,EAAK,aACLC,EAAK,aACLC,EAAK,aACLC,EAAK,aACLC,EAAK,aACLC,EAAK,aCCF,SAASC,GAAgB,QAAEC,IAChC,MAAM,aAAEC,IAAiB,WACnB,qBAAEC,IAAyB,WAC3B,IAAEC,EAAG,IAAEC,GAAQ,KACrB,OACE,mBAAOC,UAAW,EAAY,WAC5B,4BACE,2BACE,eAAIA,UAAW,EAAqB,gBACpC,eAAIA,UAAW,EAAiB,UAC9B,SAAC,IAAgB,oBAKnB,eAAIA,UAAW,EAAmB,UAChC,SAAC,IAAgB,oBAKnB,eAAIA,UAAW,EAAkB,UAC/B,SAAC,IAAgB,oBAKnB,eAAIA,UAAW,EAAkB,UAC/B,SAAC,IAAgB,yBAOvB,2BACGL,EAAQM,KAAI,EAAGC,OAAMC,SAAQC,QAAOC,SAASC,KAC5C,MAAMC,EAAMX,EAAaE,EAAIU,QAAQJ,GAAQ,GACvCK,EAAMb,EAAaG,EAAIS,QAAQJ,GAAQ,GACvCM,EAAW,GAAGH,IAAMT,EAAIa,QAAQF,IAAMV,EAAIY,KAC1CC,EAAWhB,EAAaS,EAAO,GACrC,OACE,2BACE,eAAIL,UAAW,EAAqB,SAAGM,EAAQ,KAC/C,eAAIN,UAAW,EAAiB,UAC9B,SAAC,KAAQ,CAACE,KAAMA,EAAMW,KAAM,KAAMC,UAAUZ,QAE9C,eAAIF,UAAW,EAAmB,SAC/BH,EAAqBM,MAExB,eAAIH,UAAW,EAAkB,SAAGU,KACpC,eAAIV,UAAW,EAAkB,SAAGY,MAT7BN,EAWV,QAKX,CC7DO,SAASS,GAAe,QAAEpB,IAC/B,OACE,UAACqB,EAAA,EAAO,YACN,SAAC,IAAgB,kBAQjB,SAACC,EAAA,EAAM,WACL,SAACvB,EAAe,CAACC,QAASA,QAIlC,C,kCCfO,SAASuB,GAAiB,SAC/BC,IAIA,OAAOA,EAGF,WACL,MAAOxB,EAASyB,IAAc,IAAAC,UAA2B,IAkBzD,OAhBA,IAAAC,YAAU,KACR,IAAIC,GAAY,EAUhB,OAQJC,iBACE,MAAMC,QAAiB,KACpBC,KAAI,QAAW,qBACfC,IAAI,kBACJC,OASH,aARmBH,EAASI,QAQhB5B,KAAI,EAAGC,OAAMC,SAAQC,QAAOC,YAAY,CAClDH,KAAMA,GAAQ,CAAES,GAAI,KAAMmB,KAAM,eAAgBC,SAAU,MAC1D5B,OAAQ,KAAO6B,IAAIC,IAAI9B,GACvBC,QACAC,WAEJ,CAnCI6B,GACGC,MAAMxC,IACA4B,GACHH,EAAWzB,EACb,IAEDyC,MAAM,MAEF,KACLb,GAAY,CAAI,CACjB,GACA,IAEI5B,CACT,CAvBkB0C,GAClB,CCVe,SAASC,IACtB,OACE,SAACpB,EAAgB,UACbvB,IAAY,SAACoB,EAAc,CAACpB,QAASA,KAG7C,C","sources":["webpack://keybr.com/./packages/page-highscores/lib/HighScoresTable.module.less?73a9","webpack://keybr.com/./packages/page-highscores/lib/HighScoresTable.tsx","webpack://keybr.com/./packages/page-highscores/lib/HighScoresPage.tsx","webpack://keybr.com/./packages/keybr-pages-browser/lib/loader/HighScoresLoader.tsx","webpack://keybr.com/./packages/keybr-pages-browser/lib/pages/high-scores.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nvar _1 = \"YgxUKT7hdt\";\nvar _2 = \"UCb1yprt8P\";\nvar _3 = \"CR4oblEYRV\";\nvar _4 = \"khJNHf5Zbz\";\nvar _5 = \"vdSYUaEgLt\";\nvar _6 = \"qFsHeBqras\";\nvar _7 = \"rIzW3WxA0x\";\nvar _8 = \"A8X8HXpp3X\";\nexport { _1 as \"extraColumn\", _2 as \"figure\", _3 as \"layoutColumn\", _4 as \"positionColumn\", _5 as \"scoreColumn\", _6 as \"speedColumn\", _7 as \"table\", _8 as \"userColumn\" }\n","import { useIntlNumbers } from \"@keybr/intl\";\nimport { useFormattedNames } from \"@keybr/keyboard\";\nimport { Pages, UserName } from \"@keybr/pages-shared\";\nimport { SpeedUnit } from \"@keybr/result\";\nimport { type ReactNode } from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport * as styles from \"./HighScoresTable.module.less\";\nimport { type EntriesProps } from \"./types.ts\";\n\nexport function HighScoresTable({ entries }: EntriesProps): ReactNode {\n  const { formatNumber } = useIntlNumbers();\n  const { formatFullLayoutName } = useFormattedNames();\n  const { WPM, CPM } = SpeedUnit;\n  return (\n    <table className={styles.table}>\n      <thead>\n        <tr>\n          <th className={styles.positionColumn}>#</th>\n          <th className={styles.userColumn}>\n            <FormattedMessage\n              id=\"highScores.column.user.label\"\n              defaultMessage=\"User\"\n            />\n          </th>\n          <th className={styles.layoutColumn}>\n            <FormattedMessage\n              id=\"highScores.column.layout.label\"\n              defaultMessage=\"Layout\"\n            />\n          </th>\n          <th className={styles.speedColumn}>\n            <FormattedMessage\n              id=\"highScores.column.speed.label\"\n              defaultMessage=\"Typing Speed\"\n            />\n          </th>\n          <th className={styles.scoreColumn}>\n            <FormattedMessage\n              id=\"highScores.column.score.label\"\n              defaultMessage=\"Score\"\n            />\n          </th>\n        </tr>\n      </thead>\n      <tbody>\n        {entries.map(({ user, layout, speed, score }, index) => {\n          const wpm = formatNumber(WPM.measure(speed), 0);\n          const cpm = formatNumber(CPM.measure(speed), 0);\n          const speedCol = `${wpm}${WPM.id} / ${cpm}${CPM.id}`;\n          const scoreCol = formatNumber(score, 0);\n          return (\n            <tr key={index}>\n              <td className={styles.positionColumn}>{index + 1}</td>\n              <td className={styles.userColumn}>\n                <UserName user={user} path={Pages.profileOf(user)} />\n              </td>\n              <td className={styles.layoutColumn}>\n                {formatFullLayoutName(layout)}\n              </td>\n              <td className={styles.speedColumn}>{speedCol}</td>\n              <td className={styles.scoreColumn}>{scoreCol}</td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n}\n","import { Article, Figure } from \"@keybr/widget\";\nimport { type ReactNode } from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { HighScoresTable } from \"./HighScoresTable.tsx\";\nimport { type EntriesProps } from \"./types.ts\";\n\nexport function HighScoresPage({ entries }: EntriesProps): ReactNode {\n  return (\n    <Article>\n      <FormattedMessage\n        id=\"page.highScores.content\"\n        defaultMessage={\n          \"<h1>High Scores</h1>\" +\n          \"<p>The table of the fastest typists for the last few days, arranged by their scores from best to worst. Typing score is measured from typing speed, text length, the number of different characters in the text, and the number of errors. The formula is designed in such a way to reward for a faster speed, longer text and a larger alphabet, but to punish for the number of errors.</p>\"\n        }\n      />\n\n      <Figure>\n        <HighScoresTable entries={entries} />\n      </Figure>\n    </Article>\n  );\n}\n","import { catchError } from \"@keybr/debug\";\nimport { Layout } from \"@keybr/keyboard\";\nimport { type Entry } from \"@keybr/page-highscores\";\nimport { type AnyUser } from \"@keybr/pages-shared\";\nimport { expectType, request } from \"@keybr/request\";\nimport { type ReactNode, useEffect, useState } from \"react\";\n\nexport function HighScoresLoader({\n  children,\n}: {\n  readonly children: (entries: readonly Entry[]) => ReactNode;\n}) {\n  return children(useHighScoresLoader());\n}\n\nexport function useHighScoresLoader(): readonly Entry[] {\n  const [entries, setEntries] = useState<readonly Entry[]>([]);\n\n  useEffect(() => {\n    let didCancel = false;\n\n    loadHighScores()\n      .then((entries) => {\n        if (!didCancel) {\n          setEntries(entries);\n        }\n      })\n      .catch(catchError);\n\n    return () => {\n      didCancel = true;\n    };\n  }, []);\n\n  return entries;\n}\n\nasync function loadHighScores(): Promise<readonly Entry[]> {\n  const response = await request\n    .use(expectType(\"application/json\"))\n    .GET(\"/_/high-scores\")\n    .send();\n  const body = await response.json<\n    {\n      readonly user: AnyUser | null;\n      readonly layout: string;\n      readonly speed: number;\n      readonly score: number;\n    }[]\n  >();\n  return body.map(({ user, layout, speed, score }) => ({\n    user: user ?? { id: null, name: \"Deleted User\", imageUrl: null },\n    layout: Layout.ALL.get(layout),\n    speed,\n    score,\n  }));\n}\n","import { HighScoresPage } from \"@keybr/page-highscores\";\nimport { HighScoresLoader } from \"../loader/HighScoresLoader.tsx\";\n\nexport default function Page() {\n  return (\n    <HighScoresLoader>\n      {(entries) => <HighScoresPage entries={entries} />}\n    </HighScoresLoader>\n  );\n}\n"],"names":["_3","_4","_5","_6","_7","_8","HighScoresTable","entries","formatNumber","formatFullLayoutName","WPM","CPM","className","map","user","layout","speed","score","index","wpm","measure","cpm","speedCol","id","scoreCol","path","profileOf","HighScoresPage","Article","Figure","HighScoresLoader","children","setEntries","useState","useEffect","didCancel","async","response","use","GET","send","json","name","imageUrl","ALL","get","loadHighScores","then","catch","useHighScoresLoader","Page"],"sourceRoot":""}