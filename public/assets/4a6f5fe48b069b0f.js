"use strict";(self.webpackChunkkeybr_com=self.webpackChunkkeybr_com||[]).push([[4100],{699:(e,t,s)=>{s.d(t,{fL:()=>n,mP:()=>r,AU:()=>i,C1:()=>c});class n extends Error{name="DataError";constructor(e,t){super(e,t)}get[Symbol.toStringTag](){return"DataError"}}function a(e){return e instanceof Uint8Array?e:ArrayBuffer.isView(e)?new Uint8Array(e.buffer,e.byteOffset,e.byteLength):new Uint8Array(e)}class i{#e;#t;constructor(e=64){this.#e=new DataView(new ArrayBuffer(Math.max(e,64))),this.#t=0}#s(e){if(this.#e.byteLength<e){let t=64;for(;t<e;)t*=t;const s=new ArrayBuffer(t);new Uint8Array(s).set(new Uint8Array(this.#e.buffer)),this.#e=new DataView(s)}}#n(e){this.#s(this.#t+e)}putInt8(e){if(!Number.isInteger(e)||e<-128||e>127)throw new TypeError("Value is not int8");return this.#n(1),this.#e.setInt8(this.#t,e),this.#t+=1,this}putUint8(e){if(!Number.isInteger(e)||e<0||e>255)throw new TypeError("Value is not uint8");return this.#n(1),this.#e.setUint8(this.#t,e),this.#t+=1,this}putInt16(e){if(!Number.isInteger(e)||e<-32768||e>32767)throw new TypeError("Value is not int16");return this.#n(2),this.#e.setInt16(this.#t,e,!1),this.#t+=2,this}putUint16(e){if(!Number.isInteger(e)||e<0||e>65535)throw new TypeError("Value is not uint16");return this.#n(2),this.#e.setUint16(this.#t,e,!1),this.#t+=2,this}putInt32(e){if(!Number.isInteger(e)||e<-2147483648||e>2147483647)throw new TypeError("Value is not int32");return this.#n(4),this.#e.setInt32(this.#t,e,!1),this.#t+=4,this}putUint32(e){if(!Number.isInteger(e)||e<0||e>4294967295)throw new TypeError("Value is not uint32");return this.#n(4),this.#e.setUint32(this.#t,e,!1),this.#t+=4,this}putFloat32(e){return this.#n(4),this.#e.setFloat32(this.#t,e,!1),this.#t+=4,this}putFloat64(e){return this.#n(8),this.#e.setFloat64(this.#t,e,!1),this.#t+=8,this}putIntVlq(e){if(!Number.isInteger(e)||e<-2147483648||e>2147483647)throw new TypeError("Value is not int32");return this.putUintVlq((e<<1^e>>31)>>>0),this}putUintVlq(e){if(!Number.isInteger(e)||e<0||e>4294967295)throw new TypeError("Value is not uint32");return this.#a(e),this}#a(e){e>266338304&&this.putUint8(e>>>28&15|128),e>2080768&&this.putUint8(e>>>21&127|128),e>16256&&this.putUint8(e>>>14&127|128),e>127&&this.putUint8(e>>>7&127|128),this.putUint8(127&e)}putString(e){const t=function(e){let t=0,s=0;for(;s<e.length;){const n=e.codePointAt(s)??0;n<=127?(t+=1,s+=1):n<=2047?(t+=2,s+=1):n<=65535?(t+=3,s+=1):n<=1114111&&(t+=4,s+=2)}return t}(e);return this.putUintVlq(t),this.#n(t),function(e,t,s){let n=0;for(;n<e.length;){const a=e.codePointAt(n)??0;a<=127?(t.setUint8(s++,a),n+=1):a<=2047?(t.setUint8(s++,a>>6&31|192),t.setUint8(s++,63&a|128),n+=1):a<=65535?(t.setUint8(s++,a>>12&15|224),t.setUint8(s++,a>>6&63|128),t.setUint8(s++,63&a|128),n+=1):a<=1114111&&(t.setUint8(s++,a>>18&127|240),t.setUint8(s++,a>>12&63|128),t.setUint8(s++,a>>6&63|128),t.setUint8(s++,63&a|128),n+=2)}}(e,this.#e,this.#t),this.#t+=t,this}putBuffer(e){const t=a(e);return this.#n(t.byteLength),new Uint8Array(this.#e.buffer).set(t,this.#t),this.#t+=t.byteLength,this}buffer(){return new Uint8Array(this.#e.buffer,0,this.#t)}}class r{#e;#t=0;constructor(e){ArrayBuffer.isView(e)?this.#e=new DataView(e.buffer,e.byteOffset,e.byteLength):this.#e=new DataView(e)}#n(e){if(this.#t+e>this.#e.byteLength)throw new n("Premature end of data")}getInt8(){this.#n(1);const e=this.#e.getInt8(this.#t);return this.#t+=1,e}getUint8(){this.#n(1);const e=this.#e.getUint8(this.#t);return this.#t+=1,e}getInt16(){this.#n(2);const e=this.#e.getInt16(this.#t,!1);return this.#t+=2,e}getUint16(){this.#n(2);const e=this.#e.getUint16(this.#t,!1);return this.#t+=2,e}getInt32(){this.#n(4);const e=this.#e.getInt32(this.#t,!1);return this.#t+=4,e}getUint32(){this.#n(4);const e=this.#e.getUint32(this.#t,!1);return this.#t+=4,e}getFloat32(){this.#n(4);const e=this.#e.getFloat32(this.#t,!1);return this.#t+=4,e}getFloat64(){this.#n(8);const e=this.#e.getFloat64(this.#t,!1);return this.#t+=8,e}getIntVlq(){const e=this.getUintVlq();return e>>>1^-(1&e)}getUintVlq(){return this.#i()}#i(){let e=0;const t=this.getUint8();if(e=(e<<7|127&t)>>>0,!(128&t))return e;const s=this.getUint8();if(e=(e<<7|127&s)>>>0,!(128&s))return e;const a=this.getUint8();if(e=(e<<7|127&a)>>>0,!(128&a))return e;const i=this.getUint8();if(e=(e<<7|127&i)>>>0,!(128&i))return e;const r=this.getUint8();if(e=(e<<7|127&r)>>>0,!(128&r)){if((127&t)>15)throw new n("Too many leading bits");return e}throw new n("Too many trailing bits")}getString(){const e=this.getUintVlq();this.#n(e);const t=function(e,t,s){let a="";const i=t+s;for(;t<i;){const s=e.getUint8(t++);if(s<128)a+=String.fromCodePoint(s);else if(192==(224&s)){if(t+1>i)throw new n("Truncated UTF-8 stream");const r=(31&s)<<6|63&e.getUint8(t++);a+=String.fromCodePoint(r)}else if(224==(240&s)){if(t+2>i)throw new n("Truncated UTF-8 stream");const r=(15&s)<<12|(63&e.getUint8(t++))<<6|63&e.getUint8(t++);a+=String.fromCodePoint(r)}else{if(240!=(248&s))throw new n("Broken UTF-8 stream");{if(t+3>i)throw new n("Truncated UTF-8 stream");const r=(7&s)<<18|(63&e.getUint8(t++))<<12|(63&e.getUint8(t++))<<6|63&e.getUint8(t++);if(r>1114111)throw new n("Invalid code point");a+=String.fromCodePoint(r)}}}return a}(this.#e,this.#t,e);return this.#t+=e,t}getBuffer(e){this.#n(e);const t=new Uint8Array(this.#e.buffer,this.#t,e);return this.#t+=e,t}position(){return this.#t}remaining(){return this.#e.byteLength-this.#t}}const o=(()=>{const e=[];for(let t=0;t<256;t++){let s=t;for(let e=0;e<8;e++)s=1&s?3988292384^s>>>1:s>>>1;e[t]=s}return e})();function c(e){const t=a(e),s=Math.floor(4294967296*Math.random()),n=new Uint8Array(t.length+8);return l(n,0,s),l(n,4,function(e){const t=a(e);let s=4294967295;for(let e=0;e<t.length;e++)s=s>>>8^o[255&(s^t[e])];return(4294967295^s)>>>0}(t)),n.set(t,8),u(s,n),n}function u(e,t){const s=function(e){let t=h(e,2147483629)+12820163>>>0;return function(){return t=h(t,1664525)+1013904223>>>0}}(e);for(let e=4;e<t.length;e++)t[e]=t[e]^s()}function l(e,t,s){e[t+0]=s>>>24,e[t+1]=s>>>16,e[t+2]=s>>>8,e[t+3]=s>>>0}function h(e,t){e>>>=0,t>>>=0;let s=0;for(let n=0;n<32;n++)1==(t>>>n&1)&&(s+=e<<n);return s>>>0}},4100:(e,t,s)=>{s.d(t,{Sl:()=>a,dJ:()=>N,rP:()=>c,qJ:()=>V,Dz:()=>S,ZL:()=>T,w9:()=>q});var n=s(4922);function a({as:e="strong",className:t,id:s,title:a,model:{language:i,letters:r}}){return(0,n.jsx)(e,{id:s,className:t,title:a,dir:i.direction,children:r.map((({label:e})=>e)).join("")})}var i=s(2044),r=s(699),o=s(8591);class c{codePoint;f;label;constructor(e,t,s=String.fromCodePoint(e)){this.codePoint=e,this.f=t,this.label=s}toString(){return this.label}}!function(e){e.digits=[new e(48,0),new e(49,.301),new e(50,.176),new e(51,.125),new e(52,.097),new e(53,.079),new e(54,.067),new e(55,.058),new e(56,.051),new e(57,.046)],e.punctuators=[new e(44,9),new e(46,8),new e(33,2),new e(63,2),new e(59,1),new e(58,1),new e(39,1),new e(34,1),new e(45,1)],e.specials=[new e(35,1),new e(36,1),new e(37,1),new e(38,1),new e(40,1),new e(41,1),new e(42,1),new e(43,1),new e(45,1),new e(47,1),new e(60,1),new e(61,1),new e(62,1),new e(64,1),new e(91,1),new e(92,1),new e(93,1),new e(94,1),new e(95,1),new e(96,1),new e(123,1),new e(124,1),new e(125,1),new e(126,1)],e.programming=[new e(40,2.5),new e(41,2.4),new e(123,1.8),new e(125,1.7),new e(34,1.7),new e(39,1.7),new e(44,1.6),new e(59,1.5),new e(91,1.5),new e(93,1.5),new e(58,1.4),new e(46,1.3),new e(61,1.2),new e(43,1.1),new e(45,1),new e(42,.9),new e(47,.8),new e(37,.7),new e(124,.6),new e(38,.5),new e(33,.4),new e(63,.3),new e(60,.2),new e(62,.1),new e(95,.1),new e(35,.1),new e(64,.1),new e(36,.1),new e(94,.1),new e(126,.1),new e(92,.1),new e(96,.1)],e.toLetter=e=>"letter"in e?e.letter:e,e.codePointOrder=e=>[...e].sort(((e,t)=>e.codePoint-t.codePoint)),e.frequencyOrder=e=>[...e].sort(((e,t)=>t.f-e.f||e.codePoint-t.codePoint)),e.weightedFrequencyOrder=(e,t)=>[...e].sort(((e,s)=>t(e)-t(s)||s.f-e.f||e.codePoint-s.codePoint)),e.restrict=(e,t)=>[...e].filter((({codePoint:e})=>t.has(e))),e.normalize=t=>{const s=t.reduce(((e,{f:t})=>e+t),0);return t.map((({codePoint:t,f:n,label:a})=>new e(t,s>0?n/s:0,a)))}}(c||(c={}));const u=Object.freeze([107,101,121,98,114,46,99,111,109]);class l{static load(e){const t=new r.mP(e);!function(e){for(const t of u)if(e.getUint8()!==t)throw new r.fL}(t);const s=function(e){const t=e.getUint8(),s=e.getUint8(),n=[];for(let t=0;t<s;t++)n.push(e.getUint16());return new h(t,n)}(t),n=function(e,t){const s=[];for(let n=0;n<t.segments;n++){const n=[],a=e.getUint8();if(a>=t.size)throw new r.fL;for(let s=0;s<a;s++){const s=e.getUint8();if(s>=t.size)throw new r.fL;const a=e.getUint8();if(0===a)throw new r.fL;n.push({codePoint:t.codePoint(s),frequency:a})}s.push(n)}return s}(t,s);if(t.remaining()>0)throw new r.fL;return new l(s,n)}chain;segments;constructor(e,t){if(t.length!==e.segments)throw new Error;this.chain=e,this.segments=t}get order(){return this.chain.order}get alphabet(){return this.chain.alphabet}get size(){return this.chain.size}segment(e){return this.segments[this.chain.segmentIndex(e)]}compress(){const e=new r.AU;return function(e){for(const t of u)e.putUint8(t)}(e),function(e,t){e.putUint8(t.order),e.putUint8(t.size);for(let s=0;s<t.size;s++)e.putUint16(t.alphabet[s])}(e,this.chain),function(e,t,s){for(let n=0;n<t.segments;n++){const a=s[n];e.putUint8(a.length);for(const{codePoint:s,frequency:n}of a)e.putUint8(t.index(s)),e.putUint8(n)}}(e,this.chain,this.segments),e.buffer()}letters({letterName:e}){const t=new Map(this.alphabet.map((e=>[e,0])));for(const e of this.segments)for(const{codePoint:s,frequency:n}of e)t.set(s,(t.get(s)??0)+n);return[...t.entries()].map((([t,s])=>new c(t,s,e(t))))}toNgram1(){const e=new o.ti(this.alphabet);for(const t of this.segments)for(const{codePoint:s,frequency:n}of t)e.add(s,n);return e}toNgram2(){const e=new o.mA(this.alphabet);let t=0;for(const s of this.segments){const n=this.chain.codePoint(t);for(const{codePoint:t,frequency:a}of s)e.add(n,t,a);t+=1,t===this.chain.size&&(t=0)}return e}}class h{order;alphabet;size;segments;width;offsets;constructor(e,t){this.order=e,this.alphabet=t,this.size=this.alphabet.length,this.segments=Math.pow(this.size,this.order-1),this.width=Math.pow(this.size,this.order),this.offsets=function(e,t){const s=new Array(t);for(let n=0;n<t;n++)s[n]=Math.pow(e,t-n-1);return s}(this.size,this.order)}segmentIndex(e){const{order:t,offsets:s}=this,{length:n}=e;let a=0;for(let i=0;i<t-1;i++){const r=e[n-t+i+1]||32;a+=this.index(r)*s[i+1]}return a}entryIndex(e){const{order:t,offsets:s}=this,{length:n}=e;let a=0;for(let i=0;i<t;i++){const r=e[n-t+i]||32;a+=this.index(r)*s[i]}return a}codePoint(e){return this.alphabet[e]}index(e){return this.alphabet.indexOf(e)}}const f=JSON.parse('["ahcsbamu","faznawhcsnef","rtlatrneia","hranalverke","ubhcrasm","hrcas","enarschbums","rcfcashik","erarschfick","eocathrzfs","eecaihrggs","rathciseghcs","rckkashes","aherciesrhrkc","erarschleck","rclcashoh","erauberfeig","ugieafeln","aefhecsetnkiibgpcf","aarsdtb","eberuhsbeirt","oibbm","ieulbsxel","lbnesa","lbepmalhcssa","amdölbnn","isdölbnn","eozbn","rbezta","rcbdbuhue","ubsm","ubnesm","rchrcakue","edpp","eerptpd","reppedet","odrettewrenn","rchrdekue","rcscdekak","skcerdua","ehcdukrrse","lkcdekrrse","tncdekrsse","abmmudzt","eumdm","ifmmudkc","okmmudfp","eapdcfukbm","löedd","rrceeashn","rekito","ilgiefgn","ifkc","eikfc","ifnekc","ifrekc","rhkflfieec","siacukf","iftskc","ikttfcsue","tikfc","alzlifsu","lfreshciwhca","ltcefithn","eozft","ofrekcelnezt","rfezta","rmfcfedik","cekftig","egli","kflgieecri","ogtmmadrevtt","eekhsfasrc","gsnhsriiir","ohom","sessrshnoeiceh","nsrhoeuhnh","uher","nuehr","ueshhrnon","tdoii","eshic","eakktbazrc","eakkc","aknekc","akuskcwrt","erkamelfick","eepksfablm","akekan","eimkm","lkreßiehcsgu","eebls","ilkc","mls","ulehcs","hcstulne","üllemm","uhluamer","imfl","imts","ektsimlr","ittcmssük","temorgenlat","iutmf","umihcs","umrekcifrett","eösmp","ömes","taknc","reeng","inregg","inlepp","eutnt","nneeoairn","hroralverke","msagrone","msagrosu","seipn","eprenn","resrepes","eerrsvp","evrepresr","iplemm","zwmpueitlm","eirmnpp","eilnnkp","eisps","ipness","ipress","loepp","opnepp","oonpr","upff","sucahtq","ergidu","totseer","uebmrdlus","enrudelbums","asu","asnegu","eaascbckrh","csrekcifefah","ouhrsreaeeinnsszhcf","icshses","cskcerdssieh","siehcses","csfpokessieh","ceseshisn","ceseshisr","rlscheisske","pfscheissko","icßhees","ehesuicrßh","ciseshesr","malhcsep","clmeshapn","nknseaclch","acnhzws","azushrcwnltcesh","sebewekhnccia","csdnuheniewh","lhwstucech","cwctshuhl","csluwh","nrnieepeegusts","esgnurpsneti","seretpgisnenü","hsasia","shseeis","psitsa","psamre","chspermaars","zespermafot","mhaeeacmpplsrs","tespermastu","ßpiiges","npeinns","npeirns","npsitns","etlefu","hcttitne","eittt","itnett","kfttieicnt","itztirpsnett","zrntntpeieistt","zrntrtpeieistt","rtesna","rtlleuxessna","treoltt","eashvrrce","madrevtm","rmdvtaeemr","efctvrike","rkfvtieecr","skfvtieecr","erverflucht","oldovliit","envollpfost","ovneßiehcsll","elvolltrott","övnleg","ehdwuearrn","heeiicw","iweshc","siecnhw","siecrhw","obztiwdl","eikzc"]'),d=JSON.parse('["nala","snlaa","nasu","nasesu","raes","ohesrael","reoeashls","sreas","sas","sagabs","asgssba","sbniasadt","sbneasagr","sgbaeasrns","istseba","olcssanw","sconaslws","oscskca","rccakrseas","sseas","ascsefa","uscskfa","sfceasukr","sgbiasoln","satahs","esasdha","oslseha","lohssase","shpeasopr","sjceasakr","iscskla","slceasikr","smneasoky","numssahc","rcmahusens","sngeasigr","sprtasiae","hsistsa","ohsssael","ssceasukr","sadaws","ispsewa","salbl","abtopm","aarsdtb","ratsabsd","ebrena","itsaebla","tybeastiali","ylsbitetia","ieasltb","yltbiietas","eilbb","ibselb","hicbt","ahctibss","hietrcb","hietscb","hiitncb","ihctibgn","thctibti","ibyhct","lbydoo","jloobwb","ojwolbsb","collobsk","obxoll","roebn","obsren","obbo","sobbo","aukkekb","hsllubti","ulhtblsis","ubtt","sutbt","iarmlgc","ohwmacer","chnci","hcscni","khnci","hcskni","dhaco","ehdco","hctsir","shtrsic","hchcru","hcruhcse","lcti","aftilcec","uftilckc","rotilcsi","sltci","ckclusterfu","ockc","ibkcocet","rrkcgboeuc","afkcocec","rckckfoeuc","ehkcocda","ynkckmoeoc","onkcoces","tgkcgnoeuc","sokcc","hskcocti","uskcockc","dckcksoeuc","rckcksoeuc","ngcocksucki","okukccscs","hoioecc","ocyhco","ocreto","rcpa","rcyppa","srpca","kroco","ucm","ubblcmube","ercumdumpst","ucremm","iunmgmc","huomtsc","ohsmucst","luumtsc","ulsmucst","aurmttc","uscunilling","uceinn","uscunniling","uctn","aftnucec","ohtnucel","iltnuckc","rctckluein","ngcuntlicki","ruangtc","sutcn","lstnuctu","yefccbruk","edcyberfuck","ercyberfuck","ycgnikcufreb","adog","saodg","adtimm","adnm","oegdg","weedj","weejded","iwejedgn","edswej","idkc","biacgkd","rsdickbeate","afkcidec","ufkcidkc","ehkcidda","ohkcidel","ikucdcjie","imkcidkl","sikdc","lskcidpa","wiacdkd","lakdswieec","ewkcidde","wiocdkd","idek","siedk","oiddl","idkn","hiiptsd","bhcoodga","odeiko","odehcu","oceaduhbg","odelffawehcu","uded","tutdeed","udssam","udbm","ausmsbd","ufbmudkc","hsbmudti","huimtsd","ichec","jclteauae","dacetujela","sacetujela","ngejaculati","onejaculati","afg","afgabg","afcefgukr","iangggf","aftigg","iatgsgf","aftogg","kcgfooactg","oatgsgf","sagfg","taofg","afsg","aargdtf","aftr","afdetr","ianrgtf","yatfr","iassmcf","iasstcf","sicsafst","afssat","teiloaf","hecfl","heelscf","ihclefgn","tallefoi","efhctl","hitfl","kfgfueicrn","ifdekcufregn","ifrekcufregn","fecggunnfiirk","ksfingerfuc","uftsifkc","dctfkfieus","rctfkfieus","ngfistfucki","lfrema","oflo","solfo","krafe","kreedaf","ikaerfgn","rfskae","rfykae","ufkc","auscskf","buacgkf","buocykf","ukrifcban","ubkcuftt","ufdekc","ufrekc","eurcskf","ufrekcusrekc","afkcufec","ehkcufda","ohkcufel","ufnikc","iuncgkf","ufemkc","nuuctkf","unkcuftt","oufcfkf","sukfc","uktcfcsik","atkcufdr","ufpukc","wuacdkf","wuictkf","iwkcuftt","yukfc","erfudgepack","ufk","abgnaggn","dngggbaean","agy","agsy","ogd","aomdndg","odmigdant","eosdsdg","ogsd","hocgo","ogko","rgogni","oudgi","ugor","iyepssg","yysgp","jaonbdh","exhardcores","ehbe","ehll","ehiatn","ohe","ohyl","ohom","ohtihsbmudom","ohyekn","einrohts","yonhr","ohxest","iunmgph","tdoii","distoi","aascskj","ajp","ejze","ejkr","sekjr","ejw","deejw","ejgniw","ejhsiw","ejsw","biogoaj","diajh","ijms","ijz","ijmz","ijzz","ijsezz","ujgg","sugjg","ikek","ikll","silkl","okkc","okmudn","hocko","okhcto","ukm","ruekm","ukremm","iunmgmk","uksm","snikgluuin","uktn","ykek","eleizz","oldr","sodlr","ults","iunsgtl","ggafcmte","imkc","imfl","sifml","eigmn","omm","omsm","noomr","omsnor","ohfcmtauk","auhmcaokft","azmothafuck","edmothafuck","ermothafuck","inmothafuck","omgnikcufaht","suhmcaokft","kfhmueocrt","omdekcufreht","omrekcufreht","omnikcufreht","mecghuntfiork","umff","ufiemfdvr","sufmf","iunnggm","aniz","oerng","aigng","insagg","inregg","eirgsgn","intelg","unt","unst","auctksn","romsag","srmgsao","roseig","royg","apik","oacnhop","eprekc","dhkpeeearc","dspeckerhea","eercskp","epod","seopd","seipn","seensip","erpenisfuck","erpenispuff","senohpxe","hpku","hpdeku","ihnugkp","kheudkp","ikkuhpgn","shkpu","hpqu","ips","sieps","niips","ipgnis","fiops","ipss","ipdess","ipress","ipsess","islppsfas","ipniss","iinsgsp","oifsfsp","roepksoeml","ooclklp","opno","aonoinp","aonoynp","atnoopgn","eyporchmonk","opnr","oonpr","hypornograp","opsonr","sonpr","krcpi","rpskci","etsputrtio","esprostitut","rpnoitutitso","nunnyap","autpn","upseis","iuesssp","yusps","upgnikcilyss","upys","upot","rueqe","uqsree","arep","daerp","saerp","argnip","beorn","irbojm","iusbhbr","iukrs","rgdsgnaein","ocnhgls","wcesr","csetor","csmu","scmsu","hsti","ahsists","bhaigts","rgtsgbheai","htrisiban","hetsabhtri","uctihstn","idtihskc","hsdeti","aftihsec","htaesifcd","uftihsll","ehtihsda","ohtihsel","htossihue","ihnigts","shtsi","ershitspitt","httisisan","theidts","theirts","htissitet","ittihsgn","hsytti","yhtsi","hszi","nhiitzs","kknsa","tkese","klfcsuluk","lstu","blaugts","sltsu","msge","mstu","smtsu","nshcta","hctansse","psci","kpcsi","psskci","opgleos","kpnsu","uskc","iuncgks","suksc","atdr","sadtr","citsetel","ntthundercu","itt","uictkft","cuftitsk","itst","itfcttyuk","suttcyikft","wtta","iltawtsp","swtta","efttfwwlaa","erunclefuck","nuyloh","avg","avanig","naagsiv","awkn","ianngkw","sakwn","aectkbw","ehrwo","berohwga","hrbgwoeas","hrfcwoeae","sarwcehefo","hwsero"]'),g=JSON.parse('["laabad","nlnuaiigs","slataatne","ssntaeiao","saon","azdaa","abtopm","iadnodb","ratsabod","atndbsiao","erusabor","ieasltb","adbestialid","obob","soobb","atefobad","loaisob","soabl","eorlalb","rellobsa","orcobrahs","ardbi","simorbat","ubatec","ourbr","ubsorr","aarcb","acsarb","acnorb","norbacse","acnórb","nórbacse","acac","saacc","alfihcod","lhairfc","dhaco","ehdco","ohlcu","hcsolu","ahpcu","ahduapc","aschupapoll","tepuhcnó","icáp","icat","lcti","rotílcsi","ocac","oiadccnno","ootci","noejsoc","oarjcmdea","sleclpoaom","ouitcmnsa","ssuctnoaim","ocahcn","rascdoooln","ocserodalosn","hoioecc","ocreto","aarcgooífp","airclooifp","iacoprolagn","outacqeer","rerroces","ocoñ","soocñ","irteamc","irneotc","nitercso","ucatal","ucol","suocl","snicgluuin","uscunilling","uscunniling","ruangtc","ycsila","ócoenr","iadendrofil","ooainoemrnmetds","uedsond","ikehdclce","nciditióag","eiudq","eotltcd","ncidinoóam","ztidrnoiam","soodm","hosdo","rdsago","alucnead","sitoreom","ircóote","diletasuvc","rsmpaee","esestupidec","ipútseod","ueocun","uylaace","óneyaculaci","ycldeauao","oacenuydla","lucayera","sicsafom","acsofsims","sicsafat","acsafsits","leafc","icalefnó","tireolf","iádsfjnoe","aolfl","aodlolf","dallofro","nallofod","ofrall","edtfoársno","aómlelf","oalgl","eiaegntls","scighpiiil","sliglpiaol","eopgl","oodgr","oeamgrgso","nraarzg","rgatei","rgogni","sahamburgue","ehbe","íenraoh","eerrorh","upajihat","upojihat","cohomoeróti","yokhn","eorhr","diatoi","tdaisoi","doeeiitcs","tdeizoi","diotoi","tdoisoi","cmibléi","méieibcls","sntcoei","reifnion","biogoaj","igrojgebo","roejd","ojodid","snikgluuin","aeoolmcñs","aeuolmcls","aslanzallam","aibselan","ebaalsins","oebls","elsobs","olatil","toalsil","ruijaul","amazic","aiormczra","adcómliin","iatladm","tidlamsa","iatlodm","tidlamso","amadam","daamsam","nadmoam","raamm","cahpeam","hcapamse","amacir","caarsim","onimacazor","rnimecaaor","caórnim","litramol","aiomsqatus","ncrssoaeaeibtm","amnóicabrets","ebtmaeatrs","atramsubr","semasturbar","imadre","ohrmidijae","diaesrm","ansagl","unosod","unze","ejtoe","ariog","rosaig","arnoi","apaj","aposay","epsohc","epod","seopd","epatol","tealsop","eejnodp","epen","epatip","lelraip","llirepsa","aerpr","epsarr","epodneiugisr","otvpieedrr","neópz","ziócnap","ipehcn","ips","aolpl","opsall","olskplaua","opoz","atsputrtio","upat","suapt","satcair","ararem","irodaz","suprleoocm","oegsnratin","neesm","seosn","esox","assoplagait","assoplapoll","diciusoi","ásocid","etat","seatt","etanot","niemlot","aottn","otsatn","otratneís","oottn","otsotn","apraar-ertiost","sevartit","aegvr","evsagr","ilcóvoain","auvvl","uvsavl","aorzr","ozsarr"]'),p=JSON.parse('["baitur","tmeprua","noiladule","satuas","tnettata","tvoonra","abdrat","feuba","ibhcta","tiobc","ibet","iebibtmos","siebt","obledr","foounfb","onguoblu","ogolbunue","nuiainogolstobu","obresiluongu","obergu","oinuoblu","orilbudle","eouuxsb","lrearnb","elnarbru","qruaenb","uaocc","earcf","codlaceh","hhaarcc","sagahces","hufrcafad","hctnai","nhtieac","tnaihcse","nhtisac","hcei","eaecsnhsni","rheci","hcruei","uhrisec","tenihcco","eoncqehuti","hchuel","qhuneoc","eohcc","ocn","ocdran","sosneac","ihcnocre","aorndnc","rannoced","rannocsd","sannoces","onsecnass","eoncn","rennocei","onrecneis","ocsn","lolueic","lliuocse","lliuocno","ercouillonn","finuocel","atruocdu","rcnite","arredvc","urreevc","rcirci","rcetto","rcétto","rulacoilt","liuorcel","rcnité","ucl","ucsl","edelib","eaudseeslg","dremedre","uitsepd","iptndsuet","tupsidre","tupsidse","tupsidze","rdeugo","ureosgd","ureorgd","liuordel","nuodc","nnocudto","onegudxu","aungdld","édelib","nénceod","nnocédre","nnocédse","eaudseéslg","rédmeed","dremédre","cnammeeh","cnammeéh","mednemrat","rmdmeee","mednemret","dremmere","dremmese","meduemrer","seeeurmrdm","eeeeurmsdm","dremmeze","rmdméee","meefap","meéfap","eoaeupmtap","éoaeupmtap","neeluc","lnecrue","elucneru","neéluc","lnécsue","unrfele","inrfeoe","inrféoe","neruenilesav","spiea","sigiepnon","ntoer","egasfinse","ifetto","eouurtf","ofertu","zrtfi","ufreim","uildfslae","eacgr","eapgu","dlnga","ednalgru","lnesgadue","lguolliuodna","lgudna","lnugo","ngeluo","loogg","oilngulad","ogeniu","ogedru","negourgandi","rgasgonse","cineugeh","unolgidue","icebmiel","icébmiel","eaucxhl","tatveel","totpeel","taomg","amehcn","tncmdhaoar","molegltrisaui","cassamer","ascemsarr","avetmuite","edilmrale","nldmlaeoir","eedmr","emredr","emsedr","eeurxdm","ieerrdm","qidremeu","edqemrius","emdralliuodr","éedmr","imothc","bilneam","siumn","iealmsrbe","iéalmsrbe","onilmiale","eiamlcolan","aciromdu","anes","anez","aniz","sainz","oerng","inca","esiainxu","eiunq","inreuq","oérng","fuonapel","raitnap","epeuqc","epelad","eped","qeudeop","eunupqead","ept","sesteap","epxuet","oiugfnp","eiusxsp","ipuoss","tlreeup","clupo","opsacr","sacropes","opvacu","opfu","eafpsfosiu","ofaspuise","opednu","opédnu","etrpuroriu","iusneap","upniat","iuntsap","upet","suept","nuipt","épelad","léedsap","éohlpdpie","sioplpéehd","qéudeop","épéd","séépd","éunupqead","sésteap","épxuet","atueuqdr","uarcelr","naort","piepeor","piépeor","ortorreipseb","orfibs","uoruelr","uaignos","asdual","asel","paosl","apolasdr","aoadslprs","asepol","aoeislpre","srosipaeel","paelsos","aoetslpte","algnastn","agatsnlns","eirsloalut","csbebh","csuelh","csconh","qonhcseu","otsustiex","taiuserqe","taiusérqe","oalfeit","ietantouser","uotnatez","tatpeet","uolratez","eteb","etéb","etcltsiue","suttlieecs","etxuet","eebtu","éebtu","otdrac","nreaeit","druocut","saiurtes","étxuet","naivg","avsnig","iaeunrv","aiseedv","ivre","ivlo","eilvo","tmlveeinmo","ivrelo","eiuorlv","éilvo","iveélo","aiséedv","rnoxepeuir","rnoxepéuir","eelyu","oydu","oynipu","ionuepy","yianpsouiiont","oyertu","gguueez","gguueèz","spiéa","ntoér"]'),m=JSON.parse('["apullaot","taammucchia","enlaa","aparraot","raasur","raosur","onaaatstas","csagabai","sasgaab","rangabis","adacblrca","ealbl","ratsabad","ratsabed","ratsabid","ratsabod","eartetb","oantatb","ebonil","ranrebad","ibag","ehcsibar","ehcsibor","ancbahoric","ihccobon","obolif","obatai","ledrobol","rbacni","oiacubol","ùuldoib","ubenos","acerac","aaelccrla","aaccc","copaiplcalace","evadacer","acerag","acatag","acetag","tehgacat","aancg","eancg","acenog","iaccs","aatzazc","mizzacam","oazcz","oanzazc","oanzezc","oanzizc","oescs","hcacce","phpiaac","avaihcer","avaihcat","icopso","icitcucaa","oilgocan","oilgocen","oilgocin","uotronc","aozcz","irneatc","irneotc","rcotsi","uatncltia","uatncltoa","uatncltoe","ucol","ucanol","ucenol","ucinol","eeidncetif","ido","ilatidon","afav","iafemminucc","ifac","ifag","ifenog","iocifncho","eortetf","rettofis","uottatf","uottotf","rccnfaioe","rfange","tecorfot","rfoico","oicorfen","crioosf","egus","oonledg","odraugen","meilibcle","meilibcli","nazriczae","iaairznszc","nazticzai","nazticzao","igniooscirnli","nioiog","eccllcauo","ihccelon","oleraf","aoflf","aorfefl","nandaom","angimnaga","nanraom","aedmr","edcimraca","aetradm","ienradm","oenradm","oesrodm","tongimat","atnmoointg","etnmoointg","hiinacm","icinmnhoe","oman","aotmn","aornetm","catromic","ausms","aerng","oerng","heiracn","apolud","ealpl","oaslolp","cactaap","naztaop","irocepan","eecps","oiipc","airnecp","inlnpnooe","aippp","ipcippaca","oinpapp","oinpepp","ipìp","ailpr","aicsiper","ipoics","lilsoep","ootptoitls","oiirpmcae","aoppm","ionmopp","aocpr","oocpr","aotpt","aumpipp","auntatp","utntptaae","eitpeaurnt","utnnptaoa","utnnptaoe","luiaagq","ecinrchoe","eranig","rooecirnliign","razziris","eaprliolbm","rilipgnmoooci","eaprliolpm","aiffuron","ettabser","btessatri","bsarro","arrobsat","orrobsen","alosadbtor","csizza","ocmse","acroeps","actoaps","cseraiggerro","esag","lnursigae","lnutsigaa","msatappardna","osaicc","oslemc","aocsr","ongapsal","enmsapprio","hccitsoi","ntzraos","toztsrnaa","ntzroos","toznsrnoe","ucimschai","ucinschoe","itlevsan","enrsagvrie","oeztlaalnr","oenrert","eettt","iterar","otap","arito","ornoeit","abmorter","abmortat","aacvc","ocfvuaalnf","aarnegv","einzn","oolcacz","oclnzcooa"]'),b=JSON.parse('["agrnanead","gdraiaannn","rfebnea","neearbfebl","ssorfane","kkurfane","frkeatekn","fastaalpkrew","kiezfane","giuzfane","antai","ksaab","sao","naebl","neobrneedd","lsbbtoeerf","ebneff","ebnekk","eaeeblzrn","reesneideetmob","terbu","lemeobne","lereoblu","oblemmupnere","lekkoblu","oegibtrel","rbnetseohkeo","regbppreiu","leffubne","ednela","idkazk","oobdm","odpokm","odroom","rakndaiot","rdlo","erdrooggeil","tlodogroko","lieek","nedreg","oleasmf","kleinkf","kleirkf","megadverdam","agkabl","agt","ezogooengd","eelgi","enliegfe","leugl","aeindag","ueknteg","jepptig","egreteimedos","ansdogma","megodverdom","engodverget","traakfg","rtnugaekt","llpgdpreee","tregi","ahjs","epmeohtr","ohre","ohnere","rthoerenbuu","erhoerenlop","ohgire","tojeerh","ohl","uhretf","rashldueei","naekn","ugkettingze","noakmrleka","lrbekeeer","oljko","ileonok","lkklovsejtoo","otoolkgo","ztoolkka","enklootzakk","lkneto","nkro","oktn","nutkknoeen","rkrekkaketne","ukt","eujkt","tklterkeujeitk","kwiaekk","otliefdesgr","ull","uhnellans","ulnell","ulgill","ultl","ullemm","tekfamle","amsm","ermatennaai","eajmt","emraak","omf","omneff","umst","ania","anneia","taina","takna","reeng","ensreg","enku","enneku","ektenusir","teknu","enetku","tihnc","inrekk","eirkskn","eolult","liegpone","neaornpekk","ttorpone","reesneidpetmoo","tuozpone","ohewuore","neeorhueow","apla","areupadll","naepl","ifodeple","epezon","ipleme","ipnese","egpijpbekki","ipnepj","ipk","ipness","praruleesilia","oppe","opnepe","opto","etportieksl","opt","iepotverdor","nlsrlkaeaa","erte","rdtrdreeie","esoermprn","letuerne","ooetrhr","orkazt","ounkdhr","urnekk","tcjheas","cstjih","tjihcsne","cstfoh","cenerhesrcurmshida","pleenms","lste","lteisetrg","nslo","tpeunis","dtjaens","tehesopor","ktoopms","tsdeno","ttjoeos","tstnor","eurfdfs","uslekk","aitetpjnk","etfe","ieemret","erteringlij","itnete","otrete","ogontnzeg","rotetiojg","ottortri","rtfeetriotto","rttu","modrevem","eglevraln","ekoevrltn","ekahvrrct","enverkracht","teverkracht","enuevrekn","uenrevtk","epseivku","regnivne","lerovesos","eajwt","wimazsilnfeja","iwfj","iwnepp","uwejtf","azejda","azressawnekk","ezneki","ezreki","uznegi","luaippz"]'),k=JSON.parse('["baotro","raonai","oíaanssiss","laaloab","ratsabod","atrobsads","aihbc","aitsecb","obatec","obbo","aotbs","ubmubm","ourbr","ubsorr","acoarb","aaobsrc","acoãrb","ãaobsrc","õaebsrc","acetec","raacg","aiihcmsna","lahroac","çaarsac","ohcohcat","hcrapu","rotilcsi","íoncaac","ootci","ooelshc","õoelshc","ocan","oolnosc","ooncr","ocsonr","uc","rsrpaoe","leafc","ofad","moafd","soafd","roefd","roagz","rgohle","íenraoh","diatoi","tdaisoi","olatil","iécsabl","cibsélsa","amam","saamm","aedmr","emsadr","sainz","aeerpnlio","oavpr","apu","epradi","ipal","siapl","oitpn","aorpr","upat","suapt","seipn","aucqe","aaaescngm","ienrotar","sraarnt","aaivd","oedva","darbivro","axan","ootcahx","nasu"]'),w=JSON.parse('["ухй","ухи","ухйыве","ухйывё","оувхе","оувхё","усак"]'),y=JSON.parse('["adog","afg","afsg","aftigg","aftogg","agsy","agy","aigng","aniz","arep","asgssba","atdr","awkn","chnci","deejw","eercskp","ehrwo","eirgsgn","ejgniw","eprekc","eurcskf","hcscni","hcskni","hecfl","heelscf","hicbt","hietscb","hsti","hwsero","iatgsgf","idek","idkc","ijsezz","ijzz","imfl","inregg","insagg","ipsess","ipss","itst","itt","iuesssp","khnci","kpcsi","lcti","lohssase","lstu","mstu","nala","nasesu","nasu","oatgsgf","obbo","obsren","ockc","ohesrael","opnr","oslseha","psci","psskci","rcpa","reoeashls","roebn","roseig","rotilcsi","royg","rueqe","sadtr","saerp","sagabs","sakwn","saodg","sas","seensip","seipn","shtsi","siedk","sifml","sikdc","sltci","sltsu","smtsu","snlaa","sobbo","sokcc","sonpr","srpca","sseas","sufmf","sugjg","sukfc","sutbt","sutcn","swtta","ubtt","ucm","uctn","ufkc","ufrekc","ujgg","umff","uqsree","wtta","yusps"]'),z=JSON.parse('["ухй","ухи","ухйиво","ухйіво","оувхе","усак"]');function v(e){const t=[...(0,i.ex)(e)],{length:s}=t,n=new Array(s);for(let e=0;e<s;e++)n[e]=t[(23*e+13)%s];return String.fromCodePoint(...n)}const U=(j=[[o.TM.AR,[]],[o.TM.BE,[]],[o.TM.DE,f],[o.TM.EN,d],[o.TM.ES,g],[o.TM.FA,[]],[o.TM.FR,p],[o.TM.HE,[]],[o.TM.IT,m],[o.TM.NL,b],[o.TM.PL,[]],[o.TM.PT,k],[o.TM.RU,w],[o.TM.SV,y],[o.TM.TR,[]],[o.TM.UK,z]],new Map(j.map((([e,t])=>[e,new Set(t.map(v))]))));var j;var O=s(2196);const A=3,P=10;class V{language;letters;constructor(e,t){this.language=e,this.letters=t}static restrict(e,t){return new class extends V{constructor(){super(e.language,c.restrict(e.letters,t))}nextWord(t,s){return e.nextWord(t,s)}ngram1(){return e.ngram1()}ngram2(){return e.ngram2()}}}}function q(e,t){const s=t instanceof l?t:l.load(t),n=c.normalize(s.letters(e).filter((({codePoint:e})=>32!==e))),a=new I(s);return new class extends V{constructor(){super(e,n)}nextWord(e,t=Math.random){return String.fromCodePoint(...((e,t)=>{const n=a.findPrefixes(e),i=[];let r=0;const o=()=>r<5&&(r++,i.length=0,n.length>0&&i.push(...(0,O.gl)(n,t).codePoints),!0);for(o();;){const n=s.segment(i).filter((({codePoint:t})=>{if(32===t){if(i.length<A)return!1}else if(!e.includes(t))return!1;return!0})).map((({codePoint:e,frequency:t})=>(32===e&&(t*=Math.pow(1.3,i.length)),{codePoint:e,frequency:t})));if(0===n.length){if(o())continue;return i}const a=(0,O.nJ)(n,(({frequency:e})=>e),t);if(32===a.codePoint)return i;if(i.length>P){if(o())continue;return i}i.push(a.codePoint)}})(e,t))}ngram1(){return s.toNgram1()}ngram2(){return s.toNgram2()}}}class x{codePoints;constructor(e){this.codePoints=e}matches(e){return this.codePoints.every((t=>e.includes(t)))}}class I{table;map;constructor(e){this.table=e,this.map=new Map(e.alphabet.map((e=>[e,[]])));const t=e=>{for(const{codePoint:s}of this.table.segment(e))if(32!==s){e.push(s);const n=new x([...e]);for(const t of new Set(e))this.map.get(s).push(n);e.length<A&&t(e),e.pop()}};t([])}findPrefixes(e){const{focusedCodePoint:t}=e;if(null!=t){const s=this.map.get(t).filter((t=>t.matches(e)));return s.length>0?s:[new x([t])]}return[]}}function T(e){const{language:t,letters:s}=e,n=function(e){const t=U.get(e)??null;return null!=t&&t.size>0?new class{allow(s){return!t.has(e.lowerCase(s))}}:new class{allow(e){return!0}}}(t);return new class extends V{constructor(){super(t,s)}nextWord(t,s){for(;;){const a=e.nextWord(t,s);if(n.allow(a))return a}}ngram1(){return e.ngram1()}ngram2(){return e.ngram2()}}}const S=(0,s(7810).createContext)(null);class M extends V{static loader=async()=>new M;static letter1=new c(97,.1,"A");static letter2=new c(98,.09,"B");static letter3=new c(99,.08,"C");static letter4=new c(100,.07,"D");static letter5=new c(101,.06,"E");static letter6=new c(102,.05,"F");static letter7=new c(103,.04,"G");static letter8=new c(104,.03,"H");static letter9=new c(105,.02,"I");static letter10=new c(106,.01,"J");static letters=[M.letter1,M.letter2,M.letter3,M.letter4,M.letter5,M.letter6,M.letter7,M.letter8,M.letter9,M.letter10];words;rng;constructor(e=["abc","def","ghi"],t=(e=>{let t=0;const s=()=>{const s=t/e;return t+=1,t===e&&(t=0),s};return s.mark=()=>t,s.reset=e=>{t=e},s})(e.length)){super(o.TM.EN,M.letters),this.words=[...e],this.rng=t}nextWord(e,t=this.rng){return(0,O.gl)(this.words,t)}ngram1(){const e=this.letters.map((({codePoint:e})=>e)),{length:t}=e,s=new o.ti(e);for(let n=0;n<t;n++)s.set(e[n],1);return s}ngram2(){const e=this.letters.map((({codePoint:e})=>e)),{length:t}=e,s=new o.mA(e);for(let n=0;n<t;n++)for(let a=0;a<t;a++)s.set(e[n],e[a],1);return s}}class N{static empty=new N(null,null);codePoints;focusedCodePoint;constructor(e=null,t=null){const s=e&&e.map(c.toLetter),n=t&&c.toLetter(t);if(null!=s&&0===s.length)throw new Error;if(null!=s&&null!=n&&!s.includes(n))throw new Error;this.codePoints=s&&new Set(s.map(E)),this.focusedCodePoint=n&&E(n)}includes(e){return null==this.codePoints||this.codePoints.has(e)}}const E=({codePoint:e})=>e},2044:(e,t,s)=>{s.d(t,{sN:()=>o,fT:()=>u,B$:()=>c,c0:()=>d,Z6:()=>r,Oz:()=>g,Yv:()=>p,HC:()=>l,c5:()=>m,ex:()=>n});const n=e=>{const{length:t}=e;return{[Symbol.iterator](){let s=0;const n={done:!0,value:-1},a={[Symbol.iterator]:()=>a,next(){if(s<t){const t=e.codePointAt(s)??0;s+=(e=>e>=65536?2:1)(t),n.done=!1,n.value=t}else n.done=!0,n.value=-1;return n}};return a}}},a=new Map,i=new Map,r=e=>e>=768&&e<=879,o=(e,t)=>a.get(t<<16|e)??e;for(const[e,t,s]of[[768,"AEINOUWYaeinouwy","ÀÈÌǸÒÙẀỲàèìǹòùẁỳ"],[769,"ACEGIKLMNOPRSUWYZacegiklmnoprsuwyzΑΕΗΙΟΥΩαεηιουω","ÁĆÉǴÍḰĹḾŃÓṔŔŚÚẂÝŹáćéǵíḱĺḿńóṕŕśúẃýźΆΈΉΊΌΎΏάέήίόύώ"],[770,"ACEGHIJOSUWYZaceghijosuwyz","ÂĈÊĜĤÎĴÔŜÛŴŶẐâĉêĝĥîĵôŝûŵŷẑ"],[771,"AEINOUVYaeinouvy","ÃẼĨÑÕŨṼỸãẽĩñõũṽỹ"],[772,"AEGIOUYaegiouy","ĀĒḠĪŌŪȲāēḡīōūȳ"],[774,"AEGIOUaegiou","ĂĔĞĬŎŬăĕğĭŏŭ"],[775,"ABCDEFGHIMNOPRSTWXYZabcdefghmnoprstwxyz","ȦḂĊḊĖḞĠḢİṀṄȮṖṘṠṪẆẊẎŻȧḃċḋėḟġḣṁṅȯṗṙṡṫẇẋẏż"],[776,"AEHIOUWXYaehiotuwxyΙΥιυ","ÄËḦÏÖÜẄẌŸäëḧïöẗüẅẍÿΪΫϊϋ"],[778,"AUauwy","ÅŮåůẘẙ"],[779,"OUou","ŐŰőű"],[780,"ACDEGHIKLNORSTUZacdeghijklnorstuz","ǍČĎĚǦȞǏǨĽŇǑŘŠŤǓŽǎčďěǧȟǐǰǩľňǒřšťǔž"],[783,"AEIORUaeioru","ȀȄȈȌȐȔȁȅȉȍȑȕ"],[807,"CDEGHKLNRSTcdeghklnrst","ÇḐȨĢḨĶĻŅŖŞŢçḑȩģḩķļņŗşţ"],[808,"AEIOUaeiou","ĄĘĮǪŲąęįǫų"]])for(let n=0;n<t.length;n++){const r=t.codePointAt(n),o=s.codePointAt(n);a.set(e<<16|r,o),i.set(o,r)}function c(e){return"U+"+e.toString(16).padStart(4,"0")}function u(e){return h.get(e)??null}function l(e){return f.get(e)??null}const h=(()=>{const e=new Map;for(const[t,s]of[[[65],[192,193,194,195,196,197,256,258,260,461,478,480,506,512,514,550,570,7680,7840,7842,7844,7846,7848,7850,7852,7854,7856,7858,7860,7862,9398,11375,65313]],[[65,65],[42802]],[[65,69],[198,482,508]],[[65,79],[42804]],[[65,85],[42806]],[[65,86],[42808,42810]],[[65,89],[42812]],[[66],[385,579,7682,7684,7686,9399,65314]],[[67],[67,199,262,264,266,268,391,571,7688,9400,42814,65315]],[[68],[270,272,393,394,7429,7690,7692,7694,7696,7698,9401,42873,65316]],[[68,90],[452,497]],[[68,104],[208]],[[68,122],[453,498]],[[69],[200,201,202,203,274,276,278,280,282,398,400,516,518,552,603,7431,7700,7702,7704,7706,7708,7864,7866,7868,7870,7872,7874,7876,7878,9402,65317]],[[70],[401,7710,9403,42875,42876,65318]],[[71],[284,286,288,290,403,484,486,500,610,7712,9404,42877,42878,42912,65319]],[[72],[292,294,542,7714,7716,7718,7720,7722,9405,11367,11381,42893,65320]],[[73],[204,205,206,207,296,298,300,302,304,407,463,520,522,7724,7726,7880,7882,9406,65321]],[[74],[308,567,584,9407,65322]],[[75],[310,408,488,7728,7730,7732,9408,11369,42816,42818,42820,42914,65323]],[[76],[313,315,317,319,321,573,7734,7736,7738,7740,9409,11360,11362,42822,42824,42880,65324]],[[76,74],[455]],[[76,106],[456]],[[77],[412,1019,7742,7744,7746,9410,11374,65325]],[[78],[209,323,325,327,413,504,544,7438,7748,7750,7752,7754,9411,42896,42916,65326]],[[78,74],[458]],[[78,106],[459]],[[79],[210,211,212,213,214,216,332,334,336,390,415,416,465,490,492,510,524,526,554,556,558,560,7756,7758,7760,7762,7884,7886,7888,7890,7892,7894,7896,7898,7900,7902,7904,7906,9412,42826,42828,65327]],[[79,69],[338]],[[79,73],[418]],[[79,79],[42830]],[[79,85],[546]],[[80],[420,7764,7766,9413,11363,42832,42834,42836,65328]],[[81],[586,9414,42838,42840,65329]],[[82],[340,342,344,528,530,588,7768,7770,7772,7774,9415,11364,42842,42882,42918,65330]],[[83],[346,348,350,352,536,7776,7778,7780,7782,7784,7838,9416,11390,42884,42920,65331]],[[84],[354,356,358,428,430,538,574,7786,7788,7790,7792,9417,42886,65332]],[[84,90],[42792]],[[84,104],[222]],[[85],[217,218,219,220,360,362,364,366,368,370,431,467,469,471,473,475,532,534,580,7794,7796,7798,7800,7802,7908,7910,7912,7914,7916,7918,7920,9418,65333]],[[86],[434,581,7804,7806,9419,42846,65334]],[[86,89],[42848]],[[87],[372,7808,7810,7812,7814,7816,9420,11378,65335]],[[88],[7818,7820,9421,65336]],[[89],[221,374,376,435,562,590,7822,7922,7924,7926,7928,7934,9422,65337]],[[90],[377,379,381,437,548,7824,7826,7828,9423,11371,11391,42850,65338]],[[97],[224,225,226,227,228,229,257,259,261,462,479,481,507,513,515,551,592,593,7681,7834,7841,7843,7845,7847,7849,7851,7853,7855,7857,7859,7861,7863,9424,11365,65345]],[[97,97],[42803]],[[97,101],[230,483,509]],[[97,111],[42805]],[[97,117],[42807]],[[97,118],[42809,42811]],[[97,121],[42813]],[[98],[384,386,387,595,7683,7685,7687,9425,65346]],[[99],[231,263,265,267,269,392,572,7689,8580,9426,42815,65347]],[[100],[271,273,395,396,598,599,1281,5095,7691,7693,7695,7697,7699,9427,42922,65348]],[[100,104],[240]],[[100,122],[454,499]],[[101],[232,233,234,235,275,277,279,281,283,477,517,519,553,583,7701,7703,7705,7707,7709,7865,7867,7869,7871,7873,7875,7877,7879,9428,65349]],[[102],[402,7711,9429,65350]],[[102,102],[64256]],[[102,102,105],[64259]],[[102,102,108],[64260]],[[102,105],[64257]],[[102,108],[64258]],[[103],[285,287,289,291,485,487,501,608,7545,7713,9430,42879,42913,65351]],[[104],[293,295,543,613,7715,7717,7719,7721,7723,7830,9431,11368,11382,65352]],[[104,118],[405]],[[105],[236,237,238,239,297,299,301,303,305,464,521,523,616,7725,7727,7881,7883,9432,65353]],[[106],[309,496,585,9433,65354]],[[107],[311,409,489,7729,7731,7733,9434,11370,42817,42819,42821,42915,65355]],[[108],[314,316,318,320,322,383,410,619,621,7735,7737,7739,7741,9435,11361,42823,42825,42881,65356]],[[108,106],[457]],[[109],[623,625,7743,7745,7747,9436,65357]],[[110],[241,324,326,328,329,414,505,626,1083,1289,7749,7751,7753,7755,9437,42897,42917,65358]],[[110,106],[460]],[[111],[242,243,244,245,246,248,333,335,337,417,466,491,493,511,525,527,555,557,559,561,596,629,7441,7757,7759,7761,7763,7885,7887,7889,7891,7893,7895,7897,7899,7901,7903,7905,7907,9438,42827,42829,65359]],[[111,101],[339]],[[111,105],[419]],[[111,111],[42831]],[[111,117],[547]],[[112],[421,961,7549,7765,7767,9439,42833,42835,42837,65360]],[[113],[587,9440,42839,42841,65361]],[[114],[341,343,345,529,531,589,637,7769,7771,7773,7775,9441,42843,42883,42919,65362]],[[115],[347,349,351,353,537,575,642,7777,7779,7781,7783,7785,7835,9442,42885,42921,65363]],[[115,115],[223]],[[116],[355,357,359,429,539,648,7787,7789,7791,7793,7831,9443,11366,42887,65364]],[[116,104],[254]],[[116,122],[42793]],[[117],[249,250,251,252,361,363,365,367,369,371,432,468,470,472,474,476,533,535,649,7795,7797,7799,7801,7803,7909,7911,7913,7915,7917,7919,7921,9444,65365]],[[118],[651,652,7805,7807,9445,42847,65366]],[[118,121],[42849]],[[119],[373,7809,7811,7813,7815,7817,7832,9446,11379,65367]],[[120],[7819,7821,9447,65368]],[[121],[253,255,375,436,563,591,7823,7833,7923,7925,7927,7929,7935,9448,65369]],[[122],[378,380,382,438,549,576,7825,7827,7829,9449,11372,42851,65370]],[[46,46,46],[8230]],[[63,63],[8263]],[[63,33],[8264]]])for(const n of s)e.set(n,t);return e})(),f=(()=>{const e=new Map;for(const[t,s]of[[33,[161]],[34,[171,187,8220,8221,8222,8223,8249,8250]],[39,[8216,8217]],[45,[8208,8209,8210,8211,8212]],[63,[191]]])for(const n of s)e.set(n,t);return e})(),d=e=>e<32,g=e=>10===e||11===e||12===e||13===e||8232===e||8233===e,p=e=>9===e||10===e||11===e||12===e||13===e||32===e||160===e||8192===e||8193===e||8194===e||8195===e||8196===e||8197===e||8198===e||8199===e||8200===e||8201===e||8202===e||8232===e||8233===e,m=(e,t)=>{"string"==typeof e&&(e=new Intl.Locale(e));const s=new Intl.Segmenter(e,{granularity:"word"}),a=new Intl.Segmenter(e,{granularity:"grapheme"}),i=new Intl.Collator(e),r=new Map,o=new Map;let c=0,u=0,l=0,h=0;const f=e=>{let t=o.get(e);if(null==t){t=0;for(const s of a.segment(e))t+=1;o.set(e,t)}return t},d=t=>{for(const{segment:a,isWordLike:i}of s.segment(t.normalize()))if(i){l+=1;const t=a.toLocaleLowerCase(e);r.set(t,(r.get(t)??0)+1);const s=f(t);h+=s,u+=s}else if(" "===a)c+=1;else for(const e of n(a))p(e)?c+=1:u+=1};if(Array.isArray(t))for(const e of t)d(e);else d(t);const g=r.size,m=l>0?h/l:0,b=Array.from(r.entries()).map((([e,t])=>({word:e,count:t}))).sort(((e,t)=>t.count-e.count||i.compare(e.word,t.word)));return{numWhitespace:c,numCharacters:u,numWords:l,numUniqueWords:g,avgWordLength:m,wordCount:b}}}}]);
//# sourceMappingURL=4a6f5fe48b069b0f.js.map