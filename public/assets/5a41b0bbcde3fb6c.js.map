{"version":3,"file":"5a41b0bbcde3fb6c.js","mappings":"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,CAEA,MAAAkG,CAAOnH,GACL,OAAOa,KAAKI,MAAMmG,SAASpH,EAC7B,CAEA,SAAAqH,CAAUC,GACR,OAAOA,EAAIC,MAAMvH,GAAOa,KAAKI,MAAMmG,SAASpH,IAC9C,CAEA,UAAAwH,CAAWF,GACT,OAAOA,EAAIG,OAAOzH,GAAOa,KAAKI,MAAMmG,SAASpH,IAC/C,EAGF,SAAS+G,EACP9F,EACAyG,GAEA,IAAK,MAAMC,KAAQ1G,EACjB,GAAIyG,EAAON,SAASO,GAClB,OAAOA,EAGX,OAAO,IACT,CCxGO,MAAMC,EACXzH,UAAqB,IAAIyH,EACb,KACI,SACG,MACD,gCAElBzH,UAAqB,IAAIyH,EACb,KACI,WACG,MACD,mCAElBzH,UAAqB,IAAIyH,EACb,KACI,QACG,MACD,2CAElBzH,UAAqB,IAAIyH,EACb,KACI,QACG,MACD,kCAElBzH,UAAqB,IAAIyH,EACb,KACI,QACG,MACD,oCAElBzH,UAAqB,IAAIyH,EACb,KACI,QACG,MACD,8BAElBzH,UAAqB,IAAIyH,EACb,KACI,QACG,MACD,kCAElBzH,UAAqB,IAAIyH,EACb,KACI,SACG,MACD,oCAElBzH,UAAqB,IAAIyH,EACb,KACI,QACG,MACD,+BAElBzH,UAAqB,IAAIyH,EACb,KACI,SACG,MACD,+BAElBzH,UAAqB,IAAIyH,EACb,KACI,QACG,MACD,+BAElBzH,UAAqB,IAAIyH,EACb,KACI,QACG,MACD,uCAElBzH,UAAqB,IAAIyH,EACb,KACI,QACG,MACD,8BAElBzH,UAAqB,IAAIyH,EACb,KACI,QACG,MACD,oCAElBzH,UAAqB,IAAIyH,EACb,KACI,QACG,MACD,8BAElBzH,UAAqB,IAAIyH,EACb,KACI,QACG,MACD,8BAElBzH,UAAqB,IAAIyH,EACb,KACI,QACG,MACD,oCAElBzH,UAAqB,IAAIyH,EACb,KACI,QACG,MACD,uCAElBzH,UAAqB,IAAIyH,EACb,KACI,QACG,MACD,+BAElBzH,UAAqB,IAAIyH,EACb,KACI,WACG,MACD,oCAElBzH,UAAqB,IAAIyH,EACb,KACI,QACG,MACD,6B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ACAf,SACAgB,QACAC,WACA3N,IA5pCX,aAAO4N,CAAOlB,GACZ,OAAO,IAAIa,EACC,SACC,IACC,SACE,SACEb,GACD,EACG7L,EAASG,IAE/B,CAEAf,aAAwB,IAAIsN,EAChB,QACC,GACC,OACE,SACE7F,EAASM,IACV,EACG,IAAI,KACpBnH,EAASI,SACTJ,EAASK,cACTL,EAASM,QACTN,EAASO,aACTP,EAASc,SAGb1B,iBAA4B,IAAIsN,EACpB,YACC,GACC,SACE,SACE7F,EAASM,IACV,EACG,IAAI,KACpBnH,EAASI,SACTJ,EAASK,cACTL,EAASM,QACTN,EAASO,aACTP,EAASc,SAGb1B,sBAAiC,IAAIsN,EACzB,iBACC,GACC,uBACE,SACE7F,EAASM,IACV,EACG,IAAI,KACpBnH,EAASI,SACTJ,EAASK,cACTL,EAASM,QACTN,EAASO,aACTP,EAASc,SAGb1B,kBAA6B,IAAIsN,EACrB,aACC,GACC,UACE,UACE7F,EAASM,IACV,EACG,IAAI,KACpBnH,EAASI,SACTJ,EAASK,cACTL,EAASM,QACTN,EAASO,aACTP,EAASc,SAGb1B,0BAAqC,IAAIsN,EAC7B,gBACC,GACC,oBACE,aACE7F,EAASM,IACV,EACG,IAAI,KACpBnH,EAASI,SACTJ,EAASK,cACTL,EAASc,QAEAwL,GAEblN,+BAA0C,IAAIsN,EAClC,qBACC,GACC,yBACE,kBACE7F,EAASM,IACV,EACG,IAAI,KACpBnH,EAASI,SACTJ,EAASK,cACTL,EAASc,QAEA0L,GAEbpN,yBAAoC,IAAIsN,EAC5B,oBACC,GACC,mBACE,iBACE7F,EAASM,IACV,EACG,IAAI,KACpBnH,EAASM,QACTN,EAASO,aACTP,EAASc,QAEAwL,GAEblN,8BAAyC,IAAIsN,EACjC,yBACC,GACC,wBACE,sBACE7F,EAASM,IACV,EACG,IAAI,KACpBnH,EAASM,QACTN,EAASO,aACTP,EAASc,QAEA0L,GAEbpN,4BAAuC,IAAIsN,EAC/B,uBACC,GACC,sBACE,oBACE7F,EAASM,IACV,EACG,IAAI,KAAKnH,EAASc,SAEtC1B,kBAA6B,IAAIsN,EACrB,aACC,GACC,UACE,UACE7F,EAASM,IACV,EACG,IAAI,KACpBnH,EAASI,SACTJ,EAASK,cACTL,EAASM,QACTN,EAASO,aACTP,EAASc,SAGb1B,aAAwB,IAAIsN,EAChB,QACC,GACC,OACE,SACE7F,EAASM,IACV,EACG,IAAI,KACpBnH,EAASM,QACTN,EAASO,aACTP,EAASI,SACTJ,EAASK,cACTL,EAASc,SAGb1B,aAAwB,IAAIsN,EAChB,QACC,GACC,OACE,SACE7F,EAASM,IACV,EACG,IAAI,KACpBnH,EAASY,aACTZ,EAASa,oBAGbzB,aAAwB,IAAIsN,EAChB,QACC,GACC,OACE,SACE7F,EAASI,IACV,EACG,IAAI,KACpBjH,EAASM,QACTN,EAASO,aACTP,EAASI,SACTJ,EAASK,cACTL,EAASc,SAGb1B,aAAwB,IAAIsN,EAChB,QACC,GACC,OACE,SACE7F,EAASI,IACV,EACG,IAAI,KACpBjH,EAASM,QACTN,EAASO,aACTP,EAASI,SACTJ,EAASK,cACTL,EAASc,SAGb1B,gBAA2B,IAAIsN,EACnB,WACC,GACC,QACE,WACE7F,EAASI,IACV,EACG,IAAI,KACpBjH,EAASM,QACTN,EAASO,aACTP,EAASI,SACTJ,EAASK,cACTL,EAASc,SAGb1B,eAA0B,IAAIsN,EAClB,UACC,GACC,OACE,UACE7F,EAASI,IACV,EACG,IAAI,KACpBjH,EAASM,QACTN,EAASO,aACTP,EAASI,SACTJ,EAASK,cACTL,EAASc,SAGb1B,eAA0B,IAAIsN,EAClB,UACC,GACC,OACE,UACE7F,EAASI,IACV,EACG,IAAI,KACpBjH,EAASM,QACTN,EAASO,aACTP,EAASI,SACTJ,EAASK,cACTL,EAASc,SAGb1B,gBAA2B,IAAIsN,EACnB,WACC,GACC,QACE,WACE7F,EAASI,IACV,EACG,IAAI,KACpBjH,EAASM,QACTN,EAASO,aACTP,EAASI,SACTJ,EAASK,cACTL,EAASc,SAGb1B,eAA0B,IAAIsN,EAClB,UACC,GACC,OACE,UACE7F,EAASI,IACV,EACG,IAAI,KACpBjH,EAASM,QACTN,EAASO,aACTP,EAASI,SACTJ,EAASK,cACTL,EAASc,SAGb1B,aAAwB,IAAIsN,EAChB,QACC,GACC,OACE,SACE7F,EAASS,IACV,EACG,IAAI,KACpBtH,EAASM,QACTN,EAASO,aACTP,EAASI,SACTJ,EAASK,cACTL,EAASc,SAGb1B,aAAwB,IAAIsN,EAChB,QACC,GACC,OACE,SACE7F,EAASS,IACV,EACG,IAAI,KACpBtH,EAASM,QACTN,EAASO,aACTP,EAASI,SACTJ,EAASK,cACTL,EAASc,SAGb1B,aAAwB,IAAIsN,EAChB,QACC,GACC,OACE,SACE7F,EAASS,IACV,EACG,IAAI,KACpBtH,EAASM,QACTN,EAASO,aACTP,EAASI,SACTJ,EAASK,cACTL,EAASc,SAGb1B,eAA0B,IAAIsN,EAClB,UACC,GACC,OACE,UACE7F,EAASS,IACV,EACG,IAAI,KACpBtH,EAASM,QACTN,EAASO,aACTP,EAASI,SACTJ,EAASK,cACTL,EAASc,SAGb1B,iBAA4B,IAAIsN,EACpB,WACC,GACC,SACE,WACE7F,EAASS,IACV,EACG,IAAI,KACpBtH,EAASM,QACTN,EAASO,aACTP,EAASI,SACTJ,EAASK,cACTL,EAASc,SAGb1B,uBAAkC,IAAIsN,EAC1B,kBACC,GACC,eACE,kBACE7F,EAASS,IACV,EACG,IAAI,KACpBtH,EAASM,QACTN,EAASO,aACTP,EAASI,SACTJ,EAASK,cACTL,EAASc,SAGb1B,kBAA6B,IAAIsN,EACrB,aACC,GACC,UACE,aACE7F,EAASS,IACV,EACG,IAAI,KACpBtH,EAASM,QACTN,EAASO,aACTP,EAASI,SACTJ,EAASK,cACTL,EAASc,SAGb1B,aAAwB,IAAIsN,EAChB,QACC,GACC,OACE,SACE7F,EAASa,IACV,EACG,IAAI,KACpB1H,EAASM,QACTN,EAASO,aACTP,EAASI,SACTJ,EAASK,cACTL,EAASc,SAGb1B,aAAwB,IAAIsN,EAChB,QACC,GACC,OACE,QACE7F,EAASc,IACV,EACG,IAAI,KACpB3H,EAASM,QACTN,EAASO,aACTP,EAASI,SACTJ,EAASK,cACTL,EAASc,SAGb1B,aAAwB,IAAIsN,EAChB,QACC,GACC,OACE,SACE7F,EAASO,IACV,EACG,IAAI,KACpBpH,EAASM,QACTN,EAASO,aACTP,EAASI,SACTJ,EAASK,cACTL,EAASc,SAGb1B,aAAwB,IAAIsN,EAChB,QACC,GACC,OACE,SACE7F,EAASiB,IACV,EACG,IAAI,KACpB9H,EAASM,QACTN,EAASO,aACTP,EAASI,SACTJ,EAASK,cACTL,EAASc,SAGb1B,aAAwB,IAAIsN,EAChB,QACC,GACC,eACE,SACE7F,EAASkB,IACV,EACG,IAAI,KACpB/H,EAASU,cACTV,EAASW,mBACTX,EAASM,QACTN,EAASO,aACTP,EAASI,SACTJ,EAASK,cACTL,EAASc,SAGb1B,aAAwB,IAAIsN,EAChB,QACC,GACC,OACE,SACE7F,EAASkB,IACV,EACG,IAAI,KACpB/H,EAASM,QACTN,EAASO,aACTP,EAASI,SACTJ,EAASK,cACTL,EAASc,SAGb1B,aAAwB,IAAIsN,EAChB,QACC,IACC,OACE,SACE7F,EAASoB,IACV,EACG,IAAI,KACpBjI,EAASM,QACTN,EAASO,aACTP,EAASI,SACTJ,EAASK,cACTL,EAASc,SAGb1B,aAAwB,IAAIsN,EAChB,QACC,IACC,OACE,SACE7F,EAASE,IACV,EACG,IAAI,KACpB/G,EAASM,QACTN,EAASO,aACTP,EAASI,SACTJ,EAASK,cACTL,EAASc,SAGb1B,aAAwB,IAAIsN,EAChB,QACC,IACC,OACE,SACE7F,EAASyB,IACV,EACG,IAAI,KACpBtI,EAASM,QACTN,EAASO,aACTP,EAASI,SACTJ,EAASK,cACTL,EAASc,SAGb1B,aAAwB,IAAIsN,EAChB,QACC,IACC,OACE,SACE7F,EAASsB,IACV,EACG,IAAI,KACpBnI,EAASM,QACTN,EAASO,aACTP,EAASI,SACTJ,EAASK,cACTL,EAASc,SAGb1B,aAAwB,IAAIsN,EAChB,QACC,IACC,OACE,SACE7F,EAASG,IACV,EACG,IAAI,KACpBhH,EAASM,QACTN,EAASO,aACTP,EAASI,SACTJ,EAASK,cACTL,EAASc,SAGb1B,aAAwB,IAAIsN,EAChB,QACC,IACC,OACE,SACE7F,EAASqB,IACV,EACG,IAAI,KACpBlI,EAASM,QACTN,EAASO,aACTP,EAASI,SACTJ,EAASK,cACTL,EAASc,SAGb1B,aAAwB,IAAIsN,EAChB,QACC,IACC,OACE,QACE7F,EAASK,IACV,EACG,IAAI,KACpBlH,EAASM,QACTN,EAASO,aACTP,EAASI,SACTJ,EAASK,cACTL,EAASc,SAGb1B,aAAwB,IAAIsN,EAChB,QACC,IACC,OACE,SACE7F,EAASe,IACV,EACG,IAAI,KACpB5H,EAASM,QACTN,EAASO,aACTP,EAASI,SACTJ,EAASK,cACTL,EAASc,SAGb1B,aAAwB,IAAIsN,EAChB,QACC,IACC,gBACE,SACE7F,EAASU,IACV,EACG,IAAI,KACpBvH,EAASM,QACTN,EAASO,aACTP,EAASI,SACTJ,EAASK,cACTL,EAASc,SAGb1B,aAAwB,IAAIsN,EAChB,QACC,IACC,OACE,SACE7F,EAASgB,IACV,EACG,IAAI,KACpB7H,EAASI,SACTJ,EAASK,cACTL,EAASM,QACTN,EAASO,aACTP,EAASc,SAGb1B,aAAwB,IAAIsN,EAChB,QACC,IACC,OACE,SACE7F,EAASgB,IACV,EACG,IAAI,KACpB7H,EAASI,SACTJ,EAASK,cACTL,EAASM,QACTN,EAASO,aACTP,EAASc,SAGb1B,aAAwB,IAAIsN,EAChB,QACC,IACC,OACE,SACE7F,EAASY,IACV,EACG,IAAI,KACpBzH,EAASM,QACTN,EAASO,aACTP,EAASI,SACTJ,EAASK,cACTL,EAASc,SAGb1B,eAA0B,IAAIsN,EAClB,UACC,IACC,SACE,SACE7F,EAASwB,IACV,EACG,IAAI,KACpBrI,EAASM,QACTN,EAASO,aACTP,EAASI,SACTJ,EAASK,cACTL,EAASc,SAGb1B,eAA0B,IAAIsN,EAClB,UACC,IACC,SACE,UACE7F,EAASwB,IACV,EACG,IAAI,KACpBrI,EAASM,QACTN,EAASO,aACTP,EAASI,SACTJ,EAASK,cACTL,EAASc,SAGb1B,iBAA4B,IAAIsN,EACpB,YACC,GACC,SACE,SACE7F,EAASM,IACV,EACG,IAAI,KACpBnH,EAASI,SACTJ,EAASK,cACTL,EAASM,QACTN,EAASO,aACTP,EAASc,SAGb1B,wBAAmC,IAAIsN,EAC3B,mBACC,GACC,kBACE,gBACE7F,EAASM,IACV,EACG,IAAI,KAAKnH,EAASc,SAEtC1B,iBAA4B,IAAIsN,EACpB,YACC,IACC,SACE,SACE7F,EAASM,IACV,EACG,IAAI,KACpBnH,EAASI,SACTJ,EAASK,cACTL,EAASM,QACTN,EAASO,aACTP,EAASc,SAGb1B,iBAA4B,IAAIsN,EACpB,YACC,IACC,SACE,SACE7F,EAASM,IACV,EACG,IAAI,KACpBnH,EAASI,SACTJ,EAASK,cACTL,EAASM,QACTN,EAASO,aACTP,EAASc,SAGb1B,aAAwB,IAAIsN,EAChB,QACC,IACC,aACE,SACE7F,EAASC,IACV,EACG,IAAI,KACpB9G,EAASI,SACTJ,EAASK,cACTL,EAASM,QACTN,EAASO,aACTP,EAASc,SAGb1B,iBAA4B,IAAIsN,EACpB,YACC,IACC,aACE,SACE7F,EAASC,IACV,EACG,IAAI,KACpB9G,EAASI,SACTJ,EAASK,cACTL,EAASM,QACTN,EAASO,aACTP,EAASc,SAGb1B,oBAA+B,IAAIsN,EACvB,eACC,IACC,iCACE,UACE7F,EAASQ,IACV,EACG,IAAI,KACpBrH,EAASI,SACTJ,EAASK,cACTL,EAASM,QACTN,EAASO,aACTP,EAASc,SAGb1B,kBAA6B,IAAIsN,EACrB,aACC,IACC,cACE,cACE7F,EAASU,IACV,EACG,IAAI,KACpBvH,EAASM,QACTN,EAASO,aACTP,EAASI,SACTJ,EAASK,cACTL,EAASc,SAGb1B,aAAwB,IAAIsN,EAChB,QACC,IACC,qCACE,UACE7F,EAASQ,IACV,EACG,IAAI,KACpBrH,EAASI,SACTJ,EAASK,cACTL,EAASM,QACTN,EAASO,aACTP,EAASc,SAGb1B,iBAA4B,IAAIsN,EACpB,YACC,IACC,SACE,YACE7F,EAASM,IACV,EACG,IAAI,KACpBnH,EAASI,SACTJ,EAASK,cACTL,EAASM,QACTN,EAASO,aACTP,EAASc,SAGb1B,gBAA2B,IAAIsN,EACnB,WACC,IACC,QACE,QACE7F,EAASM,IACV,EACG,IAAI,KACpBnH,EAASI,SACTJ,EAASK,cACTL,EAASM,QACTN,EAASO,aACTP,EAASc,SAGb1B,uBAAkC,IAAIsN,EAC1B,kBACC,IACC,iBACE,eACE7F,EAASM,IACV,EACG,IAAI,KAAKnH,EAASc,SAEtC1B,yBAAoC,IAAIsN,EAC5B,oBACC,IACC,iBACE,iBACE7F,EAASM,IACV,EACG,IAAI,KACpBnH,EAASc,OACTd,EAASI,SACTJ,EAASK,cACTL,EAASM,QACTN,EAASO,eAGbnB,iBAA4B,IAAIsN,EACpB,YACC,IACC,SACE,SACE7F,EAASM,IACV,EACG,IAAI,KAAKnH,EAASc,SAEtC1B,aAAwB,IAAIsN,EAChB,QACC,IACC,OACE,SACE7F,EAASO,IACV,EACG,IAAI,KACpBpH,EAASM,QACTN,EAASO,aACTP,EAASI,SACTJ,EAASK,cACTL,EAASc,SAGb1B,eAA0B,IAAIsN,EAClB,UACC,IACC,OACE,OACE7F,EAASiB,IACV,EACG,IAAI,KACpB9H,EAASM,QACTN,EAASO,aACTP,EAASI,SACTJ,EAASK,cACTL,EAASc,SAGb1B,mBAA8B,IAAIsN,EACtB,cACC,IACC,WACE,cACE7F,EAASM,IACV,EACG,IAAI,KACpBnH,EAASI,SACTJ,EAASK,cACTL,EAASM,QACTN,EAASO,aACTP,EAASc,SAGb1B,aAAwB,IAAIsN,EAChB,QACC,IACC,gBACE,QACE7F,EAASuB,IACV,EACG,IAAI,KACpBpI,EAASI,SACTJ,EAASK,cACTL,EAASM,QACTN,EAASO,aACTP,EAASc,SAGb1B,cAAyB,IAAIsN,EACjB,YACC,IACC,kBACE,YACE7F,EAASuB,IACV,EACG,IAAI,KACpBpI,EAASI,SACTJ,EAASK,cACTL,EAASM,QACTN,EAASO,aACTP,EAASc,SAGb1B,cAAyB,IAAIsN,EACjB,YACC,IACC,qBACE,YACE7F,EAASuB,IACV,EACG,IAAI,KACpBpI,EAASI,SACTJ,EAASK,cACTL,EAASM,QACTN,EAASO,aACTP,EAASc,SAGb1B,gBAA2B,IAAIsN,EACnB,cACC,IACC,QACE,QACE7F,EAASe,IACV,EACG,IAAI,KACpB5H,EAASM,QACTN,EAASO,aACTP,EAASI,SACTJ,EAASK,cACTL,EAASc,SAGb1B,gBAA2B,IAAIsN,EACnB,cACC,IACC,QACE,QACE7F,EAASe,IACV,EACG,IAAI,KACpB5H,EAASM,QACTN,EAASO,aACTP,EAASI,SACTJ,EAASK,cACTL,EAASc,SAGb1B,aAAwB,IAAIsN,EAChB,QACC,IACC,OACE,SACE7F,EAASmB,IACV,EACG,IAAI,KACpBhI,EAASM,QACTN,EAASO,aACTP,EAASI,SACTJ,EAASK,cACTL,EAASc,SAGb1B,kBAA6B,IAAIsN,EACrB,aACC,IACC,UACE,UACE7F,EAASM,IACV,EACG,IAAI,KACpBnH,EAASI,SACTJ,EAASK,cACTL,EAASM,QACTN,EAASO,aACTP,EAASc,SAGb1B,yBAAoC,IAAIsN,EAC5B,oBACC,IACC,mBACE,iBACE7F,EAASM,IACV,EACG,IAAI,KAAKnH,EAASc,SAEtC1B,gCAA2C,IAAIsN,EACnC,2BACC,IACC,iCACE,2BACE7F,EAASM,IACV,EACG,IAAI,KAAKnH,EAASc,SAGtC1B,WAAsB,IAAI,KACxBsN,EAAOM,MACPN,EAAOO,UACPP,EAAOQ,eACPR,EAAOS,WACPT,EAAOU,mBACPV,EAAOW,wBACPX,EAAOY,kBACPZ,EAAOa,uBACPb,EAAOc,qBACPd,EAAOe,WACPf,EAAOgB,UACPhB,EAAOiB,iBACPjB,EAAOkB,SACPlB,EAAOmB,gBACPnB,EAAOoB,kBACPpB,EAAOqB,yBACPrB,EAAOsB,UACPtB,EAAOuB,UACPvB,EAAOwB,UACPxB,EAAOyB,UACPzB,EAAO0B,WACP1B,EAAO2B,kBACP3B,EAAO4B,YACP5B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","sources":["webpack://keybr.com/./packages/keybr-keyboard/lib/geometry/mod.ts","webpack://keybr.com/./packages/keybr-keyboard/lib/geometry.ts","webpack://keybr.com/./packages/keybr-keyboard/lib/geometry/ansi_101.ts","webpack://keybr.com/./packages/keybr-keyboard/lib/geometry/extra.ts","webpack://keybr.com/./packages/keybr-keyboard/lib/geometry/ansi_101_full.ts","webpack://keybr.com/./packages/keybr-keyboard/lib/geometry/brazilian_104.ts","webpack://keybr.com/./packages/keybr-keyboard/lib/geometry/brazilian_104_full.ts","webpack://keybr.com/./packages/keybr-keyboard/lib/geometry/iso_102.ts","webpack://keybr.com/./packages/keybr-keyboard/lib/geometry/iso_102_full.ts","webpack://keybr.com/./packages/keybr-keyboard/lib/geometry/japanese_106.ts","webpack://keybr.com/./packages/keybr-keyboard/lib/geometry/japanese_106_full.ts","webpack://keybr.com/./packages/keybr-keyboard/lib/geometry/korean_103.ts","webpack://keybr.com/./packages/keybr-keyboard/lib/geometry/korean_103_full.ts","webpack://keybr.com/./packages/keybr-keyboard/lib/keymodifier.ts","webpack://keybr.com/./packages/keybr-keyboard/lib/keycharacters.ts","webpack://keybr.com/./packages/keybr-keyboard/lib/keycombo.ts","webpack://keybr.com/./packages/keybr-keyboard/lib/keyshape.ts","webpack://keybr.com/./packages/keybr-keyboard/lib/language.ts","webpack://keybr.com/./packages/keybr-keyboard/lib/keyboard.ts","webpack://keybr.com/./packages/keybr-keyboard/lib/mod.ts","webpack://keybr.com/./packages/keybr-keyboard/lib/layout.ts","webpack://keybr.com/./packages/keybr-keyboard/lib/settings.ts","webpack://keybr.com/./packages/keybr-keyboard/lib/load.ts","webpack://keybr.com/./packages/keybr-keyboard/lib/layout/ar_sa.ts","webpack://keybr.com/./packages/keybr-keyboard/lib/layout/ar_sa_102.ts","webpack://keybr.com/./packages/keybr-keyboard/lib/layout/be_by.ts","webpack://keybr.com/./packages/keybr-keyboard/lib/layout/cs_cz.ts","webpack://keybr.com/./packages/keybr-keyboard/lib/layout/de_bone.ts","webpack://keybr.com/./packages/keybr-keyboard/lib/layout/de_ch.ts","webpack://keybr.com/./packages/keybr-keyboard/lib/layout/de_cmos.ts","webpack://keybr.com/./packages/keybr-keyboard/lib/layout/de_de.ts","webpack://keybr.com/./packages/keybr-keyboard/lib/layout/de_mine.ts","webpack://keybr.com/./packages/keybr-keyboard/lib/layout/de_neo_2.ts","webpack://keybr.com/./packages/keybr-keyboard/lib/layout/de_noted.ts","webpack://keybr.com/./packages/keybr-keyboard/lib/layout/el_gr.ts","webpack://keybr.com/./packages/keybr-keyboard/lib/layout/en_canary.ts","webpack://keybr.com/./packages/keybr-keyboard/lib/layout/en_canary_matrix.ts","webpack://keybr.com/./packages/keybr-keyboard/lib/layout/en_colemak.ts","webpack://keybr.com/./packages/keybr-keyboard/lib/layout/en_colemak_dh_ansi.ts","webpack://keybr.com/./packages/keybr-keyboard/lib/layout/en_colemak_dh_ansi_wide.ts","webpack://keybr.com/./packages/keybr-keyboard/lib/layout/en_colemak_dh_iso.ts","webpack://keybr.com/./packages/keybr-keyboard/lib/layout/en_colemak_dh_iso_wide.ts","webpack://keybr.com/./packages/keybr-keyboard/lib/layout/en_colemak_dh_matrix.ts","webpack://keybr.com/./packages/keybr-keyboard/lib/layout/en_dvorak.ts","webpack://keybr.com/./packages/keybr-keyboard/lib/layout/en_dvorak_prog.ts","webpack://keybr.com/./packages/keybr-keyboard/lib/layout/en_engram.ts","webpack://keybr.com/./packages/keybr-keyboard/lib/layout/en_gallium.ts","webpack://keybr.com/./packages/keybr-keyboard/lib/layout/en_gallium_matrix.ts","webpack://keybr.com/./packages/keybr-keyboard/lib/layout/en_graphite.ts","webpack://keybr.com/./packages/keybr-keyboard/lib/layout/en_halmak.ts","webpack://keybr.com/./packages/keybr-keyboard/lib/layout/en_hands_down_neu.ts","webpack://keybr.com/./packages/keybr-keyboard/lib/layout/en_hands_down_promethium.ts","webpack://keybr.com/./packages/keybr-keyboard/lib/layout/ja_jp_jis.ts","webpack://keybr.com/./packages/keybr-keyboard/lib/layout/en_nerps.ts","webpack://keybr.com/./packages/keybr-keyboard/lib/layout/en_nerps_matrix.ts","webpack://keybr.com/./packages/keybr-keyboard/lib/layout/en_norman.ts","webpack://keybr.com/./packages/keybr-keyboard/lib/layout/en_sturdy.ts","webpack://keybr.com/./packages/keybr-keyboard/lib/layout/en_uk.ts","webpack://keybr.com/./packages/keybr-keyboard/lib/layout/en_us.ts","webpack://keybr.com/./packages/keybr-keyboard/lib/layout/en_workman.ts","webpack://keybr.com/./packages/keybr-keyboard/lib/layout/es_es.ts","webpack://keybr.com/./packages/keybr-keyboard/lib/layout/es_mx.ts","webpack://keybr.com/./packages/keybr-keyboard/lib/layout/fa_ir.ts","webpack://keybr.com/./packages/keybr-keyboard/lib/layout/fa_ir_legacy.ts","webpack://keybr.com/./packages/keybr-keyboard/lib/layout/fr_bepo.ts","webpack://keybr.com/./packages/keybr-keyboard/lib/layout/fr_ca.ts","webpack://keybr.com/./packages/keybr-keyboard/lib/layout/fr_ch.ts","webpack://keybr.com/./packages/keybr-keyboard/lib/layout/fr_erglace.ts","webpack://keybr.com/./packages/keybr-keyboard/lib/layout/fr_ergo_l.ts","webpack://keybr.com/./packages/keybr-keyboard/lib/layout/fr_fr.ts","webpack://keybr.com/./packages/keybr-keyboard/lib/layout/fr_optimot_ergo.ts","webpack://keybr.com/./packages/keybr-keyboard/lib/layout/he_il.ts","webpack://keybr.com/./packages/keybr-keyboard/lib/layout/he_il_arkn.ts","webpack://keybr.com/./packages/keybr-keyboard/lib/layout/hu_hu.ts","webpack://keybr.com/./packages/keybr-keyboard/lib/layout/it_it.ts","webpack://keybr.com/./packages/keybr-keyboard/lib/layout/lt_lt.ts","webpack://keybr.com/./packages/keybr-keyboard/lib/layout/nb_kvikk.ts","webpack://keybr.com/./packages/keybr-keyboard/lib/layout/nb_no.ts","webpack://keybr.com/./packages/keybr-keyboard/lib/layout/nb_skarp.ts","webpack://keybr.com/./packages/keybr-keyboard/lib/layout/nl_be.ts","webpack://keybr.com/./packages/keybr-keyboard/lib/layout/nl_nl.ts","webpack://keybr.com/./packages/keybr-keyboard/lib/layout/pl_fwyr.ts","webpack://keybr.com/./packages/keybr-keyboard/lib/layout/pl_pl.ts","webpack://keybr.com/./packages/keybr-keyboard/lib/layout/pt_br.ts","webpack://keybr.com/./packages/keybr-keyboard/lib/layout/pt_pt.ts","webpack://keybr.com/./packages/keybr-keyboard/lib/layout/ro_ro.ts","webpack://keybr.com/./packages/keybr-keyboard/lib/layout/ru_ru.ts","webpack://keybr.com/./packages/keybr-keyboard/lib/layout/sl_si.ts","webpack://keybr.com/./packages/keybr-keyboard/lib/layout/sv_se.ts","webpack://keybr.com/./packages/keybr-keyboard/lib/layout/th_th_man.ts","webpack://keybr.com/./packages/keybr-keyboard/lib/layout/th_th_pat.ts","webpack://keybr.com/./packages/keybr-keyboard/lib/layout/th_th.ts","webpack://keybr.com/./packages/keybr-keyboard/lib/layout/tr_tr_f.ts","webpack://keybr.com/./packages/keybr-keyboard/lib/layout/tr_tr_q.ts","webpack://keybr.com/./packages/keybr-keyboard/lib/layout/uk_ua.ts","webpack://keybr.com/./packages/keybr-keyboard/lib/geometry/matrix.ts","webpack://keybr.com/./packages/keybr-keyboard/lib/context.tsx","webpack://keybr.com/./packages/keybr-keyboard/lib/filter.ts","webpack://keybr.com/./packages/keybr-keyboard/lib/keycode.ts","webpack://keybr.com/./packages/keybr-keyboard/lib/ngram.ts","webpack://keybr.com/./packages/keybr-keyboard/lib/stats.ts","webpack://keybr.com/./packages/keybr-keyboard/lib/use-formatted-names.ts"],"sourcesContent":["import { type KeyId, type ZoneId } from \"../types.ts\";\n\nexport type ZoneModDict = Record<KeyId, readonly ZoneId[]>;\n\nexport const STANDARD_MOD: ZoneModDict = {};\n\nexport const ANGLE_MOD: ZoneModDict = {\n  Backquote: [\"pinky\", \"left\", \"digit\"],\n  Digit1: [\"pinky\", \"left\", \"digit\"],\n  Digit2: [\"ring\", \"left\", \"digit\"],\n  Digit3: [\"middle\", \"left\", \"digit\"],\n  Digit4: [\"middle\", \"left\", \"digit\"],\n  Digit5: [\"leftIndex\", \"left\", \"digit\"],\n  Digit6: [\"leftIndex\", \"left\", \"digit\"],\n  Digit7: [\"rightIndex\", \"right\", \"digit\"],\n  Digit8: [\"rightIndex\", \"right\", \"digit\"],\n  Digit9: [\"middle\", \"right\", \"digit\"],\n  Digit0: [\"ring\", \"right\", \"digit\"],\n  Minus: [\"pinky\", \"right\", \"digit\"],\n  Equal: [\"pinky\", \"right\", \"digit\"],\n  Backspace: [\"pinky\", \"right\", \"digit\"],\n  Tab: [\"pinky\", \"left\", \"top\"],\n  KeyQ: [\"pinky\", \"left\", \"top\"],\n  KeyW: [\"ring\", \"left\", \"top\"],\n  KeyE: [\"middle\", \"left\", \"top\"],\n  KeyR: [\"leftIndex\", \"left\", \"top\"],\n  KeyT: [\"leftIndex\", \"left\", \"top\"],\n  KeyY: [\"rightIndex\", \"right\", \"top\"],\n  KeyU: [\"rightIndex\", \"right\", \"top\"],\n  KeyI: [\"middle\", \"right\", \"top\"],\n  KeyO: [\"ring\", \"right\", \"top\"],\n  KeyP: [\"pinky\", \"right\", \"top\"],\n  BracketLeft: [\"pinky\", \"right\", \"top\"],\n  BracketRight: [\"pinky\", \"right\", \"top\"],\n  Backslash: [\"pinky\", \"right\", \"top\"],\n  CapsLock: [\"pinky\", \"left\", \"home\"],\n  KeyA: [\"pinky\", \"left\", \"home\"],\n  KeyS: [\"ring\", \"left\", \"home\"],\n  KeyD: [\"middle\", \"left\", \"home\"],\n  KeyF: [\"leftIndex\", \"left\", \"home\"],\n  KeyG: [\"leftIndex\", \"left\", \"home\"],\n  KeyH: [\"rightIndex\", \"right\", \"home\"],\n  KeyJ: [\"rightIndex\", \"right\", \"home\"],\n  KeyK: [\"middle\", \"right\", \"home\"],\n  KeyL: [\"ring\", \"right\", \"home\"],\n  Semicolon: [\"pinky\", \"right\", \"home\"],\n  Quote: [\"pinky\", \"right\", \"home\"],\n  Enter: [\"pinky\", \"right\", \"home\"],\n  ShiftLeft: [\"pinky\", \"left\", \"bottom\"],\n  KeyZ: [\"ring\", \"left\", \"bottom\"],\n  KeyX: [\"middle\", \"left\", \"bottom\"],\n  KeyC: [\"leftIndex\", \"left\", \"bottom\"],\n  KeyV: [\"leftIndex\", \"left\", \"bottom\"],\n  KeyB: [\"leftIndex\", \"left\", \"bottom\"],\n  KeyN: [\"rightIndex\", \"right\", \"bottom\"],\n  KeyM: [\"rightIndex\", \"right\", \"bottom\"],\n  Comma: [\"middle\", \"right\", \"bottom\"],\n  Period: [\"ring\", \"right\", \"bottom\"],\n  Slash: [\"pinky\", \"right\", \"bottom\"],\n  ShiftRight: [\"pinky\", \"right\", \"bottom\"],\n  ControlLeft: [\"pinky\", \"left\", \"bottom\"],\n  AltLeft: [\"pinky\", \"left\", \"bottom\"],\n  Space: [\"thumb\", \"right\", \"bottom\"],\n  AltRight: [\"pinky\", \"right\", \"bottom\"],\n  ControlRight: [\"pinky\", \"right\", \"bottom\"],\n};\n\nexport const ANGLE_WIDE_MOD: ZoneModDict = {\n  Backquote: [\"pinky\", \"left\", \"digit\"],\n  Digit1: [\"pinky\", \"left\", \"digit\"],\n  Digit2: [\"ring\", \"left\", \"digit\"],\n  Digit3: [\"middle\", \"left\", \"digit\"],\n  Digit4: [\"middle\", \"left\", \"digit\"],\n  Digit5: [\"leftIndex\", \"left\", \"digit\"],\n  Digit6: [\"leftIndex\", \"left\", \"digit\"],\n  Digit7: [\"rightIndex\", \"right\", \"digit\"],\n  Digit8: [\"rightIndex\", \"right\", \"digit\"],\n  Digit9: [\"rightIndex\", \"right\", \"digit\"],\n  Digit0: [\"middle\", \"right\", \"digit\"],\n  Minus: [\"ring\", \"right\", \"digit\"],\n  Equal: [\"pinky\", \"right\", \"digit\"],\n  Backspace: [\"pinky\", \"right\", \"digit\"],\n  Tab: [\"pinky\", \"left\", \"top\"],\n  KeyQ: [\"pinky\", \"left\", \"top\"],\n  KeyW: [\"ring\", \"left\", \"top\"],\n  KeyE: [\"middle\", \"left\", \"top\"],\n  KeyR: [\"leftIndex\", \"left\", \"top\"],\n  KeyT: [\"leftIndex\", \"left\", \"top\"],\n  KeyY: [\"rightIndex\", \"right\", \"top\"],\n  KeyU: [\"rightIndex\", \"right\", \"top\"],\n  KeyI: [\"rightIndex\", \"right\", \"top\"],\n  KeyO: [\"middle\", \"right\", \"top\"],\n  KeyP: [\"ring\", \"right\", \"top\"],\n  BracketLeft: [\"pinky\", \"right\", \"top\"],\n  BracketRight: [\"pinky\", \"right\", \"top\"],\n  Backslash: [\"pinky\", \"right\", \"top\"],\n  CapsLock: [\"pinky\", \"left\", \"home\"],\n  KeyA: [\"pinky\", \"left\", \"home\"],\n  KeyS: [\"ring\", \"left\", \"home\"],\n  KeyD: [\"middle\", \"left\", \"home\"],\n  KeyF: [\"leftIndex\", \"left\", \"home\"],\n  KeyG: [\"leftIndex\", \"left\", \"home\"],\n  KeyH: [\"rightIndex\", \"right\", \"home\"],\n  KeyJ: [\"rightIndex\", \"right\", \"home\"],\n  KeyK: [\"rightIndex\", \"right\", \"home\"],\n  KeyL: [\"middle\", \"right\", \"home\"],\n  Semicolon: [\"ring\", \"right\", \"home\"],\n  Quote: [\"pinky\", \"right\", \"home\"],\n  Enter: [\"pinky\", \"right\", \"home\"],\n  ShiftLeft: [\"pinky\", \"left\", \"bottom\"],\n  KeyZ: [\"ring\", \"left\", \"bottom\"],\n  KeyX: [\"middle\", \"left\", \"bottom\"],\n  KeyC: [\"leftIndex\", \"left\", \"bottom\"],\n  KeyV: [\"leftIndex\", \"left\", \"bottom\"],\n  KeyB: [\"leftIndex\", \"left\", \"bottom\"],\n  KeyN: [\"rightIndex\", \"right\", \"bottom\"],\n  KeyM: [\"rightIndex\", \"right\", \"bottom\"],\n  Comma: [\"rightIndex\", \"right\", \"bottom\"],\n  Period: [\"middle\", \"right\", \"bottom\"],\n  Slash: [\"ring\", \"right\", \"bottom\"],\n  ShiftRight: [\"pinky\", \"right\", \"bottom\"],\n  ControlLeft: [\"pinky\", \"left\", \"bottom\"],\n  AltLeft: [\"pinky\", \"left\", \"bottom\"],\n  Space: [\"thumb\", \"right\", \"bottom\"],\n  AltRight: [\"pinky\", \"right\", \"bottom\"],\n  ControlRight: [\"pinky\", \"right\", \"bottom\"],\n};\n\nexport const SYMMETRIC_MOD: ZoneModDict = {\n  Backquote: [\"pinky\", \"left\", \"digit\"],\n  Digit1: [\"pinky\", \"left\", \"digit\"],\n  Digit2: [\"ring\", \"left\", \"digit\"],\n  Digit3: [\"middle\", \"left\", \"digit\"],\n  Digit4: [\"middle\", \"left\", \"digit\"],\n  Digit5: [\"leftIndex\", \"left\", \"digit\"],\n  Digit6: [\"leftIndex\", \"right\", \"digit\"],\n  Digit7: [\"rightIndex\", \"right\", \"digit\"],\n  Digit8: [\"middle\", \"right\", \"digit\"],\n  Digit9: [\"middle\", \"right\", \"digit\"],\n  Digit0: [\"ring\", \"right\", \"digit\"],\n  Minus: [\"pinky\", \"right\", \"digit\"],\n  Equal: [\"pinky\", \"right\", \"digit\"],\n  Backspace: [\"pinky\", \"right\", \"digit\"],\n  Tab: [\"pinky\", \"left\", \"top\"],\n  KeyQ: [\"pinky\", \"left\", \"top\"],\n  KeyW: [\"ring\", \"left\", \"top\"],\n  KeyE: [\"middle\", \"left\", \"top\"],\n  KeyR: [\"leftIndex\", \"left\", \"top\"],\n  KeyT: [\"leftIndex\", \"left\", \"top\"],\n  KeyY: [\"rightIndex\", \"right\", \"top\"],\n  KeyU: [\"rightIndex\", \"right\", \"top\"],\n  KeyI: [\"middle\", \"right\", \"top\"],\n  KeyO: [\"ring\", \"right\", \"top\"],\n  KeyP: [\"pinky\", \"right\", \"top\"],\n  BracketLeft: [\"pinky\", \"right\", \"top\"],\n  BracketRight: [\"pinky\", \"right\", \"top\"],\n  Enter: [\"pinky\", \"right\", \"top\"],\n  CapsLock: [\"pinky\", \"left\", \"home\"],\n  KeyA: [\"pinky\", \"left\", \"home\"],\n  KeyS: [\"ring\", \"left\", \"home\"],\n  KeyD: [\"middle\", \"left\", \"home\"],\n  KeyF: [\"leftIndex\", \"left\", \"home\"],\n  KeyG: [\"leftIndex\", \"left\", \"home\"],\n  KeyH: [\"rightIndex\", \"right\", \"home\"],\n  KeyJ: [\"rightIndex\", \"right\", \"home\"],\n  KeyK: [\"middle\", \"right\", \"home\"],\n  KeyL: [\"ring\", \"right\", \"home\"],\n  Semicolon: [\"pinky\", \"right\", \"home\"],\n  Quote: [\"pinky\", \"right\", \"home\"],\n  Backslash: [\"pinky\", \"right\", \"home\"],\n  ShiftLeft: [\"pinky\", \"left\", \"bottom\"],\n  IntlBackslash: [\"pinky\", \"left\", \"bottom\"],\n  KeyZ: [\"ring\", \"left\", \"bottom\"],\n  KeyX: [\"middle\", \"left\", \"bottom\"],\n  KeyC: [\"leftIndex\", \"left\", \"bottom\"],\n  KeyV: [\"leftIndex\", \"left\", \"bottom\"],\n  KeyB: [\"leftIndex\", \"left\", \"bottom\"],\n  KeyN: [\"rightIndex\", \"right\", \"bottom\"],\n  KeyM: [\"rightIndex\", \"right\", \"bottom\"],\n  Comma: [\"middle\", \"right\", \"bottom\"],\n  Period: [\"ring\", \"right\", \"bottom\"],\n  Slash: [\"pinky\", \"right\", \"bottom\"],\n  ShiftRight: [\"pinky\", \"right\", \"bottom\"],\n  ControlLeft: [\"pinky\", \"left\", \"bottom\"],\n  AltLeft: [\"pinky\", \"left\", \"bottom\"],\n  Space: [\"thumb\", \"right\", \"bottom\"],\n  AltRight: [\"pinky\", \"right\", \"bottom\"],\n  ControlRight: [\"pinky\", \"right\", \"bottom\"],\n};\n","import { Enum, type EnumItem } from \"@keybr/lang\";\nimport {\n  STANDARD_MOD,\n  SYMMETRIC_MOD,\n  type ZoneModDict,\n} from \"./geometry/mod.ts\";\n\nexport class ZoneMod implements EnumItem {\n  static readonly STANDARD = new ZoneMod(\n    \"standard\", //\n    \"Standard\",\n    STANDARD_MOD,\n  );\n  static readonly SYMMETRIC = new ZoneMod(\n    \"symmetric\",\n    \"Symmetric\",\n    SYMMETRIC_MOD,\n  );\n\n  static readonly ALL = new Enum<ZoneMod>(\n    ZoneMod.STANDARD, //\n    ZoneMod.SYMMETRIC,\n  );\n\n  static first(items: Iterable<ZoneMod>): ZoneMod {\n    return items[Symbol.iterator]().next().value ?? ZoneMod.STANDARD;\n  }\n\n  private constructor(\n    readonly id: string,\n    readonly name: string,\n    readonly mod: ZoneModDict,\n  ) {}\n\n  toString() {\n    return this.id;\n  }\n\n  toJSON() {\n    return this.id;\n  }\n}\n\nexport class Geometry implements EnumItem {\n  static readonly ANSI_101 = new Geometry(\n    \"ansi101\", //\n    \"ANSI 101\",\n    \"staggered\",\n    ZoneMod.ALL,\n  );\n  static readonly ANSI_101_FULL = new Geometry(\n    \"ansi101full\", //\n    \"ANSI 101 (Full)\",\n    \"staggered\",\n    ZoneMod.ALL,\n  );\n  static readonly ISO_102 = new Geometry(\n    \"iso102\", //\n    \"ISO 102\",\n    \"staggered\",\n    ZoneMod.ALL,\n  );\n  static readonly ISO_102_FULL = new Geometry(\n    \"iso102full\", //\n    \"ISO 102 (Full)\",\n    \"staggered\",\n    ZoneMod.ALL,\n  );\n  static readonly KOREAN_103 = new Geometry(\n    \"kr103\", //\n    \"Korean 103\",\n    \"staggered\",\n    ZoneMod.ALL,\n  );\n  static readonly KOREAN_103_FULL = new Geometry(\n    \"kr103full\", //\n    \"Korean 103 (Full)\",\n    \"staggered\",\n    ZoneMod.ALL,\n  );\n  static readonly BRAZILIAN_104 = new Geometry(\n    \"br104\", //\n    \"Brazilian 104\",\n    \"staggered\",\n    ZoneMod.ALL,\n  );\n  static readonly BRAZILIAN_104_FULL = new Geometry(\n    \"br104full\", //\n    \"Brazilian 104 (Full)\",\n    \"staggered\",\n    ZoneMod.ALL,\n  );\n  static readonly JAPANESE_106 = new Geometry(\n    \"jp106\", //\n    \"Japanese 106\",\n    \"staggered\",\n    ZoneMod.ALL,\n  );\n  static readonly JAPANESE_106_FULL = new Geometry(\n    \"jp106full\", //\n    \"Japanese 106 (Full)\",\n    \"staggered\",\n    ZoneMod.ALL,\n  );\n  static readonly MATRIX = new Geometry(\n    \"matrix\", //\n    \"Matrix/Ergonomic\",\n    \"matrix\",\n    new Enum(),\n  );\n\n  static readonly ALL = new Enum<Geometry>(\n    Geometry.ANSI_101,\n    Geometry.ANSI_101_FULL,\n    Geometry.ISO_102,\n    Geometry.ISO_102_FULL,\n    Geometry.KOREAN_103,\n    Geometry.KOREAN_103_FULL,\n    Geometry.BRAZILIAN_104,\n    Geometry.BRAZILIAN_104_FULL,\n    Geometry.JAPANESE_106,\n    Geometry.JAPANESE_106_FULL,\n    Geometry.MATRIX,\n  );\n\n  static first(items: Iterable<Geometry>): Geometry {\n    return items[Symbol.iterator]().next().value ?? Geometry.ANSI_101;\n  }\n\n  private constructor(\n    readonly id: string,\n    readonly name: string,\n    readonly form: \"staggered\" | \"matrix\",\n    readonly zones: Enum<ZoneMod>,\n  ) {}\n\n  toString() {\n    return this.id;\n  }\n\n  toJSON() {\n    return this.id;\n  }\n}\n","import { type GeometryDict } from \"../types.ts\";\n\n// See https://www.w3.org/TR/uievents-code/#keyboard-101\nexport const ANSI_101: GeometryDict = {\n  Backquote: {\n    x: 0,\n    y: 0,\n    zones: [\"pinky\", \"left\", \"digit\"],\n  },\n  Digit1: {\n    x: 1,\n    y: 0,\n    zones: [\"pinky\", \"left\", \"digit\"],\n  },\n  Digit2: {\n    x: 2,\n    y: 0,\n    zones: [\"ring\", \"left\", \"digit\"],\n  },\n  Digit3: {\n    x: 3,\n    y: 0,\n    zones: [\"middle\", \"left\", \"digit\"],\n  },\n  Digit4: {\n    x: 4,\n    y: 0,\n    zones: [\"leftIndex\", \"left\", \"digit\"],\n  },\n  Digit5: {\n    x: 5,\n    y: 0,\n    zones: [\"leftIndex\", \"left\", \"digit\"],\n  },\n  Digit6: {\n    x: 6,\n    y: 0,\n    zones: [\"rightIndex\", \"right\", \"digit\"],\n  },\n  Digit7: {\n    x: 7,\n    y: 0,\n    zones: [\"rightIndex\", \"right\", \"digit\"],\n  },\n  Digit8: {\n    x: 8,\n    y: 0,\n    zones: [\"middle\", \"right\", \"digit\"],\n  },\n  Digit9: {\n    x: 9,\n    y: 0,\n    zones: [\"ring\", \"right\", \"digit\"],\n  },\n  Digit0: {\n    x: 10,\n    y: 0,\n    zones: [\"pinky\", \"right\", \"digit\"],\n  },\n  Minus: {\n    x: 11,\n    y: 0,\n    zones: [\"pinky\", \"right\", \"digit\"],\n  },\n  Equal: {\n    x: 12,\n    y: 0,\n    zones: [\"pinky\", \"right\", \"digit\"],\n  },\n  Backspace: {\n    x: 13,\n    y: 0,\n    w: 2,\n    h: 1,\n    labels: [{ text: \"Backspace\" }],\n    zones: [\"pinky\", \"right\", \"digit\"],\n  },\n  Tab: {\n    x: 0,\n    y: 1,\n    w: 1.5,\n    h: 1,\n    labels: [{ text: \"Tab\" }],\n    zones: [\"pinky\", \"left\", \"top\"],\n  },\n  KeyQ: {\n    x: 1.5,\n    y: 1,\n    zones: [\"pinky\", \"left\", \"top\"],\n  },\n  KeyW: {\n    x: 2.5,\n    y: 1,\n    zones: [\"ring\", \"left\", \"top\"],\n  },\n  KeyE: {\n    x: 3.5,\n    y: 1,\n    zones: [\"middle\", \"left\", \"top\"],\n  },\n  KeyR: {\n    x: 4.5,\n    y: 1,\n    zones: [\"leftIndex\", \"left\", \"top\"],\n  },\n  KeyT: {\n    x: 5.5,\n    y: 1,\n    zones: [\"leftIndex\", \"left\", \"top\"],\n  },\n  KeyY: {\n    x: 6.5,\n    y: 1,\n    zones: [\"rightIndex\", \"right\", \"top\"],\n  },\n  KeyU: {\n    x: 7.5,\n    y: 1,\n    zones: [\"rightIndex\", \"right\", \"top\"],\n  },\n  KeyI: {\n    x: 8.5,\n    y: 1,\n    zones: [\"middle\", \"right\", \"top\"],\n  },\n  KeyO: {\n    x: 9.5,\n    y: 1,\n    zones: [\"ring\", \"right\", \"top\"],\n  },\n  KeyP: {\n    x: 10.5,\n    y: 1,\n    zones: [\"pinky\", \"right\", \"top\"],\n  },\n  BracketLeft: {\n    x: 11.5,\n    y: 1,\n    zones: [\"pinky\", \"right\", \"top\"],\n  },\n  BracketRight: {\n    x: 12.5,\n    y: 1,\n    zones: [\"pinky\", \"right\", \"top\"],\n  },\n  Backslash: {\n    x: 13.5,\n    y: 1,\n    w: 1.5,\n    h: 1,\n    zones: [\"pinky\", \"right\", \"top\"],\n  },\n  CapsLock: {\n    x: 0,\n    y: 2,\n    w: 1.75,\n    h: 1,\n    labels: [{ text: \"Caps Lock\" }],\n    zones: [\"pinky\", \"left\", \"home\"],\n  },\n  KeyA: {\n    x: 1.75,\n    y: 2,\n    zones: [\"pinky\", \"left\", \"home\"],\n  },\n  KeyS: {\n    x: 2.75,\n    y: 2,\n    zones: [\"ring\", \"left\", \"home\"],\n  },\n  KeyD: {\n    x: 3.75,\n    y: 2,\n    zones: [\"middle\", \"left\", \"home\"],\n  },\n  KeyF: {\n    x: 4.75,\n    y: 2,\n    zones: [\"leftIndex\", \"left\", \"home\"],\n    homing: true,\n  },\n  KeyG: {\n    x: 5.75,\n    y: 2,\n    zones: [\"leftIndex\", \"left\", \"home\"],\n  },\n  KeyH: {\n    x: 6.75,\n    y: 2,\n    zones: [\"rightIndex\", \"right\", \"home\"],\n  },\n  KeyJ: {\n    x: 7.75,\n    y: 2,\n    zones: [\"rightIndex\", \"right\", \"home\"],\n    homing: true,\n  },\n  KeyK: {\n    x: 8.75,\n    y: 2,\n    zones: [\"middle\", \"right\", \"home\"],\n  },\n  KeyL: {\n    x: 9.75,\n    y: 2,\n    zones: [\"ring\", \"right\", \"home\"],\n  },\n  Semicolon: {\n    x: 10.75,\n    y: 2,\n    zones: [\"pinky\", \"right\", \"home\"],\n  },\n  Quote: {\n    x: 11.75,\n    y: 2,\n    zones: [\"pinky\", \"right\", \"home\"],\n  },\n  Enter: {\n    x: 12.75,\n    y: 2,\n    w: 2.25,\n    h: 1,\n    labels: [{ text: \"Enter\" }],\n    zones: [\"pinky\", \"right\", \"home\"],\n  },\n  ShiftLeft: {\n    x: 0,\n    y: 3,\n    w: 2.25,\n    h: 1,\n    labels: [{ text: \"Shift\" }],\n    zones: [\"pinky\", \"left\", \"bottom\"],\n  },\n  KeyZ: {\n    x: 2.25,\n    y: 3,\n    zones: [\"pinky\", \"left\", \"bottom\"],\n  },\n  KeyX: {\n    x: 3.25,\n    y: 3,\n    zones: [\"ring\", \"left\", \"bottom\"],\n  },\n  KeyC: {\n    x: 4.25,\n    y: 3,\n    zones: [\"middle\", \"left\", \"bottom\"],\n  },\n  KeyV: {\n    x: 5.25,\n    y: 3,\n    zones: [\"leftIndex\", \"left\", \"bottom\"],\n  },\n  KeyB: {\n    x: 6.25,\n    y: 3,\n    zones: [\"leftIndex\", \"left\", \"bottom\"],\n  },\n  KeyN: {\n    x: 7.25,\n    y: 3,\n    zones: [\"rightIndex\", \"right\", \"bottom\"],\n  },\n  KeyM: {\n    x: 8.25,\n    y: 3,\n    zones: [\"rightIndex\", \"right\", \"bottom\"],\n  },\n  Comma: {\n    x: 9.25,\n    y: 3,\n    zones: [\"middle\", \"right\", \"bottom\"],\n  },\n  Period: {\n    x: 10.25,\n    y: 3,\n    zones: [\"ring\", \"right\", \"bottom\"],\n  },\n  Slash: {\n    x: 11.25,\n    y: 3,\n    zones: [\"pinky\", \"right\", \"bottom\"],\n  },\n  ShiftRight: {\n    x: 12.25,\n    y: 3,\n    w: 2.75,\n    h: 1,\n    labels: [{ text: \"Shift\" }],\n    zones: [\"pinky\", \"right\", \"bottom\"],\n  },\n  ControlLeft: {\n    x: 0,\n    y: 4,\n    w: 1.5,\n    h: 1,\n    labels: [{ text: \"Ctrl\" }],\n    zones: [\"pinky\", \"left\", \"bottom\"],\n  },\n  AltLeft: {\n    x: 1.5,\n    y: 4,\n    w: 1.5,\n    h: 1,\n    labels: [{ text: \"Alt\" }],\n    zones: [\"pinky\", \"left\", \"bottom\"],\n  },\n  Space: {\n    x: 3,\n    y: 4,\n    w: 9,\n    h: 1,\n    zones: [\"thumb\", \"right\", \"bottom\"],\n  },\n  AltRight: {\n    x: 12,\n    y: 4,\n    w: 1.5,\n    h: 1,\n    labels: [{ text: \"Alt\" }],\n    zones: [\"pinky\", \"right\", \"bottom\"],\n  },\n  ControlRight: {\n    x: 13.5,\n    y: 4,\n    w: 1.5,\n    h: 1,\n    labels: [{ text: \"Ctrl\" }],\n    zones: [\"pinky\", \"right\", \"bottom\"],\n  },\n};\n","import { type GeometryDict } from \"../types.ts\";\n\nexport const EXTRA: GeometryDict = {\n  Insert: {\n    x: 15.5,\n    y: 0,\n    labels: [{ text: \"Insert\", pos: [5, 5], align: [\"s\", \"t\"] }],\n  },\n  Home: {\n    x: 16.5,\n    y: 0,\n    labels: [{ text: \"Home\", pos: [5, 5], align: [\"s\", \"t\"] }],\n  },\n  PageUp: {\n    x: 17.5,\n    y: 0,\n    labels: [\n      { text: \"Page\", pos: [5, 5], align: [\"s\", \"t\"] },\n      { text: \"Up\", pos: [5, 18], align: [\"s\", \"t\"] },\n    ],\n  },\n  Delete: {\n    x: 15.5,\n    y: 1,\n    labels: [{ text: \"Delete\", pos: [5, 5], align: [\"s\", \"t\"] }],\n  },\n  End: {\n    x: 16.5,\n    y: 1,\n    labels: [{ text: \"End\", pos: [5, 5], align: [\"s\", \"t\"] }],\n  },\n  PageDown: {\n    x: 17.5,\n    y: 1,\n    labels: [\n      { text: \"Page\", pos: [5, 5], align: [\"s\", \"t\"] },\n      { text: \"Down\", pos: [5, 18], align: [\"s\", \"t\"] },\n    ],\n  },\n  ArrowUp: {\n    x: 16.5,\n    y: 3,\n    labels: [{ text: \"\\u2191\", pos: [20, 20], align: [\"m\", \"m\"] }],\n  },\n  ArrowLeft: {\n    x: 15.5,\n    y: 4,\n    labels: [{ text: \"\\u2190\", pos: [20, 20], align: [\"m\", \"m\"] }],\n  },\n  ArrowDown: {\n    x: 16.5,\n    y: 4,\n    labels: [{ text: \"\\u2193\", pos: [20, 20], align: [\"m\", \"m\"] }],\n  },\n  ArrowRight: {\n    x: 17.5,\n    y: 4,\n    labels: [{ text: \"\\u2192\", pos: [20, 20], align: [\"m\", \"m\"] }],\n  },\n  NumLock: {\n    x: 19,\n    y: 0,\n    labels: [\n      { text: \"Num\", pos: [5, 5], align: [\"s\", \"t\"] },\n      { text: \"Lock\", pos: [5, 18], align: [\"s\", \"t\"] },\n    ],\n  },\n  NumpadDivide: {\n    x: 20,\n    y: 0,\n    labels: [{ text: \"\\u2044\" }],\n  },\n  NumpadMultiply: {\n    x: 21,\n    y: 0,\n    labels: [{ text: \"\\u00D7\" }],\n  },\n  NumpadSubtract: {\n    x: 22,\n    y: 0,\n    labels: [{ text: \"\\u2212\" }],\n  },\n  Numpad7: {\n    x: 19,\n    y: 1,\n    labels: [\n      { text: \"7\", pos: [5, 5], align: [\"s\", \"t\"] },\n      { text: \"Home\", pos: [35, 35], align: [\"e\", \"b\"] },\n    ],\n  },\n  Numpad8: {\n    x: 20,\n    y: 1,\n    labels: [\n      { text: \"8\", pos: [5, 5], align: [\"s\", \"t\"] },\n      { text: \"\\u2191\", pos: [35, 35], align: [\"e\", \"b\"] },\n    ],\n  },\n  Numpad9: {\n    x: 21,\n    y: 1,\n    labels: [\n      { text: \"9\", pos: [5, 5], align: [\"s\", \"t\"] },\n      { text: \"Pg Up\", pos: [35, 35], align: [\"e\", \"b\"] },\n    ],\n  },\n  NumpadAdd: {\n    x: 22,\n    y: 1,\n    w: 1,\n    h: 2,\n    labels: [{ text: \"+\" }],\n  },\n  Numpad4: {\n    x: 19,\n    y: 2,\n    labels: [\n      { text: \"4\", pos: [5, 5], align: [\"s\", \"t\"] },\n      { text: \"\\u2190\", pos: [35, 35], align: [\"e\", \"b\"] },\n    ],\n  },\n  Numpad5: {\n    x: 20,\n    y: 2,\n    labels: [{ text: \"5\", pos: [5, 5], align: [\"s\", \"t\"] }],\n  },\n  Numpad6: {\n    x: 21,\n    y: 2,\n    labels: [\n      { text: \"6\", pos: [5, 5], align: [\"s\", \"t\"] },\n      { text: \"\\u2192\", pos: [35, 35], align: [\"e\", \"b\"] },\n    ],\n  },\n  Numpad1: {\n    x: 19,\n    y: 3,\n    labels: [\n      { text: \"1\", pos: [5, 5], align: [\"s\", \"t\"] },\n      { text: \"End\", pos: [35, 35], align: [\"e\", \"b\"] },\n    ],\n  },\n  Numpad2: {\n    x: 20,\n    y: 3,\n    labels: [\n      { text: \"2\", pos: [5, 5], align: [\"s\", \"t\"] },\n      { text: \"\\u2193\", pos: [35, 35], align: [\"e\", \"b\"] },\n    ],\n  },\n  Numpad3: {\n    x: 21,\n    y: 3,\n    labels: [\n      { text: \"3\", pos: [5, 5], align: [\"s\", \"t\"] },\n      { text: \"Pg Dn\", pos: [35, 35], align: [\"e\", \"b\"] },\n    ],\n  },\n  NumpadEnter: {\n    x: 22,\n    y: 3,\n    w: 1,\n    h: 2,\n    labels: [{ text: \"Enter\", pos: [5, 5], align: [\"s\", \"t\"] }],\n  },\n  Numpad0: {\n    x: 19,\n    y: 4,\n    w: 2,\n    h: 1,\n    labels: [\n      { text: \"0\", pos: [5, 5], align: [\"s\", \"t\"] },\n      { text: \"Ins\", pos: [75, 35], align: [\"e\", \"b\"] },\n    ],\n  },\n  NumpadDecimal: {\n    x: 21,\n    y: 4,\n    labels: [\n      { text: \".\", pos: [5, 5], align: [\"s\", \"t\"] },\n      { text: \"Del\", pos: [35, 35], align: [\"e\", \"b\"] },\n    ],\n  },\n};\n","import { type GeometryDict } from \"../types.ts\";\nimport { ANSI_101 } from \"./ansi_101.ts\";\nimport { EXTRA } from \"./extra.ts\";\n\nexport const ANSI_101_FULL: GeometryDict = {\n  ...ANSI_101,\n  ...EXTRA,\n};\n","import { type GeometryDict } from \"../types.ts\";\n\n// See https://www.w3.org/TR/uievents-code/#keyboard-104\nexport const BRAZILIAN_104: GeometryDict = {\n  Backquote: {\n    x: 0,\n    y: 0,\n    zones: [\"pinky\", \"left\", \"digit\"],\n  },\n  Digit1: {\n    x: 1,\n    y: 0,\n    zones: [\"pinky\", \"left\", \"digit\"],\n  },\n  Digit2: {\n    x: 2,\n    y: 0,\n    zones: [\"ring\", \"left\", \"digit\"],\n  },\n  Digit3: {\n    x: 3,\n    y: 0,\n    zones: [\"middle\", \"left\", \"digit\"],\n  },\n  Digit4: {\n    x: 4,\n    y: 0,\n    zones: [\"leftIndex\", \"left\", \"digit\"],\n  },\n  Digit5: {\n    x: 5,\n    y: 0,\n    zones: [\"leftIndex\", \"left\", \"digit\"],\n  },\n  Digit6: {\n    x: 6,\n    y: 0,\n    zones: [\"rightIndex\", \"right\", \"digit\"],\n  },\n  Digit7: {\n    x: 7,\n    y: 0,\n    zones: [\"rightIndex\", \"right\", \"digit\"],\n  },\n  Digit8: {\n    x: 8,\n    y: 0,\n    zones: [\"middle\", \"right\", \"digit\"],\n  },\n  Digit9: {\n    x: 9,\n    y: 0,\n    zones: [\"ring\", \"right\", \"digit\"],\n  },\n  Digit0: {\n    x: 10,\n    y: 0,\n    zones: [\"pinky\", \"right\", \"digit\"],\n  },\n  Minus: {\n    x: 11,\n    y: 0,\n    zones: [\"pinky\", \"right\", \"digit\"],\n  },\n  Equal: {\n    x: 12,\n    y: 0,\n    zones: [\"pinky\", \"right\", \"digit\"],\n  },\n  Backspace: {\n    x: 13,\n    y: 0,\n    w: 2,\n    h: 1,\n    labels: [{ text: \"Backspace\" }],\n    zones: [\"pinky\", \"right\", \"digit\"],\n  },\n  Tab: {\n    x: 0,\n    y: 1,\n    w: 1.5,\n    h: 1,\n    labels: [{ text: \"Tab\" }],\n    zones: [\"pinky\", \"left\", \"top\"],\n  },\n  KeyQ: {\n    x: 1.5,\n    y: 1,\n    zones: [\"pinky\", \"left\", \"top\"],\n  },\n  KeyW: {\n    x: 2.5,\n    y: 1,\n    zones: [\"ring\", \"left\", \"top\"],\n  },\n  KeyE: {\n    x: 3.5,\n    y: 1,\n    zones: [\"middle\", \"left\", \"top\"],\n  },\n  KeyR: {\n    x: 4.5,\n    y: 1,\n    zones: [\"leftIndex\", \"left\", \"top\"],\n  },\n  KeyT: {\n    x: 5.5,\n    y: 1,\n    zones: [\"leftIndex\", \"left\", \"top\"],\n  },\n  KeyY: {\n    x: 6.5,\n    y: 1,\n    zones: [\"rightIndex\", \"right\", \"top\"],\n  },\n  KeyU: {\n    x: 7.5,\n    y: 1,\n    zones: [\"rightIndex\", \"right\", \"top\"],\n  },\n  KeyI: {\n    x: 8.5,\n    y: 1,\n    zones: [\"middle\", \"right\", \"top\"],\n  },\n  KeyO: {\n    x: 9.5,\n    y: 1,\n    zones: [\"ring\", \"right\", \"top\"],\n  },\n  KeyP: {\n    x: 10.5,\n    y: 1,\n    zones: [\"pinky\", \"right\", \"top\"],\n  },\n  BracketLeft: {\n    x: 11.5,\n    y: 1,\n    zones: [\"pinky\", \"right\", \"top\"],\n  },\n  BracketRight: {\n    x: 12.5,\n    y: 1,\n    zones: [\"pinky\", \"right\", \"top\"],\n  },\n  Enter: {\n    x: 13.5,\n    y: 1,\n    w: 1.5,\n    h: 2,\n    labels: [{ text: \"Enter\" }],\n    shape: \"m 0 0 l 0 38 l 10 0 l 0 40 l 48 0 l 0 -78 z\",\n    zones: [\"pinky\", \"right\", \"top\"],\n  },\n  CapsLock: {\n    x: 0,\n    y: 2,\n    w: 1.75,\n    h: 1,\n    labels: [{ text: \"Caps Lock\" }],\n    zones: [\"pinky\", \"left\", \"home\"],\n  },\n  KeyA: {\n    x: 1.75,\n    y: 2,\n    zones: [\"pinky\", \"left\", \"home\"],\n  },\n  KeyS: {\n    x: 2.75,\n    y: 2,\n    zones: [\"ring\", \"left\", \"home\"],\n  },\n  KeyD: {\n    x: 3.75,\n    y: 2,\n    zones: [\"middle\", \"left\", \"home\"],\n  },\n  KeyF: {\n    x: 4.75,\n    y: 2,\n    zones: [\"leftIndex\", \"left\", \"home\"],\n    homing: true,\n  },\n  KeyG: {\n    x: 5.75,\n    y: 2,\n    zones: [\"leftIndex\", \"left\", \"home\"],\n  },\n  KeyH: {\n    x: 6.75,\n    y: 2,\n    zones: [\"rightIndex\", \"right\", \"home\"],\n  },\n  KeyJ: {\n    x: 7.75,\n    y: 2,\n    zones: [\"rightIndex\", \"right\", \"home\"],\n    homing: true,\n  },\n  KeyK: {\n    x: 8.75,\n    y: 2,\n    zones: [\"middle\", \"right\", \"home\"],\n  },\n  KeyL: {\n    x: 9.75,\n    y: 2,\n    zones: [\"ring\", \"right\", \"home\"],\n  },\n  Semicolon: {\n    x: 10.75,\n    y: 2,\n    zones: [\"pinky\", \"right\", \"home\"],\n  },\n  Quote: {\n    x: 11.75,\n    y: 2,\n    zones: [\"pinky\", \"right\", \"home\"],\n  },\n  Backslash: {\n    x: 12.75,\n    y: 2,\n    zones: [\"pinky\", \"right\", \"home\"],\n  },\n  ShiftLeft: {\n    x: 0,\n    y: 3,\n    w: 1.25,\n    h: 1,\n    labels: [{ text: \"Shift\" }],\n    zones: [\"pinky\", \"left\", \"bottom\"],\n  },\n  IntlBackslash: {\n    x: 1.25,\n    y: 3,\n    zones: [\"pinky\", \"left\", \"bottom\"],\n  },\n  KeyZ: {\n    x: 2.25,\n    y: 3,\n    zones: [\"pinky\", \"left\", \"bottom\"],\n  },\n  KeyX: {\n    x: 3.25,\n    y: 3,\n    zones: [\"ring\", \"left\", \"bottom\"],\n  },\n  KeyC: {\n    x: 4.25,\n    y: 3,\n    zones: [\"middle\", \"left\", \"bottom\"],\n  },\n  KeyV: {\n    x: 5.25,\n    y: 3,\n    zones: [\"leftIndex\", \"left\", \"bottom\"],\n  },\n  KeyB: {\n    x: 6.25,\n    y: 3,\n    zones: [\"leftIndex\", \"left\", \"bottom\"],\n  },\n  KeyN: {\n    x: 7.25,\n    y: 3,\n    zones: [\"rightIndex\", \"right\", \"bottom\"],\n  },\n  KeyM: {\n    x: 8.25,\n    y: 3,\n    zones: [\"rightIndex\", \"right\", \"bottom\"],\n  },\n  Comma: {\n    x: 9.25,\n    y: 3,\n    zones: [\"middle\", \"right\", \"bottom\"],\n  },\n  Period: {\n    x: 10.25,\n    y: 3,\n    zones: [\"ring\", \"right\", \"bottom\"],\n  },\n  Slash: {\n    x: 11.25,\n    y: 3,\n    zones: [\"pinky\", \"right\", \"bottom\"],\n  },\n  IntlRo: {\n    x: 12.25,\n    y: 3,\n    zones: [\"pinky\", \"right\", \"bottom\"],\n  },\n  ShiftRight: {\n    x: 13.25,\n    y: 3,\n    w: 1.75,\n    h: 1,\n    labels: [{ text: \"Shift\" }],\n    zones: [\"pinky\", \"right\", \"bottom\"],\n  },\n  ControlLeft: {\n    x: 0,\n    y: 4,\n    w: 1.5,\n    h: 1,\n    labels: [{ text: \"Ctrl\" }],\n    zones: [\"pinky\", \"left\", \"bottom\"],\n  },\n  AltLeft: {\n    x: 1.5,\n    y: 4,\n    w: 1.5,\n    h: 1,\n    labels: [{ text: \"Alt\" }],\n    zones: [\"pinky\", \"left\", \"bottom\"],\n  },\n  Space: {\n    x: 3,\n    y: 4,\n    w: 9,\n    h: 1,\n    zones: [\"thumb\", \"right\", \"bottom\"],\n  },\n  AltRight: {\n    x: 12,\n    y: 4,\n    w: 1.5,\n    h: 1,\n    labels: [{ text: \"Alt\" }],\n    zones: [\"pinky\", \"right\", \"bottom\"],\n  },\n  ControlRight: {\n    x: 13.5,\n    y: 4,\n    w: 1.5,\n    h: 1,\n    labels: [{ text: \"Ctrl\" }],\n    zones: [\"pinky\", \"right\", \"bottom\"],\n  },\n};\n","import { type GeometryDict } from \"../types.ts\";\nimport { BRAZILIAN_104 } from \"./brazilian_104.ts\";\nimport { EXTRA } from \"./extra.ts\";\n\nexport const BRAZILIAN_104_FULL: GeometryDict = {\n  ...BRAZILIAN_104,\n  ...EXTRA,\n};\n","import { type GeometryDict } from \"../types.ts\";\n\n// See https://www.w3.org/TR/uievents-code/#keyboard-102\nexport const ISO_102: GeometryDict = {\n  Backquote: {\n    x: 0,\n    y: 0,\n    zones: [\"pinky\", \"left\", \"digit\"],\n  },\n  Digit1: {\n    x: 1,\n    y: 0,\n    zones: [\"pinky\", \"left\", \"digit\"],\n  },\n  Digit2: {\n    x: 2,\n    y: 0,\n    zones: [\"ring\", \"left\", \"digit\"],\n  },\n  Digit3: {\n    x: 3,\n    y: 0,\n    zones: [\"middle\", \"left\", \"digit\"],\n  },\n  Digit4: {\n    x: 4,\n    y: 0,\n    zones: [\"leftIndex\", \"left\", \"digit\"],\n  },\n  Digit5: {\n    x: 5,\n    y: 0,\n    zones: [\"leftIndex\", \"left\", \"digit\"],\n  },\n  Digit6: {\n    x: 6,\n    y: 0,\n    zones: [\"rightIndex\", \"right\", \"digit\"],\n  },\n  Digit7: {\n    x: 7,\n    y: 0,\n    zones: [\"rightIndex\", \"right\", \"digit\"],\n  },\n  Digit8: {\n    x: 8,\n    y: 0,\n    zones: [\"middle\", \"right\", \"digit\"],\n  },\n  Digit9: {\n    x: 9,\n    y: 0,\n    zones: [\"ring\", \"right\", \"digit\"],\n  },\n  Digit0: {\n    x: 10,\n    y: 0,\n    zones: [\"pinky\", \"right\", \"digit\"],\n  },\n  Minus: {\n    x: 11,\n    y: 0,\n    zones: [\"pinky\", \"right\", \"digit\"],\n  },\n  Equal: {\n    x: 12,\n    y: 0,\n    zones: [\"pinky\", \"right\", \"digit\"],\n  },\n  Backspace: {\n    x: 13,\n    y: 0,\n    w: 2,\n    h: 1,\n    labels: [{ text: \"Backspace\" }],\n    zones: [\"pinky\", \"right\", \"digit\"],\n  },\n  Tab: {\n    x: 0,\n    y: 1,\n    w: 1.5,\n    h: 1,\n    labels: [{ text: \"Tab\" }],\n    zones: [\"pinky\", \"left\", \"top\"],\n  },\n  KeyQ: {\n    x: 1.5,\n    y: 1,\n    zones: [\"pinky\", \"left\", \"top\"],\n  },\n  KeyW: {\n    x: 2.5,\n    y: 1,\n    zones: [\"ring\", \"left\", \"top\"],\n  },\n  KeyE: {\n    x: 3.5,\n    y: 1,\n    zones: [\"middle\", \"left\", \"top\"],\n  },\n  KeyR: {\n    x: 4.5,\n    y: 1,\n    zones: [\"leftIndex\", \"left\", \"top\"],\n  },\n  KeyT: {\n    x: 5.5,\n    y: 1,\n    zones: [\"leftIndex\", \"left\", \"top\"],\n  },\n  KeyY: {\n    x: 6.5,\n    y: 1,\n    zones: [\"rightIndex\", \"right\", \"top\"],\n  },\n  KeyU: {\n    x: 7.5,\n    y: 1,\n    zones: [\"rightIndex\", \"right\", \"top\"],\n  },\n  KeyI: {\n    x: 8.5,\n    y: 1,\n    zones: [\"middle\", \"right\", \"top\"],\n  },\n  KeyO: {\n    x: 9.5,\n    y: 1,\n    zones: [\"ring\", \"right\", \"top\"],\n  },\n  KeyP: {\n    x: 10.5,\n    y: 1,\n    zones: [\"pinky\", \"right\", \"top\"],\n  },\n  BracketLeft: {\n    x: 11.5,\n    y: 1,\n    zones: [\"pinky\", \"right\", \"top\"],\n  },\n  BracketRight: {\n    x: 12.5,\n    y: 1,\n    zones: [\"pinky\", \"right\", \"top\"],\n  },\n  Enter: {\n    x: 13.5,\n    y: 1,\n    w: 1.5,\n    h: 2,\n    labels: [{ text: \"Enter\" }],\n    shape: \"m 0 0 l 0 38 l 10 0 l 0 40 l 48 0 l 0 -78 z\",\n    zones: [\"pinky\", \"right\", \"top\"],\n  },\n  CapsLock: {\n    x: 0,\n    y: 2,\n    w: 1.75,\n    h: 1,\n    labels: [{ text: \"Caps Lock\" }],\n    zones: [\"pinky\", \"left\", \"home\"],\n  },\n  KeyA: {\n    x: 1.75,\n    y: 2,\n    zones: [\"pinky\", \"left\", \"home\"],\n  },\n  KeyS: {\n    x: 2.75,\n    y: 2,\n    zones: [\"ring\", \"left\", \"home\"],\n  },\n  KeyD: {\n    x: 3.75,\n    y: 2,\n    zones: [\"middle\", \"left\", \"home\"],\n  },\n  KeyF: {\n    x: 4.75,\n    y: 2,\n    zones: [\"leftIndex\", \"left\", \"home\"],\n    homing: true,\n  },\n  KeyG: {\n    x: 5.75,\n    y: 2,\n    zones: [\"leftIndex\", \"left\", \"home\"],\n  },\n  KeyH: {\n    x: 6.75,\n    y: 2,\n    zones: [\"rightIndex\", \"right\", \"home\"],\n  },\n  KeyJ: {\n    x: 7.75,\n    y: 2,\n    zones: [\"rightIndex\", \"right\", \"home\"],\n    homing: true,\n  },\n  KeyK: {\n    x: 8.75,\n    y: 2,\n    zones: [\"middle\", \"right\", \"home\"],\n  },\n  KeyL: {\n    x: 9.75,\n    y: 2,\n    zones: [\"ring\", \"right\", \"home\"],\n  },\n  Semicolon: {\n    x: 10.75,\n    y: 2,\n    zones: [\"pinky\", \"right\", \"home\"],\n  },\n  Quote: {\n    x: 11.75,\n    y: 2,\n    zones: [\"pinky\", \"right\", \"home\"],\n  },\n  Backslash: {\n    x: 12.75,\n    y: 2,\n    zones: [\"pinky\", \"right\", \"home\"],\n  },\n  ShiftLeft: {\n    x: 0,\n    y: 3,\n    w: 1.25,\n    h: 1,\n    labels: [{ text: \"Shift\" }],\n    zones: [\"pinky\", \"left\", \"bottom\"],\n  },\n  IntlBackslash: {\n    x: 1.25,\n    y: 3,\n    zones: [\"pinky\", \"left\", \"bottom\"],\n  },\n  KeyZ: {\n    x: 2.25,\n    y: 3,\n    zones: [\"pinky\", \"left\", \"bottom\"],\n  },\n  KeyX: {\n    x: 3.25,\n    y: 3,\n    zones: [\"ring\", \"left\", \"bottom\"],\n  },\n  KeyC: {\n    x: 4.25,\n    y: 3,\n    zones: [\"middle\", \"left\", \"bottom\"],\n  },\n  KeyV: {\n    x: 5.25,\n    y: 3,\n    zones: [\"leftIndex\", \"left\", \"bottom\"],\n  },\n  KeyB: {\n    x: 6.25,\n    y: 3,\n    zones: [\"leftIndex\", \"left\", \"bottom\"],\n  },\n  KeyN: {\n    x: 7.25,\n    y: 3,\n    zones: [\"rightIndex\", \"right\", \"bottom\"],\n  },\n  KeyM: {\n    x: 8.25,\n    y: 3,\n    zones: [\"rightIndex\", \"right\", \"bottom\"],\n  },\n  Comma: {\n    x: 9.25,\n    y: 3,\n    zones: [\"middle\", \"right\", \"bottom\"],\n  },\n  Period: {\n    x: 10.25,\n    y: 3,\n    zones: [\"ring\", \"right\", \"bottom\"],\n  },\n  Slash: {\n    x: 11.25,\n    y: 3,\n    zones: [\"pinky\", \"right\", \"bottom\"],\n  },\n  ShiftRight: {\n    x: 12.25,\n    y: 3,\n    w: 2.75,\n    h: 1,\n    labels: [{ text: \"Shift\" }],\n    zones: [\"pinky\", \"right\", \"bottom\"],\n  },\n  ControlLeft: {\n    x: 0,\n    y: 4,\n    w: 1.5,\n    h: 1,\n    labels: [{ text: \"Ctrl\" }],\n    zones: [\"pinky\", \"left\", \"bottom\"],\n  },\n  AltLeft: {\n    x: 1.5,\n    y: 4,\n    w: 1.5,\n    h: 1,\n    labels: [{ text: \"Alt\" }],\n    zones: [\"pinky\", \"left\", \"bottom\"],\n  },\n  Space: {\n    x: 3,\n    y: 4,\n    w: 9,\n    h: 1,\n    zones: [\"thumb\", \"right\", \"bottom\"],\n  },\n  AltRight: {\n    x: 12,\n    y: 4,\n    w: 1.5,\n    h: 1,\n    labels: [{ text: \"Alt\" }],\n    zones: [\"pinky\", \"right\", \"bottom\"],\n  },\n  ControlRight: {\n    x: 13.5,\n    y: 4,\n    w: 1.5,\n    h: 1,\n    labels: [{ text: \"Ctrl\" }],\n    zones: [\"pinky\", \"right\", \"bottom\"],\n  },\n};\n","import { type GeometryDict } from \"../types.ts\";\nimport { EXTRA } from \"./extra.ts\";\nimport { ISO_102 } from \"./iso_102.ts\";\n\nexport const ISO_102_FULL: GeometryDict = {\n  ...ISO_102,\n  ...EXTRA,\n};\n","import { type GeometryDict } from \"../types.ts\";\n\n// See https://www.w3.org/TR/uievents-code/#keyboard-106\nexport const JAPANESE_106: GeometryDict = {\n  IntlHanZen: {\n    x: 0,\n    y: 0,\n    labels: [\n      { text: \"半角/\", pos: [20, 0], align: [\"m\", \"t\"] },\n      { text: \"全角/\", pos: [20, 11], align: [\"m\", \"t\"] },\n      { text: \"漢字\", pos: [20, 22], align: [\"m\", \"t\"] },\n    ],\n    zones: [\"pinky\", \"left\", \"digit\"],\n  },\n  Digit1: {\n    x: 1,\n    y: 0,\n    zones: [\"pinky\", \"left\", \"digit\"],\n  },\n  Digit2: {\n    x: 2,\n    y: 0,\n    zones: [\"ring\", \"left\", \"digit\"],\n  },\n  Digit3: {\n    x: 3,\n    y: 0,\n    zones: [\"middle\", \"left\", \"digit\"],\n  },\n  Digit4: {\n    x: 4,\n    y: 0,\n    zones: [\"leftIndex\", \"left\", \"digit\"],\n  },\n  Digit5: {\n    x: 5,\n    y: 0,\n    zones: [\"leftIndex\", \"left\", \"digit\"],\n  },\n  Digit6: {\n    x: 6,\n    y: 0,\n    zones: [\"rightIndex\", \"right\", \"digit\"],\n  },\n  Digit7: {\n    x: 7,\n    y: 0,\n    zones: [\"rightIndex\", \"right\", \"digit\"],\n  },\n  Digit8: {\n    x: 8,\n    y: 0,\n    zones: [\"middle\", \"right\", \"digit\"],\n  },\n  Digit9: {\n    x: 9,\n    y: 0,\n    zones: [\"ring\", \"right\", \"digit\"],\n  },\n  Digit0: {\n    x: 10,\n    y: 0,\n    zones: [\"pinky\", \"right\", \"digit\"],\n  },\n  Minus: {\n    x: 11,\n    y: 0,\n    zones: [\"pinky\", \"right\", \"digit\"],\n  },\n  Equal: {\n    x: 12,\n    y: 0,\n    zones: [\"pinky\", \"right\", \"digit\"],\n  },\n  IntlYen: {\n    x: 13,\n    y: 0,\n    zones: [\"pinky\", \"right\", \"digit\"],\n  },\n  Backspace: {\n    x: 14,\n    y: 0,\n    labels: [\n      { text: \"Back\", pos: [5, 5], align: [\"s\", \"t\"] },\n      { text: \"space\", pos: [5, 18], align: [\"s\", \"t\"] },\n    ],\n    zones: [\"pinky\", \"right\", \"digit\"],\n  },\n  Tab: {\n    x: 0,\n    y: 1,\n    w: 1.5,\n    h: 1,\n    labels: [{ text: \"Tab\" }],\n    zones: [\"pinky\", \"left\", \"top\"],\n  },\n  KeyQ: {\n    x: 1.5,\n    y: 1,\n    zones: [\"pinky\", \"left\", \"top\"],\n  },\n  KeyW: {\n    x: 2.5,\n    y: 1,\n    zones: [\"ring\", \"left\", \"top\"],\n  },\n  KeyE: {\n    x: 3.5,\n    y: 1,\n    zones: [\"middle\", \"left\", \"top\"],\n  },\n  KeyR: {\n    x: 4.5,\n    y: 1,\n    zones: [\"leftIndex\", \"left\", \"top\"],\n  },\n  KeyT: {\n    x: 5.5,\n    y: 1,\n    zones: [\"leftIndex\", \"left\", \"top\"],\n  },\n  KeyY: {\n    x: 6.5,\n    y: 1,\n    zones: [\"rightIndex\", \"right\", \"top\"],\n  },\n  KeyU: {\n    x: 7.5,\n    y: 1,\n    zones: [\"rightIndex\", \"right\", \"top\"],\n  },\n  KeyI: {\n    x: 8.5,\n    y: 1,\n    zones: [\"middle\", \"right\", \"top\"],\n  },\n  KeyO: {\n    x: 9.5,\n    y: 1,\n    zones: [\"ring\", \"right\", \"top\"],\n  },\n  KeyP: {\n    x: 10.5,\n    y: 1,\n    zones: [\"pinky\", \"right\", \"top\"],\n  },\n  BracketLeft: {\n    x: 11.5,\n    y: 1,\n    zones: [\"pinky\", \"right\", \"top\"],\n  },\n  BracketRight: {\n    x: 12.5,\n    y: 1,\n    zones: [\"pinky\", \"right\", \"top\"],\n  },\n  Enter: {\n    x: 13.5,\n    y: 1,\n    w: 1.5,\n    h: 2,\n    labels: [{ text: \"Enter\" }],\n    shape: \"m 0 0 l 0 38 l 10 0 l 0 40 l 48 0 l 0 -78 z\",\n    zones: [\"pinky\", \"right\", \"top\"],\n  },\n  CapsLock: {\n    x: 0,\n    y: 2,\n    w: 1.75,\n    h: 1,\n    labels: [{ text: \"Caps Lock\" }],\n    zones: [\"pinky\", \"left\", \"home\"],\n  },\n  KeyA: {\n    x: 1.75,\n    y: 2,\n    zones: [\"pinky\", \"left\", \"home\"],\n  },\n  KeyS: {\n    x: 2.75,\n    y: 2,\n    zones: [\"ring\", \"left\", \"home\"],\n  },\n  KeyD: {\n    x: 3.75,\n    y: 2,\n    zones: [\"middle\", \"left\", \"home\"],\n  },\n  KeyF: {\n    x: 4.75,\n    y: 2,\n    zones: [\"leftIndex\", \"left\", \"home\"],\n    homing: true,\n  },\n  KeyG: {\n    x: 5.75,\n    y: 2,\n    zones: [\"leftIndex\", \"left\", \"home\"],\n  },\n  KeyH: {\n    x: 6.75,\n    y: 2,\n    zones: [\"rightIndex\", \"right\", \"home\"],\n  },\n  KeyJ: {\n    x: 7.75,\n    y: 2,\n    zones: [\"rightIndex\", \"right\", \"home\"],\n    homing: true,\n  },\n  KeyK: {\n    x: 8.75,\n    y: 2,\n    zones: [\"middle\", \"right\", \"home\"],\n  },\n  KeyL: {\n    x: 9.75,\n    y: 2,\n    zones: [\"ring\", \"right\", \"home\"],\n  },\n  Semicolon: {\n    x: 10.75,\n    y: 2,\n    zones: [\"pinky\", \"right\", \"home\"],\n  },\n  Quote: {\n    x: 11.75,\n    y: 2,\n    zones: [\"pinky\", \"right\", \"home\"],\n  },\n  Backslash: {\n    x: 12.75,\n    y: 2,\n    zones: [\"pinky\", \"right\", \"home\"],\n  },\n  ShiftLeft: {\n    x: 0,\n    y: 3,\n    w: 2.25,\n    h: 1,\n    labels: [{ text: \"Shift\" }],\n    zones: [\"pinky\", \"left\", \"bottom\"],\n  },\n  KeyZ: {\n    x: 2.25,\n    y: 3,\n    zones: [\"pinky\", \"left\", \"bottom\"],\n  },\n  KeyX: {\n    x: 3.25,\n    y: 3,\n    zones: [\"ring\", \"left\", \"bottom\"],\n  },\n  KeyC: {\n    x: 4.25,\n    y: 3,\n    zones: [\"middle\", \"left\", \"bottom\"],\n  },\n  KeyV: {\n    x: 5.25,\n    y: 3,\n    zones: [\"leftIndex\", \"left\", \"bottom\"],\n  },\n  KeyB: {\n    x: 6.25,\n    y: 3,\n    zones: [\"leftIndex\", \"left\", \"bottom\"],\n  },\n  KeyN: {\n    x: 7.25,\n    y: 3,\n    zones: [\"rightIndex\", \"right\", \"bottom\"],\n  },\n  KeyM: {\n    x: 8.25,\n    y: 3,\n    zones: [\"rightIndex\", \"right\", \"bottom\"],\n  },\n  Comma: {\n    x: 9.25,\n    y: 3,\n    zones: [\"middle\", \"right\", \"bottom\"],\n  },\n  Period: {\n    x: 10.25,\n    y: 3,\n    zones: [\"ring\", \"right\", \"bottom\"],\n  },\n  Slash: {\n    x: 11.25,\n    y: 3,\n    zones: [\"pinky\", \"right\", \"bottom\"],\n  },\n  IntlRo: {\n    x: 12.25,\n    y: 3,\n    zones: [\"pinky\", \"right\", \"bottom\"],\n  },\n  ShiftRight: {\n    x: 13.25,\n    y: 3,\n    w: 1.75,\n    h: 1,\n    labels: [{ text: \"Shift\" }],\n    zones: [\"pinky\", \"right\", \"bottom\"],\n  },\n  ControlLeft: {\n    x: 0,\n    y: 4,\n    w: 1.5,\n    h: 1,\n    labels: [{ text: \"Ctrl\" }],\n    zones: [\"pinky\", \"left\", \"bottom\"],\n  },\n  AltLeft: {\n    x: 1.5,\n    y: 4,\n    w: 1.5,\n    h: 1,\n    labels: [{ text: \"Alt\" }],\n    zones: [\"pinky\", \"left\", \"bottom\"],\n  },\n  IntlMuhenkan: {\n    x: 3,\n    y: 4,\n    w: 1,\n    h: 1,\n    labels: [{ text: \"無変換\", pos: [20, 20], align: [\"m\", \"m\"] }],\n    zones: [\"thumb\", \"left\", \"bottom\"],\n  },\n  Space: {\n    x: 4,\n    y: 4,\n    w: 6,\n    h: 1,\n    zones: [\"thumb\", \"right\", \"bottom\"],\n  },\n  IntlHenkan: {\n    x: 10,\n    y: 4,\n    h: 1,\n    labels: [{ text: \"変換\", pos: [20, 20], align: [\"m\", \"m\"] }],\n    zones: [\"thumb\", \"right\", \"bottom\"],\n  },\n  IntlHiraKata: {\n    x: 11,\n    y: 4,\n    h: 1,\n    labels: [\n      { text: \"カタカナ\", pos: [20, 0], align: [\"m\", \"t\"] },\n      { text: \"ひらがな\", pos: [20, 11], align: [\"m\", \"t\"] },\n      { text: \"ローマ字\", pos: [20, 22], align: [\"m\", \"t\"] },\n    ],\n    zones: [\"thumb\", \"right\", \"bottom\"],\n  },\n  AltRight: {\n    x: 12,\n    y: 4,\n    w: 1.5,\n    h: 1,\n    labels: [{ text: \"Alt\" }],\n    zones: [\"pinky\", \"right\", \"bottom\"],\n  },\n  ControlRight: {\n    x: 13.5,\n    y: 4,\n    w: 1.5,\n    h: 1,\n    labels: [{ text: \"Ctrl\" }],\n    zones: [\"pinky\", \"right\", \"bottom\"],\n  },\n};\n","import { type GeometryDict } from \"../types.ts\";\nimport { EXTRA } from \"./extra.ts\";\nimport { JAPANESE_106 } from \"./japanese_106.ts\";\n\nexport const JAPANESE_106_FULL: GeometryDict = {\n  ...JAPANESE_106,\n  ...EXTRA,\n};\n","import { type GeometryDict } from \"../types.ts\";\n\n// See https://www.w3.org/TR/uievents-code/#keyboard-103\nexport const KOREAN_103: GeometryDict = {\n  Backquote: {\n    x: 0,\n    y: 0,\n    zones: [\"pinky\", \"left\", \"digit\"],\n  },\n  Digit1: {\n    x: 1,\n    y: 0,\n    zones: [\"pinky\", \"left\", \"digit\"],\n  },\n  Digit2: {\n    x: 2,\n    y: 0,\n    zones: [\"ring\", \"left\", \"digit\"],\n  },\n  Digit3: {\n    x: 3,\n    y: 0,\n    zones: [\"middle\", \"left\", \"digit\"],\n  },\n  Digit4: {\n    x: 4,\n    y: 0,\n    zones: [\"leftIndex\", \"left\", \"digit\"],\n  },\n  Digit5: {\n    x: 5,\n    y: 0,\n    zones: [\"leftIndex\", \"left\", \"digit\"],\n  },\n  Digit6: {\n    x: 6,\n    y: 0,\n    zones: [\"rightIndex\", \"right\", \"digit\"],\n  },\n  Digit7: {\n    x: 7,\n    y: 0,\n    zones: [\"rightIndex\", \"right\", \"digit\"],\n  },\n  Digit8: {\n    x: 8,\n    y: 0,\n    zones: [\"middle\", \"right\", \"digit\"],\n  },\n  Digit9: {\n    x: 9,\n    y: 0,\n    zones: [\"ring\", \"right\", \"digit\"],\n  },\n  Digit0: {\n    x: 10,\n    y: 0,\n    zones: [\"pinky\", \"right\", \"digit\"],\n  },\n  Minus: {\n    x: 11,\n    y: 0,\n    zones: [\"pinky\", \"right\", \"digit\"],\n  },\n  Equal: {\n    x: 12,\n    y: 0,\n    zones: [\"pinky\", \"right\", \"digit\"],\n  },\n  IntlYen: {\n    x: 13,\n    y: 0,\n    labels: [{ text: \"?\" }],\n    zones: [\"pinky\", \"right\", \"digit\"],\n  },\n  Backspace: {\n    x: 14,\n    y: 0,\n    labels: [\n      { text: \"Back\", pos: [5, 5], align: [\"s\", \"t\"] },\n      { text: \"space\", pos: [5, 18], align: [\"s\", \"t\"] },\n    ],\n    zones: [\"pinky\", \"right\", \"digit\"],\n  },\n  Tab: {\n    x: 0,\n    y: 1,\n    w: 1.5,\n    h: 1,\n    labels: [{ text: \"Tab\" }],\n    zones: [\"pinky\", \"left\", \"top\"],\n  },\n  KeyQ: {\n    x: 1.5,\n    y: 1,\n    zones: [\"pinky\", \"left\", \"top\"],\n  },\n  KeyW: {\n    x: 2.5,\n    y: 1,\n    zones: [\"ring\", \"left\", \"top\"],\n  },\n  KeyE: {\n    x: 3.5,\n    y: 1,\n    zones: [\"middle\", \"left\", \"top\"],\n  },\n  KeyR: {\n    x: 4.5,\n    y: 1,\n    zones: [\"leftIndex\", \"left\", \"top\"],\n  },\n  KeyT: {\n    x: 5.5,\n    y: 1,\n    zones: [\"leftIndex\", \"left\", \"top\"],\n  },\n  KeyY: {\n    x: 6.5,\n    y: 1,\n    zones: [\"rightIndex\", \"right\", \"top\"],\n  },\n  KeyU: {\n    x: 7.5,\n    y: 1,\n    zones: [\"rightIndex\", \"right\", \"top\"],\n  },\n  KeyI: {\n    x: 8.5,\n    y: 1,\n    zones: [\"middle\", \"right\", \"top\"],\n  },\n  KeyO: {\n    x: 9.5,\n    y: 1,\n    zones: [\"ring\", \"right\", \"top\"],\n  },\n  KeyP: {\n    x: 10.5,\n    y: 1,\n    zones: [\"pinky\", \"right\", \"top\"],\n  },\n  BracketLeft: {\n    x: 11.5,\n    y: 1,\n    zones: [\"pinky\", \"right\", \"top\"],\n  },\n  BracketRight: {\n    x: 12.5,\n    y: 1,\n    zones: [\"pinky\", \"right\", \"top\"],\n  },\n  Enter: {\n    x: 12.75,\n    y: 1,\n    w: 2.25,\n    h: 2,\n    labels: [{ text: \"Enter\", pos: [50, 40], align: [\"m\", \"m\"] }],\n    shape: \"m 30 0 l 0 40 l -30 0 l 0 40 l 88 0 l 0 -80 z\",\n    zones: [\"pinky\", \"right\", \"top\"],\n  },\n  CapsLock: {\n    x: 0,\n    y: 2,\n    w: 1.75,\n    h: 1,\n    labels: [{ text: \"Caps Lock\" }],\n    zones: [\"pinky\", \"left\", \"home\"],\n  },\n  KeyA: {\n    x: 1.75,\n    y: 2,\n    zones: [\"pinky\", \"left\", \"home\"],\n  },\n  KeyS: {\n    x: 2.75,\n    y: 2,\n    zones: [\"ring\", \"left\", \"home\"],\n  },\n  KeyD: {\n    x: 3.75,\n    y: 2,\n    zones: [\"middle\", \"left\", \"home\"],\n  },\n  KeyF: {\n    x: 4.75,\n    y: 2,\n    zones: [\"leftIndex\", \"left\", \"home\"],\n    homing: true,\n  },\n  KeyG: {\n    x: 5.75,\n    y: 2,\n    zones: [\"leftIndex\", \"left\", \"home\"],\n  },\n  KeyH: {\n    x: 6.75,\n    y: 2,\n    zones: [\"rightIndex\", \"right\", \"home\"],\n  },\n  KeyJ: {\n    x: 7.75,\n    y: 2,\n    zones: [\"rightIndex\", \"right\", \"home\"],\n    homing: true,\n  },\n  KeyK: {\n    x: 8.75,\n    y: 2,\n    zones: [\"middle\", \"right\", \"home\"],\n  },\n  KeyL: {\n    x: 9.75,\n    y: 2,\n    zones: [\"ring\", \"right\", \"home\"],\n  },\n  Semicolon: {\n    x: 10.75,\n    y: 2,\n    zones: [\"pinky\", \"right\", \"home\"],\n  },\n  Quote: {\n    x: 11.75,\n    y: 2,\n    zones: [\"pinky\", \"right\", \"home\"],\n  },\n  ShiftLeft: {\n    x: 0,\n    y: 3,\n    w: 2.25,\n    h: 1,\n    labels: [{ text: \"Shift\" }],\n    zones: [\"pinky\", \"left\", \"bottom\"],\n  },\n  KeyZ: {\n    x: 2.25,\n    y: 3,\n    zones: [\"pinky\", \"left\", \"bottom\"],\n  },\n  KeyX: {\n    x: 3.25,\n    y: 3,\n    zones: [\"ring\", \"left\", \"bottom\"],\n  },\n  KeyC: {\n    x: 4.25,\n    y: 3,\n    zones: [\"middle\", \"left\", \"bottom\"],\n  },\n  KeyV: {\n    x: 5.25,\n    y: 3,\n    zones: [\"leftIndex\", \"left\", \"bottom\"],\n  },\n  KeyB: {\n    x: 6.25,\n    y: 3,\n    zones: [\"leftIndex\", \"left\", \"bottom\"],\n  },\n  KeyN: {\n    x: 7.25,\n    y: 3,\n    zones: [\"rightIndex\", \"right\", \"bottom\"],\n  },\n  KeyM: {\n    x: 8.25,\n    y: 3,\n    zones: [\"rightIndex\", \"right\", \"bottom\"],\n  },\n  Comma: {\n    x: 9.25,\n    y: 3,\n    zones: [\"middle\", \"right\", \"bottom\"],\n  },\n  Period: {\n    x: 10.25,\n    y: 3,\n    zones: [\"ring\", \"right\", \"bottom\"],\n  },\n  Slash: {\n    x: 11.25,\n    y: 3,\n    zones: [\"pinky\", \"right\", \"bottom\"],\n  },\n  ShiftRight: {\n    x: 12.25,\n    y: 3,\n    w: 2.75,\n    h: 1,\n    labels: [{ text: \"Shift\" }],\n    zones: [\"pinky\", \"right\", \"bottom\"],\n  },\n  ControlLeft: {\n    x: 0,\n    y: 4,\n    w: 1.5,\n    h: 1,\n    labels: [{ text: \"Ctrl\" }],\n    zones: [\"pinky\", \"left\", \"bottom\"],\n  },\n  AltLeft: {\n    x: 1.5,\n    y: 4,\n    w: 1.5,\n    h: 1,\n    labels: [{ text: \"Alt\" }],\n    zones: [\"pinky\", \"left\", \"bottom\"],\n  },\n  Lang2: {\n    x: 3,\n    y: 4,\n    w: 1.5,\n    h: 1,\n    labels: [{ text: \"한자\" }],\n    zones: [\"thumb\", \"left\", \"bottom\"],\n  },\n  Space: {\n    x: 4.5,\n    y: 4,\n    w: 6,\n    h: 1,\n    zones: [\"thumb\", \"right\", \"bottom\"],\n  },\n  Lang1: {\n    x: 10.5,\n    y: 4,\n    w: 1.5,\n    h: 1,\n    labels: [{ text: \"한/영\" }],\n    zones: [\"thumb\", \"right\", \"bottom\"],\n  },\n  AltRight: {\n    x: 12,\n    y: 4,\n    w: 1.5,\n    h: 1,\n    labels: [{ text: \"Alt\" }],\n    zones: [\"pinky\", \"right\", \"bottom\"],\n  },\n  ControlRight: {\n    x: 13.5,\n    y: 4,\n    w: 1.5,\n    h: 1,\n    labels: [{ text: \"Ctrl\" }],\n    zones: [\"pinky\", \"right\", \"bottom\"],\n  },\n};\n","import { type GeometryDict } from \"../types.ts\";\nimport { EXTRA } from \"./extra.ts\";\nimport { KOREAN_103 } from \"./korean_103.ts\";\n\nexport const KOREAN_103_FULL: GeometryDict = {\n  ...KOREAN_103,\n  ...EXTRA,\n};\n","export class KeyModifier {\n  static readonly None = new KeyModifier(/* shift= */ false, /* alt= */ false);\n  static readonly Shift = new KeyModifier(/* shift= */ true, /* alt= */ false);\n  static readonly Alt = new KeyModifier(/* shift= */ false, /* alt= */ true);\n  static readonly ShiftAlt = new KeyModifier(\n    /* shift= */ true,\n    /* alt= */ true,\n  );\n\n  static from(shift: boolean, alt: boolean) {\n    if (shift && alt) {\n      return KeyModifier.ShiftAlt;\n    }\n    if (shift) {\n      return KeyModifier.Shift;\n    }\n    if (alt) {\n      return KeyModifier.Alt;\n    }\n    return KeyModifier.None;\n  }\n\n  readonly shift: boolean;\n  readonly alt: boolean;\n  readonly complexity: number;\n\n  private constructor(shift: boolean, alt: boolean) {\n    this.shift = shift;\n    this.alt = alt;\n    this.complexity = complexityOf(shift, alt);\n  }\n}\n\nfunction complexityOf(shift: boolean, alt: boolean): number {\n  if (shift && alt) {\n    return 2;\n  }\n  if (shift || alt) {\n    return 1;\n  }\n  return 0;\n}\n","import { isNumber, isObject } from \"@keybr/lang\";\nimport { type CodePoint } from \"@keybr/unicode\";\nimport { KeyModifier } from \"./keymodifier.ts\";\nimport {\n  type Character,\n  type DeadCharacter,\n  type KeyId,\n  type LigatureCharacter,\n  type SpecialCharacter,\n} from \"./types.ts\";\n\nexport class KeyCharacters {\n  static isCodePoint = (ch: unknown | null): ch is CodePoint => {\n    return isNumber(ch) && ch > 0x0000;\n  };\n\n  static isDead = (ch: unknown | null): ch is DeadCharacter => {\n    return isObject(ch) && \"dead\" in ch;\n  };\n\n  static isSpecial = (ch: unknown | null): ch is SpecialCharacter => {\n    return isObject(ch) && \"special\" in ch;\n  };\n\n  static isLigature = (ch: unknown | null): ch is LigatureCharacter => {\n    return isObject(ch) && \"ligature\" in ch;\n  };\n\n  readonly id: KeyId;\n  readonly a: Character | null;\n  readonly b: Character | null;\n  readonly c: Character | null;\n  readonly d: Character | null;\n\n  constructor(\n    id: KeyId,\n    a: Character | null,\n    b: Character | null,\n    c: Character | null,\n    d: Character | null,\n  ) {\n    this.id = id;\n    this.a = a || null;\n    this.b = b || null;\n    this.c = c || null;\n    this.d = d || null;\n  }\n\n  getCodePoint(modifier: KeyModifier): CodePoint | null {\n    switch (modifier) {\n      case KeyModifier.None:\n        return select(this.a);\n      case KeyModifier.Shift:\n        return select(this.b, this.a);\n      case KeyModifier.Alt:\n        return select(this.c, this.b, this.a);\n      case KeyModifier.ShiftAlt:\n        return select(this.d, this.c, this.b, this.a);\n      default:\n        throw new Error();\n    }\n  }\n\n  get valid() {\n    return Boolean(this.a || this.b || this.c || this.d);\n  }\n}\n\nfunction select(...characters: (Character | null)[]): CodePoint | null {\n  for (const character of characters) {\n    if (character != null) {\n      if (KeyCharacters.isCodePoint(character)) {\n        return character;\n      } else {\n        break;\n      }\n    }\n  }\n  return null;\n}\n","import { type CodePoint, type HasCodePoint } from \"@keybr/unicode\";\nimport { type KeyModifier } from \"./keymodifier.ts\";\nimport { type KeyId } from \"./types.ts\";\n\nexport class KeyCombo implements HasCodePoint {\n  readonly complexity: number;\n  readonly shift: boolean;\n  readonly alt: boolean;\n\n  constructor(\n    readonly codePoint: CodePoint,\n    readonly id: KeyId,\n    readonly modifier: KeyModifier,\n    readonly prefix: KeyCombo | null = null,\n  ) {\n    let complexity = 0;\n    let shift = false;\n    let alt = false;\n    let combo: KeyCombo | null = this; // eslint-disable-line @typescript-eslint/no-this-alias\n    while (combo != null) {\n      const { modifier } = combo;\n      complexity += 1 + modifier.complexity;\n      shift ||= modifier.shift;\n      alt ||= modifier.alt;\n      combo = combo.prefix;\n    }\n    this.complexity = complexity;\n    this.shift = shift;\n    this.alt = alt;\n  }\n}\n","import {\n  type Character,\n  type CharacterDict,\n  type GeometryDict,\n  type KeyId,\n  type LabelShape,\n  type ZoneId,\n} from \"./types.ts\";\n\nexport class KeyShape {\n  static readonly fingerZones: readonly ZoneId[] = [\n    \"pinky\",\n    \"ring\",\n    \"middle\",\n    \"leftIndex\",\n    \"rightIndex\",\n    \"thumb\",\n  ];\n  static readonly handZones: readonly ZoneId[] = [\"left\", \"right\"];\n  static readonly rowZones: readonly ZoneId[] = [\n    \"digit\",\n    \"top\",\n    \"home\",\n    \"bottom\",\n  ];\n\n  /** Key identifier. */\n  readonly id: KeyId;\n  /** Key X position. */\n  readonly x: number;\n  /** Key Y position. */\n  readonly y: number;\n  /** Key width. */\n  readonly w: number;\n  /** Key height. */\n  readonly h: number;\n  /** Key labels. */\n  readonly labels: readonly LabelShape[];\n  /** Key shape SVG path. */\n  readonly shape: string | null;\n  /** The finger to type this key with. */\n  readonly zones: readonly ZoneId[];\n  /** Whether this is a homing key. */\n  readonly homing: boolean;\n  /** The code point produced by this key. */\n  readonly a: Character | null;\n  /** The code point produced by this key. */\n  readonly b: Character | null;\n  /** The code point produced by this key. */\n  readonly c: Character | null;\n  /** The code point produced by this key. */\n  readonly d: Character | null;\n  /** Finger zone, if any. */\n  readonly finger: ZoneId | null;\n  /** Hand zone, if any. */\n  readonly hand: ZoneId | null;\n  /** Row zone, if any. */\n  readonly row: ZoneId | null;\n\n  constructor(\n    id: KeyId,\n    geometryConf: GeometryDict[\"keyId\"],\n    characterConf: CharacterDict[\"keyId\"] | null,\n  ) {\n    const { x, y, w, h, labels, shape, zones, homing } = geometryConf;\n    const [a, b, c, d] = characterConf ?? [];\n    this.id = id;\n    this.x = x;\n    this.y = y;\n    this.w = w ?? 1;\n    this.h = h ?? 1;\n    this.labels = labels ?? [];\n    this.shape = shape ?? null;\n    this.zones = zones ?? [];\n    this.homing = homing ?? false;\n    this.a = a ?? null;\n    this.b = b ?? null;\n    this.c = c ?? null;\n    this.d = d ?? null;\n    this.finger = selectZone(KeyShape.fingerZones, this.zones);\n    this.hand = selectZone(KeyShape.handZones, this.zones);\n    this.row = selectZone(KeyShape.rowZones, this.zones);\n  }\n\n  inZone(id: ZoneId): boolean {\n    return this.zones.includes(id);\n  }\n\n  inAnyZone(ids: readonly ZoneId[]): boolean {\n    return ids.some((id) => this.zones.includes(id));\n  }\n\n  inAllZones(ids: readonly ZoneId[]): boolean {\n    return ids.every((id) => this.zones.includes(id));\n  }\n}\n\nfunction selectZone(\n  zones: readonly ZoneId[],\n  subset: readonly ZoneId[],\n): ZoneId | null {\n  for (const zone of zones) {\n    if (subset.includes(zone)) {\n      return zone;\n    }\n  }\n  return null;\n}\n","import { Enum, type EnumItem } from \"@keybr/lang\";\nimport { type CodePoint, toCodePoints } from \"@keybr/unicode\";\n\nexport class Language implements EnumItem {\n  static readonly AR = new Language(\n    /* id= */ \"ar\",\n    /* script= */ \"arabic\",\n    /* direction= */ \"rtl\",\n    /* alphabet= */ \"ابجدهوزحطيكلمنسعفصقرشتثخذضظغ\",\n  );\n  static readonly BE = new Language(\n    /* id= */ \"be\",\n    /* script= */ \"cyrillic\",\n    /* direction= */ \"ltr\",\n    /* alphabet= */ \"абвгдежзійклмнопрстуўфхцчшыьэюя\",\n  );\n  static readonly CS = new Language(\n    /* id= */ \"cs\",\n    /* script= */ \"latin\",\n    /* direction= */ \"ltr\",\n    /* alphabet= */ \"aábcčdďeéěfghiíjklmnňoóprřsštťuúůvxyýzž\",\n  );\n  static readonly DE = new Language(\n    /* id= */ \"de\",\n    /* script= */ \"latin\",\n    /* direction= */ \"ltr\",\n    /* alphabet= */ \"aäbcdefghijklmnoöpqrstuüvwxyzß\",\n  );\n  static readonly EL = new Language(\n    /* id= */ \"el\",\n    /* script= */ \"greek\",\n    /* direction= */ \"ltr\",\n    /* alphabet= */ \"αάβγδεέζηήθιίκλμνξοόπρσςτυύφχψωώ\",\n  );\n  static readonly EN = new Language(\n    /* id= */ \"en\",\n    /* script= */ \"latin\",\n    /* direction= */ \"ltr\",\n    /* alphabet= */ \"abcdefghijklmnopqrstuvwxyz\",\n  );\n  static readonly ES = new Language(\n    /* id= */ \"es\",\n    /* script= */ \"latin\",\n    /* direction= */ \"ltr\",\n    /* alphabet= */ \"aábcdeéfghiíjlmnñoópqrstuúvxyz\",\n  );\n  static readonly FA = new Language(\n    /* id= */ \"fa\",\n    /* script= */ \"arabic\",\n    /* direction= */ \"rtl\",\n    /* alphabet= */ \"ابپتثجچحخدذرزژسشصضطظعغفقکگلمنوهی\",\n  );\n  static readonly FR = new Language(\n    /* id= */ \"fr\",\n    /* script= */ \"latin\",\n    /* direction= */ \"ltr\",\n    /* alphabet= */ \"abcçdeéèfghijlmnopqrstuvxyz\",\n  );\n  static readonly HE = new Language(\n    /* id= */ \"he\",\n    /* script= */ \"hebrew\",\n    /* direction= */ \"rtl\",\n    /* alphabet= */ \"אבגדהוזחטיכךלמםנןסעפףצץקרשת\",\n  );\n  static readonly HR = new Language(\n    /* id= */ \"hr\",\n    /* script= */ \"latin\",\n    /* direction= */ \"ltr\",\n    /* alphabet= */ \"abcćčdđefghijklmnoprsštuvzž\",\n  );\n  static readonly HU = new Language(\n    /* id= */ \"hu\",\n    /* script= */ \"latin\",\n    /* direction= */ \"ltr\",\n    /* alphabet= */ \"aábcdeéfghiíjklmnoóöőpqrstuúüűvwxyz\",\n  );\n  static readonly IT = new Language(\n    /* id= */ \"it\",\n    /* script= */ \"latin\",\n    /* direction= */ \"ltr\",\n    /* alphabet= */ \"abcdefghijklmnopqrstuvwxyz\",\n  );\n  static readonly LT = new Language(\n    /* id= */ \"lt\",\n    /* script= */ \"latin\",\n    /* direction= */ \"ltr\",\n    /* alphabet= */ \"aąbcčdeęėfghiįyjklmnoprsštuųūvzž\",\n  );\n  static readonly NB = new Language(\n    /* id= */ \"nb\",\n    /* script= */ \"latin\",\n    /* direction= */ \"ltr\",\n    /* alphabet= */ \"abcdefghijklmnoprstuvwyæøå\",\n  );\n  static readonly NL = new Language(\n    /* id= */ \"nl\",\n    /* script= */ \"latin\",\n    /* direction= */ \"ltr\",\n    /* alphabet= */ \"abcdefghijklmnopqrstuvwxyz\",\n  );\n  static readonly PL = new Language(\n    /* id= */ \"pl\",\n    /* script= */ \"latin\",\n    /* direction= */ \"ltr\",\n    /* alphabet= */ \"aąbcćdeęfghijklłmnńoóprsśtuwyzźż\",\n  );\n  static readonly PT = new Language(\n    /* id= */ \"pt\",\n    /* script= */ \"latin\",\n    /* direction= */ \"ltr\",\n    /* alphabet= */ \"aáâãàbcçdeéêfghiíjlmnoóôõpqrstuúvxz\",\n  );\n  static readonly RO = new Language(\n    /* id= */ \"ro\",\n    /* script= */ \"latin\",\n    /* direction= */ \"ltr\",\n    /* alphabet= */ \"aăâbcdefghiîjlmnoprsștțuvxz\",\n  );\n  static readonly RU = new Language(\n    /* id= */ \"ru\",\n    /* script= */ \"cyrillic\",\n    /* direction= */ \"ltr\",\n    /* alphabet= */ \"абвгдежзийклмнопрстуфхцчшщъыьэюя\",\n  );\n  static readonly SL = new Language(\n    /* id= */ \"sl\",\n    /* script= */ \"latin\",\n    /* direction= */ \"ltr\",\n    /* alphabet= */ \"abcčdefghijklmnoprsštuvzž\",\n  );\n  static readonly SV = new Language(\n    /* id= */ \"sv\",\n    /* script= */ \"latin\",\n    /* direction= */ \"ltr\",\n    /* alphabet= */ \"abcdefghijklmnoprstuvwxyåäö\",\n  );\n  static readonly TH = new Language(\n    /* id= */ \"th\",\n    /* script= */ \"thai\",\n    /* direction= */ \"ltr\",\n    /* alphabet= */ \"กขคฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลวศษสหฬอฮฯะัาำิีึืุูเแโใไๅ็่้๊๋์\",\n  );\n  static readonly TR = new Language(\n    /* id= */ \"tr\",\n    /* script= */ \"latin\",\n    /* direction= */ \"ltr\",\n    /* alphabet= */ \"abcçdefgğhıijklmnoöprsştuüvyz\",\n  );\n  static readonly UK = new Language(\n    /* id= */ \"uk\",\n    /* script= */ \"cyrillic\",\n    /* direction= */ \"ltr\",\n    /* alphabet= */ \"абвгдеєжзиіїйклмнопрстуфхцчшщьюя\",\n  );\n\n  static readonly ALL = new Enum<Language>(\n    Language.AR,\n    Language.BE,\n    Language.CS,\n    Language.DE,\n    Language.EL,\n    Language.EN,\n    Language.ES,\n    Language.FA,\n    Language.FR,\n    Language.HE,\n    Language.HR,\n    Language.HU,\n    Language.IT,\n    Language.LT,\n    Language.NB,\n    Language.NL,\n    Language.PL,\n    Language.PT,\n    Language.RO,\n    Language.RU,\n    Language.SL,\n    Language.SV,\n    Language.TH,\n    Language.TR,\n    Language.UK,\n  );\n\n  /** ISO 639-1 language code, https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes */\n  readonly id: string;\n  /** The writing system, such as Cyrillic, Georgian, Greek, Hebrew, Latin, Thai, etc. */\n  readonly script:\n    | \"arabic\"\n    | \"cyrillic\"\n    | \"greek\"\n    | \"hebrew\"\n    | \"latin\"\n    | \"thai\";\n  /** The direction of the writing system, either \"ltr\" for left-to-right, or \"rtl\" for right-to-left. */\n  readonly direction: \"ltr\" | \"rtl\";\n  /** The list of alphabet code points. */\n  readonly alphabet: readonly CodePoint[];\n  /** The locale. */\n  readonly locale: Intl.Locale;\n  /** The collator for sorting strings. */\n  readonly collator: Intl.Collator;\n  /** A locale-sensitive string comparison function. */\n  readonly compare: (a: string, b: string) => number;\n  /** A locale-sensitive string uppercase function. */\n  readonly upperCase: (v: string) => string;\n  /** A locale-sensitive string lowercase function. */\n  readonly lowerCase: (v: string) => string;\n  /** A locale-sensitive string capitalize function. */\n  readonly capitalCase: (v: string) => string;\n\n  private constructor(\n    id: string,\n    script: \"arabic\" | \"cyrillic\" | \"greek\" | \"hebrew\" | \"latin\" | \"thai\",\n    direction: \"ltr\" | \"rtl\",\n    alphabet: string,\n  ) {\n    const locale = new Intl.Locale(id).maximize();\n    const collator = new Intl.Collator(locale);\n    this.id = id;\n    this.script = script;\n    this.direction = direction;\n    this.alphabet = Object.freeze([...toCodePoints(alphabet)]);\n    this.locale = locale;\n    this.collator = collator;\n    this.compare = (a, b) => collator.compare(a, b);\n    this.upperCase = (v) => v.toLocaleUpperCase(locale);\n    this.lowerCase = (v) => v.toLocaleLowerCase(locale);\n    this.capitalCase = (v) =>\n      v.substring(0, 1).toLocaleUpperCase(locale) +\n      v.substring(1).toLocaleLowerCase(locale);\n    Object.freeze(this);\n  }\n\n  /**\n   * Checks whether the given string is composed only of the language letters,\n   * case-insensitive.\n   */\n  test = (v: string): boolean => {\n    for (const codePoint of toCodePoints(this.lowerCase(v))) {\n      if (!this.alphabet.includes(codePoint)) {\n        return false;\n      }\n    }\n    return true;\n  };\n\n  letterName = (codePoint: CodePoint): string => {\n    if (codePoint === /* \"ß\" */ 0x00df) {\n      // German uppercase letter Eszett.\n      return \"ẞ\";\n    }\n    if (codePoint >= 0x0590 && codePoint <= 0x05ff) {\n      // Hebrew Unicode block.\n      // There are no lower or uppercase letters in the Hebrew script.\n      return String.fromCodePoint(codePoint);\n    }\n    if (codePoint >= 0x0600 && codePoint <= 0x06ff) {\n      // Arabic Unicode block.\n      // There are no lower or uppercase letters in the Arabic script.\n      // Arabic script is cursive, which means that the letters\n      // change shape when joined together.\n      // Here we break letters apart by prepending them with\n      // the Zero Width Non-Joiner character.\n      return String.fromCodePoint(\n        /* ZERO WIDTH NON-JOINER */ 0x200c,\n        codePoint,\n      );\n    }\n    if (codePoint >= 0x0e00 && codePoint <= 0x0e7f) {\n      // Thai Unicode block.\n      if (\n        codePoint === 0x0e31 ||\n        (codePoint >= 0x0e34 && codePoint <= 0x0e3a) ||\n        (codePoint >= 0x0e47 && codePoint <= 0x0e4e)\n      ) {\n        // Thai combining marks.\n        return String.fromCodePoint(/* DOTTED CIRCLE */ 0x25cc, codePoint);\n      }\n    }\n    // Locale-specific uppercase variant of a letter.\n    // For example in Turkish there are dotted and dotless letter I,\n    // each with its own lower and uppercase variant.\n    return this.upperCase(String.fromCodePoint(codePoint));\n  };\n\n  /**\n   * Returns a value indicating whether the given code point\n   * can be a letter of this language.\n   */\n  includes(codePoint: CodePoint): boolean {\n    // We consider these Unicode ranges to contain letters only in a given script.\n    // The ranges were manually built from Unicode tables and may not be accurate.\n    switch (this.script) {\n      case \"arabic\":\n        return codePoint >= 0x0600 && codePoint <= 0x06ff;\n      case \"cyrillic\":\n        return codePoint >= 0x0400 && codePoint <= 0x04ff;\n      case \"greek\":\n        return codePoint >= 0x0370 && codePoint <= 0x03ff;\n      case \"hebrew\":\n        return codePoint >= 0x0590 && codePoint <= 0x05ff;\n      case \"latin\":\n        // A few Unicode blocks of the Latin script to include only\n        // a reasonable list of letter codepoints.\n        return (\n          (codePoint >= /* \"A\" */ 0x0041 && codePoint <= /* \"Z\" */ 0x005a) ||\n          (codePoint >= /* \"a\" */ 0x0061 && codePoint <= /* \"z\" */ 0x007a) ||\n          (codePoint >= /* \"À\" */ 0x00c0 && codePoint <= /* \"Ö\" */ 0x00d6) ||\n          (codePoint >= /* \"Ø\" */ 0x00d8 && codePoint <= /* \"ö\" */ 0x00f6) ||\n          (codePoint >= /* \"ø\" */ 0x00f8 && codePoint <= /* \"ÿ\" */ 0x00ff) ||\n          (codePoint >= /* \"Ā\" */ 0x0100 && codePoint <= /* \"ſ\" */ 0x017f) ||\n          (codePoint >= /* \"ƀ\" */ 0x0180 && codePoint <= /* \"ɏ\" */ 0x024f)\n        );\n      case \"thai\":\n        return codePoint >= 0x0e00 && codePoint <= 0x0e7f;\n      default:\n        return false;\n    }\n  }\n\n  toString() {\n    return this.id;\n  }\n\n  toJSON() {\n    return this.id;\n  }\n}\n\nexport function getExampleText({ script }: Language): string {\n  switch (script) {\n    case \"arabic\":\n      return \"تناول المزيد من التفاح والبرتقال.\";\n    case \"cyrillic\":\n      return \"Яжте повече ябълки и портокали.\";\n    case \"greek\":\n      return \"Τρώτε περισσότερα μήλα και πορτοκάλια.\";\n    case \"hebrew\":\n      return \"תאכל יותר תפוחים ותפוזים.\";\n    case \"thai\":\n      return \"กินส้มกับแอปเปิลเยอะ ๆ\";\n    default:\n      return \"Eat more apples and oranges.\";\n  }\n}\n\nexport function getExampleLetters({ script }: Language): CodePoint[] {\n  switch (script) {\n    case \"arabic\":\n      return [0x0627, 0x0628, 0x067e, 0x062a, 0x062b, 0x062c];\n    case \"cyrillic\":\n      return [0x0430, 0x0431, 0x0432, 0x0433, 0x0434, 0x0435];\n    case \"greek\":\n      return [0x03b1, 0x03b2, 0x03b3, 0x03b4, 0x03b5, 0x03b6];\n    case \"hebrew\":\n      return [0x05d0, 0x05d1, 0x05d2, 0x05d3, 0x05d4, 0x05d5];\n    case \"latin\":\n      return [0x0061, 0x0062, 0x0063, 0x0064, 0x0065, 0x0066];\n    case \"thai\":\n      return [0x0e01, 0x0e02, 0x0e04, 0x0e06, 0x0e07, 0x0e08];\n  }\n}\n","import { type CodePoint, combineDiacritic, isDiacritic } from \"@keybr/unicode\";\nimport { type Geometry } from \"./geometry.ts\";\nimport { KeyCharacters } from \"./keycharacters.ts\";\nimport { KeyCombo } from \"./keycombo.ts\";\nimport { KeyModifier } from \"./keymodifier.ts\";\nimport { KeyShape } from \"./keyshape.ts\";\nimport { getExampleLetters, getExampleText } from \"./language.ts\";\nimport { type Layout } from \"./layout.ts\";\nimport {\n  type CharacterDict,\n  type DeadCharacter,\n  type GeometryDict,\n  type KeyId,\n  type WeightedCodePointSet,\n  type ZoneFilter,\n  type ZoneId,\n} from \"./types.ts\";\n\nexport class Keyboard {\n  readonly characters: ReadonlyMap<KeyId, KeyCharacters>;\n  readonly combos: ReadonlyMap<CodePoint, KeyCombo>;\n  readonly shapes: ReadonlyMap<KeyId, KeyShape>;\n  readonly zones: ReadonlyMap<ZoneId, readonly KeyShape[]>;\n\n  constructor(\n    readonly layout: Layout,\n    readonly geometry: Geometry,\n    readonly characterDict: CharacterDict,\n    readonly geometryDict: GeometryDict,\n  ) {\n    const characters = new Map<KeyId, KeyCharacters>();\n    const combos = new Map<CodePoint, KeyCombo>();\n    const shapes = new Map<KeyId, KeyShape>();\n    const zones = new Map<ZoneId, KeyShape[]>();\n\n    for (const [id, [a = null, b = null, c = null, d = null]] of Object.entries(\n      characterDict,\n    )) {\n      characters.set(id, new KeyCharacters(id, a, b, c, d));\n    }\n\n    for (const { id, a, b, c, d } of characters.values()) {\n      if (KeyCharacters.isCodePoint(a)) {\n        addCombo(combos, a, id, KeyModifier.None);\n      }\n      if (KeyCharacters.isCodePoint(b)) {\n        addCombo(combos, b, id, KeyModifier.Shift);\n      }\n      if (KeyCharacters.isCodePoint(c)) {\n        addCombo(combos, c, id, KeyModifier.Alt);\n      }\n      if (KeyCharacters.isCodePoint(d)) {\n        addCombo(combos, d, id, KeyModifier.ShiftAlt);\n      }\n    }\n\n    for (const { id, a, b, c, d } of characters.values()) {\n      if (KeyCharacters.isDead(a)) {\n        addDeadCombo(combos, a, id, KeyModifier.None);\n      }\n      if (KeyCharacters.isDead(b)) {\n        addDeadCombo(combos, b, id, KeyModifier.Shift);\n      }\n      if (KeyCharacters.isDead(c)) {\n        addDeadCombo(combos, c, id, KeyModifier.Alt);\n      }\n      if (KeyCharacters.isDead(d)) {\n        addDeadCombo(combos, d, id, KeyModifier.ShiftAlt);\n      }\n    }\n\n    for (const [id, data] of Object.entries(\n      layout.mod(geometry, geometryDict),\n    )) {\n      const shape = new KeyShape(id, data, characterDict[id] ?? null);\n      shapes.set(id, shape);\n      for (const zone of shape.zones) {\n        let list = zones.get(zone);\n        if (list == null) {\n          zones.set(zone, (list = []));\n        }\n        list.push(shape);\n      }\n    }\n\n    this.layout = layout;\n    this.geometry = geometry;\n    this.characters = characters;\n    this.combos = combos;\n    this.shapes = shapes;\n    this.zones = zones;\n  }\n\n  getCharacters(id: KeyId): KeyCharacters | null {\n    return this.characters.get(id) ?? null;\n  }\n\n  getCombo(codePoint: CodePoint): KeyCombo | null {\n    return this.combos.get(codePoint) ?? null;\n  }\n\n  getShape(id: KeyId): KeyShape | null {\n    return this.shapes.get(id) ?? null;\n  }\n\n  getCodePoints({\n    zones,\n    dead = true,\n    shift = true,\n    alt = true,\n  }: Partial<ZoneFilter> = {}): WeightedCodePointSet {\n    const list: CodePoint[] = [];\n    const weights = new Map<CodePoint, number>();\n    for (const combo of this.combos.values()) {\n      const shape = this.getShape(combo.id);\n      if (\n        (combo.prefix == null || dead) &&\n        (!combo.shift || shift) &&\n        (!combo.alt || alt) &&\n        (zones == null || shape?.inAnyZone(zones))\n      ) {\n        list.push(combo.codePoint);\n        switch (shape?.row) {\n          case \"home\":\n            weights.set(combo.codePoint, 1);\n            break;\n          case \"top\":\n            weights.set(combo.codePoint, 2);\n            break;\n        }\n      }\n    }\n    const codePoints = new Set(list.sort((a, b) => a - b));\n    return new (class implements WeightedCodePointSet {\n      [Symbol.iterator](): IterableIterator<CodePoint> {\n        return codePoints[Symbol.iterator]();\n      }\n      get size(): number {\n        return codePoints.size;\n      }\n      has(codePoint: CodePoint): boolean {\n        return codePoints.has(codePoint);\n      }\n      weight(codePoint: CodePoint): number {\n        return weights.get(codePoint) ?? 1000;\n      }\n    })();\n  }\n\n  getExampleText(): string {\n    return getExampleText(this.layout.language);\n  }\n\n  getExampleLetters(): CodePoint[] {\n    const codePoints = this.getCodePoints();\n    return getExampleLetters(this.layout.language).filter(codePoints.has);\n  }\n}\n\nfunction setCombo(map: Map<CodePoint, KeyCombo>, combo: KeyCombo): void {\n  const oldCombo = map.get(combo.codePoint);\n  if (oldCombo == null || oldCombo.complexity > combo.complexity) {\n    map.set(combo.codePoint, combo);\n  }\n}\n\nfunction addCombo(\n  map: Map<CodePoint, KeyCombo>,\n  character: CodePoint,\n  id: KeyId,\n  modifier: KeyModifier,\n): void {\n  setCombo(map, new KeyCombo(character, id, modifier));\n}\n\nfunction addDeadCombo(\n  map: Map<CodePoint, KeyCombo>,\n  { dead }: DeadCharacter,\n  id: KeyId,\n  modifier: KeyModifier,\n): void {\n  if (isDiacritic(dead)) {\n    const prefix = new KeyCombo(dead, id, modifier);\n    for (const combo of map.values()) {\n      if (combo.prefix == null) {\n        const combinedCodePoint = combineDiacritic(combo.codePoint, dead);\n        if (combinedCodePoint !== combo.codePoint) {\n          setCombo(\n            map,\n            new KeyCombo(combinedCodePoint, combo.id, combo.modifier, prefix),\n          );\n        }\n      }\n    }\n  }\n}\n","import { type Geometry } from \"./geometry.ts\";\nimport { ANGLE_MOD, ANGLE_WIDE_MOD, type ZoneModDict } from \"./geometry/mod.ts\";\nimport { type GeometryDict } from \"./types.ts\";\n\nexport type Mod = (geometry: Geometry, dict: GeometryDict) => GeometryDict;\n\nexport const nullMod: Mod = (geometry: Geometry, dict: GeometryDict) => dict;\n\nexport const angleMod: Mod = ({ form }, dict) => {\n  if (form === \"staggered\") {\n    return remapZones(dict, ANGLE_MOD);\n  } else {\n    return dict;\n  }\n};\n\nexport const angleWideMod: Mod = ({ form }, dict) => {\n  if (form === \"staggered\") {\n    return remapZones(dict, ANGLE_WIDE_MOD);\n  } else {\n    return dict;\n  }\n};\n\nexport function remapZones(dict: GeometryDict, mod: ZoneModDict): GeometryDict {\n  return Object.fromEntries(\n    Object.entries(dict).map(\n      ([id, { x, y, w, h, labels, shape, zones, homing }]) => [\n        id,\n        { x, y, w, h, labels, shape, zones: mod[id] ?? zones, homing },\n      ],\n    ),\n  );\n}\n","import { Enum, XEnum, type XEnumItem } from \"@keybr/lang\";\nimport { Geometry } from \"./geometry.ts\";\nimport { Language } from \"./language.ts\";\nimport { angleMod, angleWideMod, type Mod, nullMod } from \"./mod.ts\";\n\nexport class Layout implements XEnumItem {\n  static custom(language: Language) {\n    return new Layout(\n      /* id= */ \"custom\",\n      /* xid= */ 0xff,\n      /* name= */ \"Custom\",\n      /* family= */ \"custom\",\n      /* language= */ language,\n      /* emulate= */ true,\n      /* geometries= */ Geometry.ALL,\n    );\n  }\n\n  static readonly EN_US = new Layout(\n    /* id= */ \"en-us\",\n    /* xid= */ 0x10,\n    /* name= */ \"{US}\",\n    /* family= */ \"qwerty\",\n    /* language= */ Language.EN,\n    /* emulate= */ false,\n    /* geometries= */ new Enum(\n      Geometry.ANSI_101,\n      Geometry.ANSI_101_FULL,\n      Geometry.ISO_102,\n      Geometry.ISO_102_FULL,\n      Geometry.MATRIX,\n    ),\n  );\n  static readonly EN_DVORAK = new Layout(\n    /* id= */ \"en-dvorak\",\n    /* xid= */ 0x18,\n    /* name= */ \"Dvorak\",\n    /* family= */ \"dvorak\",\n    /* language= */ Language.EN,\n    /* emulate= */ true,\n    /* geometries= */ new Enum(\n      Geometry.ANSI_101,\n      Geometry.ANSI_101_FULL,\n      Geometry.ISO_102,\n      Geometry.ISO_102_FULL,\n      Geometry.MATRIX,\n    ),\n  );\n  static readonly EN_DVORAK_PROG = new Layout(\n    /* id= */ \"en-dvorak-prog\",\n    /* xid= */ 0x15,\n    /* name= */ \"Dvorak (Programmers)\",\n    /* family= */ \"dvorak\",\n    /* language= */ Language.EN,\n    /* emulate= */ true,\n    /* geometries= */ new Enum(\n      Geometry.ANSI_101,\n      Geometry.ANSI_101_FULL,\n      Geometry.ISO_102,\n      Geometry.ISO_102_FULL,\n      Geometry.MATRIX,\n    ),\n  );\n  static readonly EN_COLEMAK = new Layout(\n    /* id= */ \"en-colemak\",\n    /* xid= */ 0x19,\n    /* name= */ \"Colemak\",\n    /* family= */ \"colemak\",\n    /* language= */ Language.EN,\n    /* emulate= */ true,\n    /* geometries= */ new Enum(\n      Geometry.ANSI_101,\n      Geometry.ANSI_101_FULL,\n      Geometry.ISO_102,\n      Geometry.ISO_102_FULL,\n      Geometry.MATRIX,\n    ),\n  );\n  static readonly EN_COLEMAK_DH_ANSI = new Layout(\n    /* id= */ \"en-colemak-dh\",\n    /* xid= */ 0x1b,\n    /* name= */ \"Colemak-DH (ANSI)\",\n    /* family= */ \"colemak-dh\",\n    /* language= */ Language.EN,\n    /* emulate= */ true,\n    /* geometries= */ new Enum(\n      Geometry.ANSI_101,\n      Geometry.ANSI_101_FULL,\n      Geometry.MATRIX,\n    ),\n    /* mod= */ angleMod,\n  );\n  static readonly EN_COLEMAK_DH_ANSI_WIDE = new Layout(\n    /* id= */ \"en-colemak-dh-wide\",\n    /* xid= */ 0x1f,\n    /* name= */ \"Colemak-DH Wide (ANSI)\",\n    /* family= */ \"colemak-dh-wide\",\n    /* language= */ Language.EN,\n    /* emulate= */ true,\n    /* geometries= */ new Enum(\n      Geometry.ANSI_101,\n      Geometry.ANSI_101_FULL,\n      Geometry.MATRIX,\n    ),\n    /* mod= */ angleWideMod,\n  );\n  static readonly EN_COLEMAK_DH_ISO = new Layout(\n    /* id= */ \"en-colemak-dh-iso\",\n    /* xid= */ 0x16,\n    /* name= */ \"Colemak-DH (ISO)\",\n    /* family= */ \"colemak-dh-iso\",\n    /* language= */ Language.EN,\n    /* emulate= */ true,\n    /* geometries= */ new Enum(\n      Geometry.ISO_102,\n      Geometry.ISO_102_FULL,\n      Geometry.MATRIX,\n    ),\n    /* mod= */ angleMod,\n  );\n  static readonly EN_COLEMAK_DH_ISO_WIDE = new Layout(\n    /* id= */ \"en-colemak-dh-iso-wide\",\n    /* xid= */ 0x17,\n    /* name= */ \"Colemak-DH Wide (ISO)\",\n    /* family= */ \"colemak-dh-iso-wide\",\n    /* language= */ Language.EN,\n    /* emulate= */ true,\n    /* geometries= */ new Enum(\n      Geometry.ISO_102,\n      Geometry.ISO_102_FULL,\n      Geometry.MATRIX,\n    ),\n    /* mod= */ angleWideMod,\n  );\n  static readonly EN_COLEMAK_DH_MATRIX = new Layout(\n    /* id= */ \"en-colemak-dh-matrix\",\n    /* xid= */ 0x1c,\n    /* name= */ \"Colemak-DH (matrix)\",\n    /* family= */ \"colemak-dh-matrix\",\n    /* language= */ Language.EN,\n    /* emulate= */ true,\n    /* geometries= */ new Enum(Geometry.MATRIX),\n  );\n  static readonly EN_WORKMAN = new Layout(\n    /* id= */ \"en-workman\",\n    /* xid= */ 0x1a,\n    /* name= */ \"Workman\",\n    /* family= */ \"workman\",\n    /* language= */ Language.EN,\n    /* emulate= */ true,\n    /* geometries= */ new Enum(\n      Geometry.ANSI_101,\n      Geometry.ANSI_101_FULL,\n      Geometry.ISO_102,\n      Geometry.ISO_102_FULL,\n      Geometry.MATRIX,\n    ),\n  );\n  static readonly EN_UK = new Layout(\n    /* id= */ \"en-uk\",\n    /* xid= */ 0x11,\n    /* name= */ \"{UK}\",\n    /* family= */ \"qwerty\",\n    /* language= */ Language.EN,\n    /* emulate= */ false,\n    /* geometries= */ new Enum(\n      Geometry.ISO_102,\n      Geometry.ISO_102_FULL,\n      Geometry.ANSI_101,\n      Geometry.ANSI_101_FULL,\n      Geometry.MATRIX,\n    ),\n  );\n  static readonly EN_JP = new Layout(\n    /* id= */ \"en-jp\",\n    /* xid= */ 0x12,\n    /* name= */ \"{JP}\",\n    /* family= */ \"qwerty\",\n    /* language= */ Language.EN,\n    /* emulate= */ false,\n    /* geometries= */ new Enum(\n      Geometry.JAPANESE_106,\n      Geometry.JAPANESE_106_FULL,\n    ),\n  );\n  static readonly DE_DE = new Layout(\n    /* id= */ \"de-de\",\n    /* xid= */ 0x20,\n    /* name= */ \"{DE}\",\n    /* family= */ \"qwertz\",\n    /* language= */ Language.DE,\n    /* emulate= */ false,\n    /* geometries= */ new Enum(\n      Geometry.ISO_102,\n      Geometry.ISO_102_FULL,\n      Geometry.ANSI_101,\n      Geometry.ANSI_101_FULL,\n      Geometry.MATRIX,\n    ),\n  );\n  static readonly DE_CH = new Layout(\n    /* id= */ \"de-ch\",\n    /* xid= */ 0x21,\n    /* name= */ \"{CH}\",\n    /* family= */ \"qwertz\",\n    /* language= */ Language.DE,\n    /* emulate= */ false,\n    /* geometries= */ new Enum(\n      Geometry.ISO_102,\n      Geometry.ISO_102_FULL,\n      Geometry.ANSI_101,\n      Geometry.ANSI_101_FULL,\n      Geometry.MATRIX,\n    ),\n  );\n  static readonly DE_NEO_2 = new Layout(\n    /* id= */ \"de-neo-2\",\n    /* xid= */ 0x22,\n    /* name= */ \"Neo 2\",\n    /* family= */ \"de-neo-2\",\n    /* language= */ Language.DE,\n    /* emulate= */ false,\n    /* geometries= */ new Enum(\n      Geometry.ISO_102,\n      Geometry.ISO_102_FULL,\n      Geometry.ANSI_101,\n      Geometry.ANSI_101_FULL,\n      Geometry.MATRIX,\n    ),\n  );\n  static readonly DE_BONE = new Layout(\n    /* id= */ \"de-bone\",\n    /* xid= */ 0x23,\n    /* name= */ \"Bone\",\n    /* family= */ \"de-bone\",\n    /* language= */ Language.DE,\n    /* emulate= */ false,\n    /* geometries= */ new Enum(\n      Geometry.ISO_102,\n      Geometry.ISO_102_FULL,\n      Geometry.ANSI_101,\n      Geometry.ANSI_101_FULL,\n      Geometry.MATRIX,\n    ),\n  );\n  static readonly DE_MINE = new Layout(\n    /* id= */ \"de-mine\",\n    /* xid= */ 0x24,\n    /* name= */ \"Mine\",\n    /* family= */ \"de-mine\",\n    /* language= */ Language.DE,\n    /* emulate= */ false,\n    /* geometries= */ new Enum(\n      Geometry.ISO_102,\n      Geometry.ISO_102_FULL,\n      Geometry.ANSI_101,\n      Geometry.ANSI_101_FULL,\n      Geometry.MATRIX,\n    ),\n  );\n  static readonly DE_NOTED = new Layout(\n    /* id= */ \"de-noted\",\n    /* xid= */ 0x25,\n    /* name= */ \"Noted\",\n    /* family= */ \"de-noted\",\n    /* language= */ Language.DE,\n    /* emulate= */ false,\n    /* geometries= */ new Enum(\n      Geometry.ISO_102,\n      Geometry.ISO_102_FULL,\n      Geometry.ANSI_101,\n      Geometry.ANSI_101_FULL,\n      Geometry.MATRIX,\n    ),\n  );\n  static readonly DE_CMOS = new Layout(\n    /* id= */ \"de-cmos\",\n    /* xid= */ 0x26,\n    /* name= */ \"CMOS\",\n    /* family= */ \"de-cmos\",\n    /* language= */ Language.DE,\n    /* emulate= */ false,\n    /* geometries= */ new Enum(\n      Geometry.ISO_102,\n      Geometry.ISO_102_FULL,\n      Geometry.ANSI_101,\n      Geometry.ANSI_101_FULL,\n      Geometry.MATRIX,\n    ),\n  );\n  static readonly FR_FR = new Layout(\n    /* id= */ \"fr-fr\",\n    /* xid= */ 0x30,\n    /* name= */ \"{FR}\",\n    /* family= */ \"azerty\",\n    /* language= */ Language.FR,\n    /* emulate= */ false,\n    /* geometries= */ new Enum(\n      Geometry.ISO_102,\n      Geometry.ISO_102_FULL,\n      Geometry.ANSI_101,\n      Geometry.ANSI_101_FULL,\n      Geometry.MATRIX,\n    ),\n  );\n  static readonly FR_CA = new Layout(\n    /* id= */ \"fr-ca\",\n    /* xid= */ 0x31,\n    /* name= */ \"{CA}\",\n    /* family= */ \"qwerty\",\n    /* language= */ Language.FR,\n    /* emulate= */ false,\n    /* geometries= */ new Enum(\n      Geometry.ISO_102,\n      Geometry.ISO_102_FULL,\n      Geometry.ANSI_101,\n      Geometry.ANSI_101_FULL,\n      Geometry.MATRIX,\n    ),\n  );\n  static readonly FR_CH = new Layout(\n    /* id= */ \"fr-ch\",\n    /* xid= */ 0x32,\n    /* name= */ \"{CH}\",\n    /* family= */ \"qwertz\",\n    /* language= */ Language.FR,\n    /* emulate= */ false,\n    /* geometries= */ new Enum(\n      Geometry.ISO_102,\n      Geometry.ISO_102_FULL,\n      Geometry.ANSI_101,\n      Geometry.ANSI_101_FULL,\n      Geometry.MATRIX,\n    ),\n  );\n  static readonly FR_BEPO = new Layout(\n    /* id= */ \"fr-bepo\",\n    /* xid= */ 0x33,\n    /* name= */ \"Bepo\",\n    /* family= */ \"fr-bepo\",\n    /* language= */ Language.FR,\n    /* emulate= */ false,\n    /* geometries= */ new Enum(\n      Geometry.ISO_102,\n      Geometry.ISO_102_FULL,\n      Geometry.ANSI_101,\n      Geometry.ANSI_101_FULL,\n      Geometry.MATRIX,\n    ),\n  );\n  static readonly FR_ERGO_L = new Layout(\n    /* id= */ \"fr-ergol\",\n    /* xid= */ 0x34,\n    /* name= */ \"Ergo-L\",\n    /* family= */ \"fr-ergol\",\n    /* language= */ Language.FR,\n    /* emulate= */ false,\n    /* geometries= */ new Enum(\n      Geometry.ISO_102,\n      Geometry.ISO_102_FULL,\n      Geometry.ANSI_101,\n      Geometry.ANSI_101_FULL,\n      Geometry.MATRIX,\n    ),\n  );\n  static readonly FR_OPTIMOT_ERGO = new Layout(\n    /* id= */ \"fr-optimot-ergo\",\n    /* xid= */ 0x35,\n    /* name= */ \"Optimot Ergo\",\n    /* family= */ \"fr-optimot-ergo\",\n    /* language= */ Language.FR,\n    /* emulate= */ false,\n    /* geometries= */ new Enum(\n      Geometry.ISO_102,\n      Geometry.ISO_102_FULL,\n      Geometry.ANSI_101,\n      Geometry.ANSI_101_FULL,\n      Geometry.MATRIX,\n    ),\n  );\n  static readonly FR_ERGLACE = new Layout(\n    /* id= */ \"fr-erglace\",\n    /* xid= */ 0x36,\n    /* name= */ \"Erglace\",\n    /* family= */ \"fr-erglace\",\n    /* language= */ Language.FR,\n    /* emulate= */ false,\n    /* geometries= */ new Enum(\n      Geometry.ISO_102,\n      Geometry.ISO_102_FULL,\n      Geometry.ANSI_101,\n      Geometry.ANSI_101_FULL,\n      Geometry.MATRIX,\n    ),\n  );\n  static readonly IT_IT = new Layout(\n    /* id= */ \"it-it\",\n    /* xid= */ 0x40,\n    /* name= */ \"{IT}\",\n    /* family= */ \"qwerty\",\n    /* language= */ Language.IT,\n    /* emulate= */ false,\n    /* geometries= */ new Enum(\n      Geometry.ISO_102,\n      Geometry.ISO_102_FULL,\n      Geometry.ANSI_101,\n      Geometry.ANSI_101_FULL,\n      Geometry.MATRIX,\n    ),\n  );\n  static readonly LT_LT = new Layout(\n    /* id= */ \"lt-lt\",\n    /* xid= */ 0x48,\n    /* name= */ \"{LT}\",\n    /* family= */ \"lt-lt\",\n    /* language= */ Language.LT,\n    /* emulate= */ true,\n    /* geometries= */ new Enum(\n      Geometry.ISO_102,\n      Geometry.ISO_102_FULL,\n      Geometry.ANSI_101,\n      Geometry.ANSI_101_FULL,\n      Geometry.MATRIX,\n    ),\n  );\n  static readonly ES_ES = new Layout(\n    /* id= */ \"es-es\",\n    /* xid= */ 0x50,\n    /* name= */ \"{ES}\",\n    /* family= */ \"qwerty\",\n    /* language= */ Language.ES,\n    /* emulate= */ false,\n    /* geometries= */ new Enum(\n      Geometry.ISO_102,\n      Geometry.ISO_102_FULL,\n      Geometry.ANSI_101,\n      Geometry.ANSI_101_FULL,\n      Geometry.MATRIX,\n    ),\n  );\n  static readonly PL_PL = new Layout(\n    /* id= */ \"pl-pl\",\n    /* xid= */ 0x58,\n    /* name= */ \"{PL}\",\n    /* family= */ \"qwerty\",\n    /* language= */ Language.PL,\n    /* emulate= */ false,\n    /* geometries= */ new Enum(\n      Geometry.ISO_102,\n      Geometry.ISO_102_FULL,\n      Geometry.ANSI_101,\n      Geometry.ANSI_101_FULL,\n      Geometry.MATRIX,\n    ),\n  );\n  static readonly PT_BR = new Layout(\n    /* id= */ \"pt-br\",\n    /* xid= */ 0x60,\n    /* name= */ \"{BR} (ABNT2)\",\n    /* family= */ \"qwerty\",\n    /* language= */ Language.PT,\n    /* emulate= */ false,\n    /* geometries= */ new Enum(\n      Geometry.BRAZILIAN_104,\n      Geometry.BRAZILIAN_104_FULL,\n      Geometry.ISO_102,\n      Geometry.ISO_102_FULL,\n      Geometry.ANSI_101,\n      Geometry.ANSI_101_FULL,\n      Geometry.MATRIX,\n    ),\n  );\n  static readonly PT_PT = new Layout(\n    /* id= */ \"pt-pt\",\n    /* xid= */ 0x62,\n    /* name= */ \"{PT}\",\n    /* family= */ \"qwerty\",\n    /* language= */ Language.PT,\n    /* emulate= */ false,\n    /* geometries= */ new Enum(\n      Geometry.ISO_102,\n      Geometry.ISO_102_FULL,\n      Geometry.ANSI_101,\n      Geometry.ANSI_101_FULL,\n      Geometry.MATRIX,\n    ),\n  );\n  static readonly RU_RU = new Layout(\n    /* id= */ \"ru-ru\",\n    /* xid= */ 0x70,\n    /* name= */ \"{RU}\",\n    /* family= */ \"йцукен\",\n    /* language= */ Language.RU,\n    /* emulate= */ true,\n    /* geometries= */ new Enum(\n      Geometry.ISO_102,\n      Geometry.ISO_102_FULL,\n      Geometry.ANSI_101,\n      Geometry.ANSI_101_FULL,\n      Geometry.MATRIX,\n    ),\n  );\n  static readonly BE_BY = new Layout(\n    /* id= */ \"be-by\",\n    /* xid= */ 0x74,\n    /* name= */ \"{BY}\",\n    /* family= */ \"йцукен\",\n    /* language= */ Language.BE,\n    /* emulate= */ true,\n    /* geometries= */ new Enum(\n      Geometry.ISO_102,\n      Geometry.ISO_102_FULL,\n      Geometry.ANSI_101,\n      Geometry.ANSI_101_FULL,\n      Geometry.MATRIX,\n    ),\n  );\n  static readonly UK_UA = new Layout(\n    /* id= */ \"uk-ua\",\n    /* xid= */ 0x78,\n    /* name= */ \"{UA}\",\n    /* family= */ \"йцукен\",\n    /* language= */ Language.UK,\n    /* emulate= */ true,\n    /* geometries= */ new Enum(\n      Geometry.ISO_102,\n      Geometry.ISO_102_FULL,\n      Geometry.ANSI_101,\n      Geometry.ANSI_101_FULL,\n      Geometry.MATRIX,\n    ),\n  );\n  static readonly SV_SE = new Layout(\n    /* id= */ \"sv-se\",\n    /* xid= */ 0x80,\n    /* name= */ \"{SE}\",\n    /* family= */ \"qwerty\",\n    /* language= */ Language.SV,\n    /* emulate= */ false,\n    /* geometries= */ new Enum(\n      Geometry.ISO_102,\n      Geometry.ISO_102_FULL,\n      Geometry.ANSI_101,\n      Geometry.ANSI_101_FULL,\n      Geometry.MATRIX,\n    ),\n  );\n  static readonly CS_CZ = new Layout(\n    /* id= */ \"cs-cz\",\n    /* xid= */ 0x81,\n    /* name= */ \"{CZ}\",\n    /* family= */ \"qwertz\",\n    /* language= */ Language.CS,\n    /* emulate= */ false,\n    /* geometries= */ new Enum(\n      Geometry.ISO_102,\n      Geometry.ISO_102_FULL,\n      Geometry.ANSI_101,\n      Geometry.ANSI_101_FULL,\n      Geometry.MATRIX,\n    ),\n  );\n  static readonly SL_SI = new Layout(\n    /* id= */ \"sl-si\",\n    /* xid= */ 0x82,\n    /* name= */ \"{SI}\",\n    /* family= */ \"qwertz\",\n    /* language= */ Language.SL,\n    /* emulate= */ false,\n    /* geometries= */ new Enum(\n      Geometry.ISO_102,\n      Geometry.ISO_102_FULL,\n      Geometry.ANSI_101,\n      Geometry.ANSI_101_FULL,\n      Geometry.MATRIX,\n    ),\n  );\n  static readonly EL_GR = new Layout(\n    /* id= */ \"el-gr\",\n    /* xid= */ 0x83,\n    /* name= */ \"{GR}\",\n    /* family= */ \"greek\",\n    /* language= */ Language.EL,\n    /* emulate= */ false,\n    /* geometries= */ new Enum(\n      Geometry.ISO_102,\n      Geometry.ISO_102_FULL,\n      Geometry.ANSI_101,\n      Geometry.ANSI_101_FULL,\n      Geometry.MATRIX,\n    ),\n  );\n  static readonly NB_NO = new Layout(\n    /* id= */ \"nb-no\",\n    /* xid= */ 0x88,\n    /* name= */ \"{NO}\",\n    /* family= */ \"qwerty\",\n    /* language= */ Language.NB,\n    /* emulate= */ false,\n    /* geometries= */ new Enum(\n      Geometry.ISO_102,\n      Geometry.ISO_102_FULL,\n      Geometry.ANSI_101,\n      Geometry.ANSI_101_FULL,\n      Geometry.MATRIX,\n    ),\n  );\n  static readonly HE_IL = new Layout(\n    /* id= */ \"he-il\",\n    /* xid= */ 0x84,\n    /* name= */ \"{IL} (מסורתי)\",\n    /* family= */ \"hebrew\",\n    /* language= */ Language.HE,\n    /* emulate= */ true,\n    /* geometries= */ new Enum(\n      Geometry.ISO_102,\n      Geometry.ISO_102_FULL,\n      Geometry.ANSI_101,\n      Geometry.ANSI_101_FULL,\n      Geometry.MATRIX,\n    ),\n  );\n  static readonly NL_NL = new Layout(\n    /* id= */ \"nl-nl\",\n    /* xid= */ 0x85,\n    /* name= */ \"{NL}\",\n    /* family= */ \"qwerty\",\n    /* language= */ Language.NL,\n    /* emulate= */ false,\n    /* geometries= */ new Enum(\n      Geometry.ANSI_101,\n      Geometry.ANSI_101_FULL,\n      Geometry.ISO_102,\n      Geometry.ISO_102_FULL,\n      Geometry.MATRIX,\n    ),\n  );\n  static readonly NL_BE = new Layout(\n    /* id= */ \"nl-be\",\n    /* xid= */ 0x86,\n    /* name= */ \"{BE}\",\n    /* family= */ \"azerty\",\n    /* language= */ Language.NL,\n    /* emulate= */ false,\n    /* geometries= */ new Enum(\n      Geometry.ANSI_101,\n      Geometry.ANSI_101_FULL,\n      Geometry.ISO_102,\n      Geometry.ISO_102_FULL,\n      Geometry.MATRIX,\n    ),\n  );\n  static readonly HU_HU = new Layout(\n    /* id= */ \"hu-hu\",\n    /* xid= */ 0x87,\n    /* name= */ \"{HU}\",\n    /* family= */ \"qwertz\",\n    /* language= */ Language.HU,\n    /* emulate= */ false,\n    /* geometries= */ new Enum(\n      Geometry.ISO_102,\n      Geometry.ISO_102_FULL,\n      Geometry.ANSI_101,\n      Geometry.ANSI_101_FULL,\n      Geometry.MATRIX,\n    ),\n  );\n  static readonly TR_TR_Q = new Layout(\n    /* id= */ \"tr-tr-q\",\n    /* xid= */ 0x89,\n    /* name= */ \"{TR} Q\",\n    /* family= */ \"qwerty\",\n    /* language= */ Language.TR,\n    /* emulate= */ false,\n    /* geometries= */ new Enum(\n      Geometry.ISO_102,\n      Geometry.ISO_102_FULL,\n      Geometry.ANSI_101,\n      Geometry.ANSI_101_FULL,\n      Geometry.MATRIX,\n    ),\n  );\n  static readonly TR_TR_F = new Layout(\n    /* id= */ \"tr-tr-f\",\n    /* xid= */ 0x8a,\n    /* name= */ \"{TR} F\",\n    /* family= */ \"tr-tr-f\",\n    /* language= */ Language.TR,\n    /* emulate= */ false,\n    /* geometries= */ new Enum(\n      Geometry.ISO_102,\n      Geometry.ISO_102_FULL,\n      Geometry.ANSI_101,\n      Geometry.ANSI_101_FULL,\n      Geometry.MATRIX,\n    ),\n  );\n  static readonly EN_CANARY = new Layout(\n    /* id= */ \"en-canary\",\n    /* xid= */ 0x1e,\n    /* name= */ \"Canary\",\n    /* family= */ \"canary\",\n    /* language= */ Language.EN,\n    /* emulate= */ true,\n    /* geometries= */ new Enum(\n      Geometry.ANSI_101,\n      Geometry.ANSI_101_FULL,\n      Geometry.ISO_102,\n      Geometry.ISO_102_FULL,\n      Geometry.MATRIX,\n    ),\n  );\n  static readonly EN_CANARY_MATRIX = new Layout(\n    /* id= */ \"en-canary-matrix\",\n    /* xid= */ 0x1d,\n    /* name= */ \"Canary (matrix)\",\n    /* family= */ \"canary-matrix\",\n    /* language= */ Language.EN,\n    /* emulate= */ true,\n    /* geometries= */ new Enum(Geometry.MATRIX),\n  );\n  static readonly EN_NORMAN = new Layout(\n    /* id= */ \"en-norman\",\n    /* xid= */ 0x8b,\n    /* name= */ \"Norman\",\n    /* family= */ \"norman\",\n    /* language= */ Language.EN,\n    /* emulate= */ true,\n    /* geometries= */ new Enum(\n      Geometry.ANSI_101,\n      Geometry.ANSI_101_FULL,\n      Geometry.ISO_102,\n      Geometry.ISO_102_FULL,\n      Geometry.MATRIX,\n    ),\n  );\n  static readonly EN_HALMAK = new Layout(\n    /* id= */ \"en-halmak\",\n    /* xid= */ 0x8c,\n    /* name= */ \"Halmak\",\n    /* family= */ \"halmak\",\n    /* language= */ Language.EN,\n    /* emulate= */ true,\n    /* geometries= */ new Enum(\n      Geometry.ANSI_101,\n      Geometry.ANSI_101_FULL,\n      Geometry.ISO_102,\n      Geometry.ISO_102_FULL,\n      Geometry.MATRIX,\n    ),\n  );\n  static readonly AR_SA = new Layout(\n    /* id= */ \"ar-sa\",\n    /* xid= */ 0x8d,\n    /* name= */ \"{SA} (101)\",\n    /* family= */ \"arabic\",\n    /* language= */ Language.AR,\n    /* emulate= */ true,\n    /* geometries= */ new Enum(\n      Geometry.ANSI_101,\n      Geometry.ANSI_101_FULL,\n      Geometry.ISO_102,\n      Geometry.ISO_102_FULL,\n      Geometry.MATRIX,\n    ),\n  );\n  static readonly AR_SA_102 = new Layout(\n    /* id= */ \"ar-sa-102\",\n    /* xid= */ 0x8e,\n    /* name= */ \"{SA} (102)\",\n    /* family= */ \"arabic\",\n    /* language= */ Language.AR,\n    /* emulate= */ true,\n    /* geometries= */ new Enum(\n      Geometry.ANSI_101,\n      Geometry.ANSI_101_FULL,\n      Geometry.ISO_102,\n      Geometry.ISO_102_FULL,\n      Geometry.MATRIX,\n    ),\n  );\n  static readonly FA_IR_LEGACY = new Layout(\n    /* id= */ \"fa-ir-legacy\",\n    /* xid= */ 0x8f,\n    /* name= */ \"Persian Legacy «پیش فرض فارسی»\",\n    /* family= */ \"persian\",\n    /* language= */ Language.FA,\n    /* emulate= */ true,\n    /* geometries= */ new Enum(\n      Geometry.ANSI_101,\n      Geometry.ANSI_101_FULL,\n      Geometry.ISO_102,\n      Geometry.ISO_102_FULL,\n      Geometry.MATRIX,\n    ),\n  );\n  static readonly HE_IL_ARKN = new Layout(\n    /* id= */ \"he-il-arkn\",\n    /* xid= */ 0x90,\n    /* name= */ \"{IL} (ארקן)\",\n    /* family= */ \"hebrew-arkn\",\n    /* language= */ Language.HE,\n    /* emulate= */ true,\n    /* geometries= */ new Enum(\n      Geometry.ISO_102,\n      Geometry.ISO_102_FULL,\n      Geometry.ANSI_101,\n      Geometry.ANSI_101_FULL,\n      Geometry.MATRIX,\n    ),\n  );\n  static readonly FA_IR = new Layout(\n    /* id= */ \"fa-ir\",\n    /* xid= */ 0x91,\n    /* name= */ \"Persian Standard «استاندارد فارسی»\",\n    /* family= */ \"persian\",\n    /* language= */ Language.FA,\n    /* emulate= */ true,\n    /* geometries= */ new Enum(\n      Geometry.ANSI_101,\n      Geometry.ANSI_101_FULL,\n      Geometry.ISO_102,\n      Geometry.ISO_102_FULL,\n      Geometry.MATRIX,\n    ),\n  );\n  static readonly EN_ENGRAM = new Layout(\n    /* id= */ \"en-engram\",\n    /* xid= */ 0x92,\n    /* name= */ \"Engram\",\n    /* family= */ \"en-engram\",\n    /* language= */ Language.EN,\n    /* emulate= */ true,\n    /* geometries= */ new Enum(\n      Geometry.ANSI_101,\n      Geometry.ANSI_101_FULL,\n      Geometry.ISO_102,\n      Geometry.ISO_102_FULL,\n      Geometry.MATRIX,\n    ),\n  );\n  static readonly EN_NERPS = new Layout(\n    /* id= */ \"en-nerps\",\n    /* xid= */ 0x93,\n    /* name= */ \"Nerps\",\n    /* family= */ \"nerps\",\n    /* language= */ Language.EN,\n    /* emulate= */ true,\n    /* geometries= */ new Enum(\n      Geometry.ANSI_101,\n      Geometry.ANSI_101_FULL,\n      Geometry.ISO_102,\n      Geometry.ISO_102_FULL,\n      Geometry.MATRIX,\n    ),\n  );\n  static readonly EN_NERPS_MATRIX = new Layout(\n    /* id= */ \"en-nerps-matrix\",\n    /* xid= */ 0x94,\n    /* name= */ \"Nerps (matrix)\",\n    /* family= */ \"nerps-matrix\",\n    /* language= */ Language.EN,\n    /* emulate= */ true,\n    /* geometries= */ new Enum(Geometry.MATRIX),\n  );\n  static readonly EN_HANDS_DOWN_NEU = new Layout(\n    /* id= */ \"en-hands-down-neu\",\n    /* xid= */ 0x95,\n    /* name= */ \"Hands Down Neu\",\n    /* family= */ \"hands-down-neu\",\n    /* language= */ Language.EN,\n    /* emulate= */ true,\n    /* geometries= */ new Enum(\n      Geometry.MATRIX,\n      Geometry.ANSI_101,\n      Geometry.ANSI_101_FULL,\n      Geometry.ISO_102,\n      Geometry.ISO_102_FULL,\n    ),\n  );\n  static readonly EN_STURDY = new Layout(\n    /* id= */ \"en-sturdy\",\n    /* xid= */ 0x96,\n    /* name= */ \"Sturdy\",\n    /* family= */ \"sturdy\",\n    /* language= */ Language.EN,\n    /* emulate= */ true,\n    /* geometries= */ new Enum(Geometry.MATRIX),\n  );\n  static readonly ES_MX = new Layout(\n    /* id= */ \"es-mx\",\n    /* xid= */ 0x97,\n    /* name= */ \"{MX}\",\n    /* family= */ \"qwerty\",\n    /* language= */ Language.ES,\n    /* emulate= */ false,\n    /* geometries= */ new Enum(\n      Geometry.ISO_102,\n      Geometry.ISO_102_FULL,\n      Geometry.ANSI_101,\n      Geometry.ANSI_101_FULL,\n      Geometry.MATRIX,\n    ),\n  );\n  static readonly PL_FWYR = new Layout(\n    /* id= */ \"pl-fwyr\",\n    /* xid= */ 0x98,\n    /* name= */ \"FWYR\",\n    /* family= */ \"fwyr\",\n    /* language= */ Language.PL,\n    /* emulate= */ false,\n    /* geometries= */ new Enum(\n      Geometry.ISO_102,\n      Geometry.ISO_102_FULL,\n      Geometry.ANSI_101,\n      Geometry.ANSI_101_FULL,\n      Geometry.MATRIX,\n    ),\n  );\n  static readonly EN_GRAPHITE = new Layout(\n    /* id= */ \"en-graphite\",\n    /* xid= */ 0x99,\n    /* name= */ \"Graphite\",\n    /* family= */ \"en-graphite\",\n    /* language= */ Language.EN,\n    /* emulate= */ true,\n    /* geometries= */ new Enum(\n      Geometry.ANSI_101,\n      Geometry.ANSI_101_FULL,\n      Geometry.ISO_102,\n      Geometry.ISO_102_FULL,\n      Geometry.MATRIX,\n    ),\n  );\n  static readonly TH_TH = new Layout(\n    /* id= */ \"th-th\",\n    /* xid= */ 0x9a,\n    /* name= */ \"Thai Kedmanee\",\n    /* family= */ \"th-th\",\n    /* language= */ Language.TH,\n    /* emulate= */ true,\n    /* geometries= */ new Enum(\n      Geometry.ANSI_101,\n      Geometry.ANSI_101_FULL,\n      Geometry.ISO_102,\n      Geometry.ISO_102_FULL,\n      Geometry.MATRIX,\n    ),\n  );\n  static readonly TH_PAT = new Layout(\n    /* id= */ \"th-th-pat\",\n    /* xid= */ 0x9b,\n    /* name= */ \"Thai Pattachote\",\n    /* family= */ \"th-th-pat\",\n    /* language= */ Language.TH,\n    /* emulate= */ true,\n    /* geometries= */ new Enum(\n      Geometry.ANSI_101,\n      Geometry.ANSI_101_FULL,\n      Geometry.ISO_102,\n      Geometry.ISO_102_FULL,\n      Geometry.MATRIX,\n    ),\n  );\n  static readonly TH_MAN = new Layout(\n    /* id= */ \"th-th-man\",\n    /* xid= */ 0x9c,\n    /* name= */ \"Thai Manoonchai V1\",\n    /* family= */ \"th-th-man\",\n    /* language= */ Language.TH,\n    /* emulate= */ true,\n    /* geometries= */ new Enum(\n      Geometry.ANSI_101,\n      Geometry.ANSI_101_FULL,\n      Geometry.ISO_102,\n      Geometry.ISO_102_FULL,\n      Geometry.MATRIX,\n    ),\n  );\n  static readonly NB_KVIKK = new Layout(\n    /* id= */ \"nb-no-kvikk\",\n    /* xid= */ 0x9d,\n    /* name= */ \"Kvikk\",\n    /* family= */ \"kvikk\",\n    /* language= */ Language.NB,\n    /* emulate= */ true,\n    /* geometries= */ new Enum(\n      Geometry.ISO_102,\n      Geometry.ISO_102_FULL,\n      Geometry.ANSI_101,\n      Geometry.ANSI_101_FULL,\n      Geometry.MATRIX,\n    ),\n  );\n  static readonly NB_SKARP = new Layout(\n    /* id= */ \"nb-no-skarp\",\n    /* xid= */ 0x9e,\n    /* name= */ \"Skarp\",\n    /* family= */ \"skarp\",\n    /* language= */ Language.NB,\n    /* emulate= */ true,\n    /* geometries= */ new Enum(\n      Geometry.ISO_102,\n      Geometry.ISO_102_FULL,\n      Geometry.ANSI_101,\n      Geometry.ANSI_101_FULL,\n      Geometry.MATRIX,\n    ),\n  );\n  static readonly RO_RO = new Layout(\n    /* id= */ \"ro-ro\",\n    /* xid= */ 0xa0,\n    /* name= */ \"{RO}\",\n    /* family= */ \"qwerty\",\n    /* language= */ Language.RO,\n    /* emulate= */ false,\n    /* geometries= */ new Enum(\n      Geometry.ISO_102,\n      Geometry.ISO_102_FULL,\n      Geometry.ANSI_101,\n      Geometry.ANSI_101_FULL,\n      Geometry.MATRIX,\n    ),\n  );\n  static readonly EN_GALLIUM = new Layout(\n    /* id= */ \"en-gallium\",\n    /* xid= */ 0xa1,\n    /* name= */ \"Gallium\",\n    /* family= */ \"gallium\",\n    /* language= */ Language.EN,\n    /* emulate= */ true,\n    /* geometries= */ new Enum(\n      Geometry.ANSI_101,\n      Geometry.ANSI_101_FULL,\n      Geometry.ISO_102,\n      Geometry.ISO_102_FULL,\n      Geometry.MATRIX,\n    ),\n  );\n  static readonly EN_GALLIUM_MATRIX = new Layout(\n    /* id= */ \"en-gallium-matrix\",\n    /* xid= */ 0xa2,\n    /* name= */ \"Gallium (matrix)\",\n    /* family= */ \"gallium-matrix\",\n    /* language= */ Language.EN,\n    /* emulate= */ true,\n    /* geometries= */ new Enum(Geometry.MATRIX),\n  );\n  static readonly EN_HANDS_DOWN_PROMETHIUM = new Layout(\n    /* id= */ \"en-hands-down-promethium\",\n    /* xid= */ 0xa3,\n    /* name= */ \"Hands Down Promethium (Matrix)\",\n    /* family= */ \"en-hands-down-promethium\",\n    /* language= */ Language.EN,\n    /* emulate= */ true,\n    /* geometries= */ new Enum(Geometry.MATRIX),\n  );\n\n  static readonly ALL = new XEnum<Layout>(\n    Layout.EN_US,\n    Layout.EN_DVORAK,\n    Layout.EN_DVORAK_PROG,\n    Layout.EN_COLEMAK,\n    Layout.EN_COLEMAK_DH_ANSI,\n    Layout.EN_COLEMAK_DH_ANSI_WIDE,\n    Layout.EN_COLEMAK_DH_ISO,\n    Layout.EN_COLEMAK_DH_ISO_WIDE,\n    Layout.EN_COLEMAK_DH_MATRIX,\n    Layout.EN_WORKMAN,\n    Layout.EN_CANARY,\n    Layout.EN_CANARY_MATRIX,\n    Layout.EN_NERPS,\n    Layout.EN_NERPS_MATRIX,\n    Layout.EN_HANDS_DOWN_NEU,\n    Layout.EN_HANDS_DOWN_PROMETHIUM,\n    Layout.EN_STURDY,\n    Layout.EN_NORMAN,\n    Layout.EN_HALMAK,\n    Layout.EN_ENGRAM,\n    Layout.EN_GALLIUM,\n    Layout.EN_GALLIUM_MATRIX,\n    Layout.EN_GRAPHITE,\n    Layout.EN_UK,\n    Layout.EN_JP,\n    Layout.EL_GR,\n    Layout.CS_CZ,\n    Layout.DE_DE,\n    Layout.DE_CH,\n    Layout.DE_NEO_2,\n    Layout.DE_BONE,\n    Layout.DE_MINE,\n    Layout.DE_NOTED,\n    Layout.DE_CMOS,\n    Layout.FR_FR,\n    Layout.FR_CA,\n    Layout.FR_CH,\n    Layout.FR_BEPO,\n    Layout.FR_ERGO_L,\n    Layout.FR_ERGLACE,\n    Layout.FR_OPTIMOT_ERGO,\n    Layout.HE_IL,\n    Layout.HE_IL_ARKN,\n    Layout.HU_HU,\n    Layout.IT_IT,\n    Layout.LT_LT,\n    Layout.NB_NO,\n    Layout.NB_KVIKK,\n    Layout.NB_SKARP,\n    Layout.NL_NL,\n    Layout.NL_BE,\n    Layout.ES_ES,\n    Layout.ES_MX,\n    Layout.PL_PL,\n    Layout.PL_FWYR,\n    Layout.PT_BR,\n    Layout.PT_PT,\n    Layout.BE_BY,\n    Layout.SL_SI,\n    Layout.SV_SE,\n    Layout.UK_UA,\n    Layout.RU_RU,\n    Layout.TR_TR_Q,\n    Layout.TR_TR_F,\n    Layout.AR_SA,\n    Layout.AR_SA_102,\n    Layout.FA_IR,\n    Layout.FA_IR_LEGACY,\n    Layout.TH_TH,\n    Layout.TH_PAT,\n    Layout.TH_MAN,\n    Layout.RO_RO,\n  );\n\n  static findLayout(localeId: string): Layout | null {\n    const { language = null, region = null } = (() => {\n      try {\n        return new Intl.Locale(localeId);\n      } catch {\n        return {} as Intl.Locale;\n      }\n    })();\n    if (language != null && region != null) {\n      const id = `${language}-${region}`.toLowerCase();\n      for (const layout of Layout.ALL) {\n        if (layout.id === id) {\n          return layout;\n        }\n      }\n    }\n    if (language != null) {\n      const id = `${language}-`.toLowerCase();\n      for (const layout of Layout.ALL) {\n        if (layout.id.startsWith(id)) {\n          return layout;\n        }\n      }\n    }\n    return null;\n  }\n\n  static selectableLayouts(language: Language): Layout[] {\n    const list = Layout.ALL.filter(\n      (layout) => layout.language.script === language.script,\n    );\n    return [\n      ...list.filter((layout) => layout.language.id === language.id),\n      ...list.filter((layout) => layout.language.id !== language.id),\n    ];\n  }\n\n  static selectLayout(language: Language): Layout {\n    const [layout] = Layout.selectableLayouts(language);\n    if (layout == null) {\n      throw new Error(); // Unreachable.\n    }\n    return layout;\n  }\n\n  private constructor(\n    readonly id: string,\n    readonly xid: number,\n    readonly name: string,\n    readonly family: string,\n    readonly language: Language,\n    readonly emulate: boolean,\n    readonly geometries: Enum<Geometry>,\n    readonly mod: Mod = nullMod,\n  ) {\n    Object.freeze(this);\n  }\n\n  toString() {\n    return this.id;\n  }\n\n  toJSON() {\n    return this.id;\n  }\n}\n","import {\n  booleanProp,\n  enumProp,\n  itemProp,\n  type Settings,\n  xitemProp,\n} from \"@keybr/settings\";\nimport { Geometry, ZoneMod } from \"./geometry.ts\";\nimport { Language } from \"./language.ts\";\nimport { Layout } from \"./layout.ts\";\nimport { nullMod } from \"./mod.ts\";\n\nexport enum Emulation {\n  /**\n   * No emulation.\n   */\n  None = 0,\n  /**\n   * Assumes that the physical key locations are correct,\n   * fixes the character codes.\n   */\n  Forward = 1,\n  /**\n   * Assumes that the character codes are correct,\n   * fixes the physical key locations.\n   * It reverses the effect of layout emulation in hardware.\n   */\n  Reverse = 2,\n}\n\nexport const keyboardProps = {\n  language: itemProp(\"keyboard.language\", Language.ALL, Language.EN),\n  layout: xitemProp(\"keyboard.layout\", Layout.ALL, Layout.EN_US),\n  geometry: itemProp(\"keyboard.geometry\", Geometry.ALL, Geometry.ANSI_101),\n  zones: itemProp(\"keyboard.zones\", ZoneMod.ALL, ZoneMod.STANDARD),\n  emulation: enumProp(\"keyboard.emulation\", Emulation, Emulation.Forward),\n  colors: booleanProp(\"keyboard.colors\", true),\n  pointers: booleanProp(\"keyboard.pointers\", true),\n} as const;\n\nexport class KeyboardOptions {\n  static default(): KeyboardOptions {\n    return new KeyboardOptions(\n      Language.EN,\n      Layout.EN_US,\n      Geometry.ANSI_101,\n      ZoneMod.STANDARD,\n    );\n  }\n\n  static from(settings: Settings): KeyboardOptions {\n    const language = settings.get(keyboardProps.language);\n    const layout = settings.get(keyboardProps.layout);\n    const geometry = settings.get(keyboardProps.geometry);\n    const zones = settings.get(keyboardProps.zones);\n    return KeyboardOptions.default()\n      .withLanguage(language)\n      .withLayout(layout)\n      .withGeometry(geometry)\n      .withZones(zones);\n  }\n\n  readonly #language: Language;\n  readonly #layout: Layout;\n  readonly #geometry: Geometry;\n  readonly #zones: ZoneMod;\n\n  private constructor(\n    language: Language,\n    layout: Layout,\n    geometry: Geometry,\n    zones: ZoneMod,\n  ) {\n    this.#language = language;\n    this.#layout = layout;\n    this.#geometry = geometry;\n    this.#zones = zones;\n  }\n\n  get language(): Language {\n    return this.#language;\n  }\n\n  get layout(): Layout {\n    return this.#layout;\n  }\n\n  get geometry(): Geometry {\n    return this.#geometry;\n  }\n\n  get zones(): ZoneMod {\n    return this.#zones;\n  }\n\n  selectableLanguages(): Language[] {\n    return [...Language.ALL];\n  }\n\n  selectableLayouts(): Layout[] {\n    return Layout.selectableLayouts(this.#language);\n  }\n\n  selectableGeometries(): Geometry[] {\n    return [...this.#layout.geometries];\n  }\n\n  selectableZones(): ZoneMod[] {\n    if (this.#layout.mod !== nullMod) {\n      return [];\n    }\n    return [...this.#geometry.zones];\n  }\n\n  withLanguage(language: Language): KeyboardOptions {\n    const layout = Layout.selectLayout(language);\n    const geometry = Geometry.first(layout.geometries);\n    const zones = ZoneMod.first(geometry.zones);\n    return new KeyboardOptions(\n      language, //\n      layout,\n      geometry,\n      zones,\n    );\n  }\n\n  withLayout(layout: Layout): KeyboardOptions {\n    if (this.#language.script === layout.language.script) {\n      const geometry = Geometry.first(layout.geometries);\n      const zones = ZoneMod.first(geometry.zones);\n      return new KeyboardOptions(\n        this.#language, //\n        layout,\n        geometry,\n        zones,\n      );\n    } else {\n      return this;\n    }\n  }\n\n  withGeometry(geometry: Geometry): KeyboardOptions {\n    if (this.#layout.geometries.has(geometry)) {\n      const zones = ZoneMod.first(geometry.zones);\n      return new KeyboardOptions(\n        this.#language, //\n        this.#layout,\n        geometry,\n        zones,\n      );\n    } else {\n      return this;\n    }\n  }\n\n  withZones(zones: ZoneMod): KeyboardOptions {\n    if (this.#layout.mod !== nullMod) {\n      return this;\n    }\n    if (this.#geometry.zones.has(zones)) {\n      return new KeyboardOptions(\n        this.#language,\n        this.#layout,\n        this.#geometry,\n        zones,\n      );\n    } else {\n      return this;\n    }\n  }\n\n  save(settings: Settings): Settings {\n    return settings\n      .set(keyboardProps.language, this.#language)\n      .set(keyboardProps.layout, this.#layout)\n      .set(keyboardProps.geometry, this.#geometry)\n      .set(keyboardProps.zones, this.#zones);\n  }\n}\n","import { Geometry, ZoneMod } from \"./geometry.ts\";\nimport { ANSI_101 } from \"./geometry/ansi_101.ts\";\nimport { ANSI_101_FULL } from \"./geometry/ansi_101_full.ts\";\nimport { BRAZILIAN_104 } from \"./geometry/brazilian_104.ts\";\nimport { BRAZILIAN_104_FULL } from \"./geometry/brazilian_104_full.ts\";\nimport { ISO_102 } from \"./geometry/iso_102.ts\";\nimport { ISO_102_FULL } from \"./geometry/iso_102_full.ts\";\nimport { JAPANESE_106 } from \"./geometry/japanese_106.ts\";\nimport { JAPANESE_106_FULL } from \"./geometry/japanese_106_full.ts\";\nimport { KOREAN_103 } from \"./geometry/korean_103.ts\";\nimport { KOREAN_103_FULL } from \"./geometry/korean_103_full.ts\";\nimport { MATRIX } from \"./geometry/matrix.ts\";\nimport { Keyboard } from \"./keyboard.ts\";\nimport { Layout } from \"./layout.ts\";\nimport { LAYOUT_AR_SA } from \"./layout/ar_sa.ts\";\nimport { LAYOUT_AR_SA_102 } from \"./layout/ar_sa_102.ts\";\nimport { LAYOUT_BE_BY } from \"./layout/be_by.ts\";\nimport { LAYOUT_CS_CZ } from \"./layout/cs_cz.ts\";\nimport { LAYOUT_DE_BONE } from \"./layout/de_bone.ts\";\nimport { LAYOUT_DE_CH } from \"./layout/de_ch.ts\";\nimport { LAYOUT_DE_CMOS } from \"./layout/de_cmos.ts\";\nimport { LAYOUT_DE_DE } from \"./layout/de_de.ts\";\nimport { LAYOUT_DE_MINE } from \"./layout/de_mine.ts\";\nimport { LAYOUT_DE_NEO_2 } from \"./layout/de_neo_2.ts\";\nimport { LAYOUT_DE_NOTED } from \"./layout/de_noted.ts\";\nimport { LAYOUT_EL_GR } from \"./layout/el_gr.ts\";\nimport { LAYOUT_EN_CANARY } from \"./layout/en_canary.ts\";\nimport { LAYOUT_EN_CANARY_MATRIX } from \"./layout/en_canary_matrix.ts\";\nimport { LAYOUT_EN_COLEMAK } from \"./layout/en_colemak.ts\";\nimport { LAYOUT_EN_COLEMAK_DH_ANSI } from \"./layout/en_colemak_dh_ansi.ts\";\nimport { LAYOUT_EN_COLEMAK_DH_ANSI_WIDE } from \"./layout/en_colemak_dh_ansi_wide.ts\";\nimport { LAYOUT_EN_COLEMAK_DH_ISO } from \"./layout/en_colemak_dh_iso.ts\";\nimport { LAYOUT_EN_COLEMAK_DH_ISO_WIDE } from \"./layout/en_colemak_dh_iso_wide.ts\";\nimport { LAYOUT_EN_COLEMAK_DH_MATRIX } from \"./layout/en_colemak_dh_matrix.ts\";\nimport { LAYOUT_EN_DVORAK } from \"./layout/en_dvorak.ts\";\nimport { LAYOUT_EN_DVORAK_PROG } from \"./layout/en_dvorak_prog.ts\";\nimport { LAYOUT_EN_ENGRAM } from \"./layout/en_engram.ts\";\nimport { LAYOUT_EN_GALLIUM } from \"./layout/en_gallium.ts\";\nimport { LAYOUT_EN_GALLIUM_MATRIX } from \"./layout/en_gallium_matrix.ts\";\nimport { LAYOUT_EN_GRAPHITE } from \"./layout/en_graphite.ts\";\nimport { LAYOUT_EN_HALMAK } from \"./layout/en_halmak.ts\";\nimport { LAYOUT_EN_HANDS_DOWN_NEU } from \"./layout/en_hands_down_neu.ts\";\nimport { LAYOUT_EN_HANDS_DOWN_PROMETHIUM } from \"./layout/en_hands_down_promethium.ts\";\nimport { LAYOUT_EN_NERPS } from \"./layout/en_nerps.ts\";\nimport { LAYOUT_EN_NERPS_MATRIX } from \"./layout/en_nerps_matrix.ts\";\nimport { LAYOUT_EN_NORMAN } from \"./layout/en_norman.ts\";\nimport { LAYOUT_EN_STURDY } from \"./layout/en_sturdy.ts\";\nimport { LAYOUT_EN_UK } from \"./layout/en_uk.ts\";\nimport { LAYOUT_EN_US } from \"./layout/en_us.ts\";\nimport { LAYOUT_EN_WORKMAN } from \"./layout/en_workman.ts\";\nimport { LAYOUT_ES_ES } from \"./layout/es_es.ts\";\nimport { LAYOUT_ES_MX } from \"./layout/es_mx.ts\";\nimport { LAYOUT_FA_IR } from \"./layout/fa_ir.ts\";\nimport { LAYOUT_FA_IR_LEGACY } from \"./layout/fa_ir_legacy.ts\";\nimport { LAYOUT_FR_BEPO } from \"./layout/fr_bepo.ts\";\nimport { LAYOUT_FR_CA } from \"./layout/fr_ca.ts\";\nimport { LAYOUT_FR_CH } from \"./layout/fr_ch.ts\";\nimport { LAYOUT_FR_ERGLACE } from \"./layout/fr_erglace.ts\";\nimport { LAYOUT_FR_ERGO_L } from \"./layout/fr_ergo_l.ts\";\nimport { LAYOUT_FR_FR } from \"./layout/fr_fr.ts\";\nimport { LAYOUT_FR_OPTIMOT_ERGO } from \"./layout/fr_optimot_ergo.ts\";\nimport { LAYOUT_HE_IL } from \"./layout/he_il.ts\";\nimport { LAYOUT_HE_IL_ARKN } from \"./layout/he_il_arkn.ts\";\nimport { LAYOUT_HU_HU } from \"./layout/hu_hu.ts\";\nimport { LAYOUT_IT_IT } from \"./layout/it_it.ts\";\nimport { LAYOUT_JA_JP_JIS } from \"./layout/ja_jp_jis.ts\";\nimport { LAYOUT_LT_LT } from \"./layout/lt_lt.ts\";\nimport { LAYOUT_NB_KVIKK } from \"./layout/nb_kvikk.ts\";\nimport { LAYOUT_NB_NO } from \"./layout/nb_no.ts\";\nimport { LAYOUT_NB_SKARP } from \"./layout/nb_skarp.ts\";\nimport { LAYOUT_NL_BE } from \"./layout/nl_be.ts\";\nimport { LAYOUT_NL_NL } from \"./layout/nl_nl.ts\";\nimport { LAYOUT_PL_FWYR } from \"./layout/pl_fwyr.ts\";\nimport { LAYOUT_PL_PL } from \"./layout/pl_pl.ts\";\nimport { LAYOUT_PT_BR } from \"./layout/pt_br.ts\";\nimport { LAYOUT_PT_PT } from \"./layout/pt_pt.ts\";\nimport { LAYOUT_RO_RO } from \"./layout/ro_ro.ts\";\nimport { LAYOUT_RU_RU } from \"./layout/ru_ru.ts\";\nimport { LAYOUT_SL_SI } from \"./layout/sl_si.ts\";\nimport { LAYOUT_SV_SE } from \"./layout/sv_se.ts\";\nimport { LAYOUT_TH_TH } from \"./layout/th_th.ts\";\nimport { LAYOUT_TH_TH_MAN } from \"./layout/th_th_man.ts\";\nimport { LAYOUT_TH_TH_PAT } from \"./layout/th_th_pat.ts\";\nimport { LAYOUT_TR_TR_F } from \"./layout/tr_tr_f.ts\";\nimport { LAYOUT_TR_TR_Q } from \"./layout/tr_tr_q.ts\";\nimport { LAYOUT_UK_UA } from \"./layout/uk_ua.ts\";\nimport { nullMod, remapZones } from \"./mod.ts\";\nimport { KeyboardOptions } from \"./settings.ts\";\nimport { type CharacterDict, type GeometryDict } from \"./types.ts\";\n\nconst layouts = new Map<Layout, CharacterDict>([\n  [Layout.AR_SA, LAYOUT_AR_SA],\n  [Layout.AR_SA_102, LAYOUT_AR_SA_102],\n  [Layout.BE_BY, LAYOUT_BE_BY],\n  [Layout.CS_CZ, LAYOUT_CS_CZ],\n  [Layout.DE_BONE, LAYOUT_DE_BONE],\n  [Layout.DE_CH, LAYOUT_DE_CH],\n  [Layout.DE_CMOS, LAYOUT_DE_CMOS],\n  [Layout.DE_DE, LAYOUT_DE_DE],\n  [Layout.DE_MINE, LAYOUT_DE_MINE],\n  [Layout.DE_NEO_2, LAYOUT_DE_NEO_2],\n  [Layout.DE_NOTED, LAYOUT_DE_NOTED],\n  [Layout.EL_GR, LAYOUT_EL_GR],\n  [Layout.EN_CANARY, LAYOUT_EN_CANARY],\n  [Layout.EN_CANARY_MATRIX, LAYOUT_EN_CANARY_MATRIX],\n  [Layout.EN_COLEMAK, LAYOUT_EN_COLEMAK],\n  [Layout.EN_COLEMAK_DH_ANSI, LAYOUT_EN_COLEMAK_DH_ANSI],\n  [Layout.EN_COLEMAK_DH_ANSI_WIDE, LAYOUT_EN_COLEMAK_DH_ANSI_WIDE],\n  [Layout.EN_COLEMAK_DH_ISO, LAYOUT_EN_COLEMAK_DH_ISO],\n  [Layout.EN_COLEMAK_DH_ISO_WIDE, LAYOUT_EN_COLEMAK_DH_ISO_WIDE],\n  [Layout.EN_COLEMAK_DH_MATRIX, LAYOUT_EN_COLEMAK_DH_MATRIX],\n  [Layout.EN_DVORAK, LAYOUT_EN_DVORAK],\n  [Layout.EN_DVORAK_PROG, LAYOUT_EN_DVORAK_PROG],\n  [Layout.EN_ENGRAM, LAYOUT_EN_ENGRAM],\n  [Layout.EN_GALLIUM, LAYOUT_EN_GALLIUM],\n  [Layout.EN_GALLIUM_MATRIX, LAYOUT_EN_GALLIUM_MATRIX],\n  [Layout.EN_GRAPHITE, LAYOUT_EN_GRAPHITE],\n  [Layout.EN_HALMAK, LAYOUT_EN_HALMAK],\n  [Layout.EN_HANDS_DOWN_NEU, LAYOUT_EN_HANDS_DOWN_NEU],\n  [Layout.EN_HANDS_DOWN_PROMETHIUM, LAYOUT_EN_HANDS_DOWN_PROMETHIUM],\n  [Layout.EN_JP, LAYOUT_JA_JP_JIS],\n  [Layout.EN_NERPS, LAYOUT_EN_NERPS],\n  [Layout.EN_NERPS_MATRIX, LAYOUT_EN_NERPS_MATRIX],\n  [Layout.EN_NORMAN, LAYOUT_EN_NORMAN],\n  [Layout.EN_STURDY, LAYOUT_EN_STURDY],\n  [Layout.EN_UK, LAYOUT_EN_UK],\n  [Layout.EN_US, LAYOUT_EN_US],\n  [Layout.EN_WORKMAN, LAYOUT_EN_WORKMAN],\n  [Layout.ES_ES, LAYOUT_ES_ES],\n  [Layout.ES_MX, LAYOUT_ES_MX],\n  [Layout.FA_IR, LAYOUT_FA_IR],\n  [Layout.FA_IR_LEGACY, LAYOUT_FA_IR_LEGACY],\n  [Layout.FR_BEPO, LAYOUT_FR_BEPO],\n  [Layout.FR_CA, LAYOUT_FR_CA],\n  [Layout.FR_CH, LAYOUT_FR_CH],\n  [Layout.FR_ERGLACE, LAYOUT_FR_ERGLACE],\n  [Layout.FR_ERGO_L, LAYOUT_FR_ERGO_L],\n  [Layout.FR_FR, LAYOUT_FR_FR],\n  [Layout.FR_OPTIMOT_ERGO, LAYOUT_FR_OPTIMOT_ERGO],\n  [Layout.HE_IL, LAYOUT_HE_IL],\n  [Layout.HE_IL_ARKN, LAYOUT_HE_IL_ARKN],\n  [Layout.HU_HU, LAYOUT_HU_HU],\n  [Layout.IT_IT, LAYOUT_IT_IT],\n  [Layout.LT_LT, LAYOUT_LT_LT],\n  [Layout.NB_KVIKK, LAYOUT_NB_KVIKK],\n  [Layout.NB_NO, LAYOUT_NB_NO],\n  [Layout.NB_SKARP, LAYOUT_NB_SKARP],\n  [Layout.NL_BE, LAYOUT_NL_BE],\n  [Layout.NL_NL, LAYOUT_NL_NL],\n  [Layout.PL_FWYR, LAYOUT_PL_FWYR],\n  [Layout.PL_PL, LAYOUT_PL_PL],\n  [Layout.PT_BR, LAYOUT_PT_BR],\n  [Layout.PT_PT, LAYOUT_PT_PT],\n  [Layout.RO_RO, LAYOUT_RO_RO],\n  [Layout.RU_RU, LAYOUT_RU_RU],\n  [Layout.SL_SI, LAYOUT_SL_SI],\n  [Layout.SV_SE, LAYOUT_SV_SE],\n  [Layout.TH_MAN, LAYOUT_TH_TH_MAN],\n  [Layout.TH_PAT, LAYOUT_TH_TH_PAT],\n  [Layout.TH_TH, LAYOUT_TH_TH],\n  [Layout.TR_TR_F, LAYOUT_TR_TR_F],\n  [Layout.TR_TR_Q, LAYOUT_TR_TR_Q],\n  [Layout.UK_UA, LAYOUT_UK_UA],\n]);\n\nconst geometries = new Map<Geometry, GeometryDict>([\n  [Geometry.ANSI_101, ANSI_101],\n  [Geometry.ANSI_101_FULL, ANSI_101_FULL],\n  [Geometry.BRAZILIAN_104, BRAZILIAN_104],\n  [Geometry.BRAZILIAN_104_FULL, BRAZILIAN_104_FULL],\n  [Geometry.ISO_102, ISO_102],\n  [Geometry.ISO_102_FULL, ISO_102_FULL],\n  [Geometry.JAPANESE_106, JAPANESE_106],\n  [Geometry.JAPANESE_106_FULL, JAPANESE_106_FULL],\n  [Geometry.KOREAN_103, KOREAN_103],\n  [Geometry.KOREAN_103_FULL, KOREAN_103_FULL],\n  [Geometry.MATRIX, MATRIX],\n]);\n\nexport function loadKeyboard(options: KeyboardOptions): Keyboard;\nexport function loadKeyboard(layout: Layout): Keyboard;\nexport function loadKeyboard(layout: Layout, geometry: Geometry): Keyboard;\nexport function loadKeyboard(...args: any[]): Keyboard {\n  const { length } = args;\n  let options: KeyboardOptions;\n  if (length === 1 && (options = args[0]) instanceof KeyboardOptions) {\n    return loadImpl(options.layout, options.geometry, options.zones);\n  }\n  let layout: Layout;\n  if (length === 1 && (layout = args[0]) instanceof Layout) {\n    return loadImpl(layout);\n  }\n  let geometry: Geometry;\n  if (\n    length === 2 &&\n    (layout = args[0]) instanceof Layout &&\n    (geometry = args[1]) instanceof Geometry\n  ) {\n    return loadImpl(layout, geometry);\n  }\n  throw new TypeError();\n}\n\nfunction loadImpl(\n  layout: Layout,\n  geometry: Geometry = Geometry.first(layout.geometries),\n  zones: ZoneMod = ZoneMod.first(geometry.zones),\n): Keyboard {\n  let characterDict = layouts.get(layout)!;\n  let geometryDict = geometries.get(geometry)!;\n  if (layout.mod === nullMod && zones !== ZoneMod.STANDARD) {\n    geometryDict = remapZones(geometryDict, zones.mod);\n  }\n  return new Keyboard(layout, geometry, characterDict, geometryDict);\n}\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_AR_SA: CharacterDict = {\n  Backquote: [/* ARABIC LETTER THAL */ 0x0630, /* ARABIC SHADDA */ 0x0651],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* COMMERCIAL AT */ 0x0040],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* NUMBER SIGN */ 0x0023],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* DOLLAR SIGN */ 0x0024],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* CIRCUMFLEX ACCENT */ 0x005e],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* AMPERSAND */ 0x0026],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* ASTERISK */ 0x002a],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* RIGHT PARENTHESIS */ 0x0029],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* LEFT PARENTHESIS */ 0x0028],\n  Minus: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f],\n  Equal: [/* EQUALS SIGN */ 0x003d, /* PLUS SIGN */ 0x002b],\n  KeyQ: [/* ARABIC LETTER DAD */ 0x0636, /* ARABIC FATHA */ 0x064e],\n  KeyW: [/* ARABIC LETTER SAD */ 0x0635, /* ARABIC FATHATAN */ 0x064b],\n  KeyE: [/* ARABIC LETTER THEH */ 0x062b, /* ARABIC DAMMA */ 0x064f],\n  KeyR: [/* ARABIC LETTER QAF */ 0x0642, /* ARABIC DAMMATAN */ 0x064c],\n  KeyT: [/* ARABIC LETTER FEH */ 0x0641, { ligature: \"لإ\" }],\n  KeyY: [/* ARABIC LETTER GHAIN */ 0x063a, /* ARABIC LETTER ALEF WITH HAMZA BELOW */ 0x0625],\n  KeyU: [/* ARABIC LETTER AIN */ 0x0639, /* LEFT SINGLE QUOTATION MARK */ 0x2018],\n  KeyI: [/* ARABIC LETTER HEH */ 0x0647, /* DIVISION SIGN */ 0x00f7],\n  KeyO: [/* ARABIC LETTER KHAH */ 0x062e, /* MULTIPLICATION SIGN */ 0x00d7],\n  KeyP: [/* ARABIC LETTER HAH */ 0x062d, /* ARABIC SEMICOLON */ 0x061b],\n  BracketLeft: [/* ARABIC LETTER JEEM */ 0x062c, /* LESS-THAN SIGN */ 0x003c],\n  BracketRight: [/* ARABIC LETTER DAL */ 0x062f, /* GREATER-THAN SIGN */ 0x003e],\n  Backslash: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  KeyA: [/* ARABIC LETTER SHEEN */ 0x0634, /* ARABIC KASRA */ 0x0650],\n  KeyS: [/* ARABIC LETTER SEEN */ 0x0633, /* ARABIC KASRATAN */ 0x064d],\n  KeyD: [/* ARABIC LETTER YEH */ 0x064a, /* RIGHT SQUARE BRACKET */ 0x005d],\n  KeyF: [/* ARABIC LETTER BEH */ 0x0628, /* LEFT SQUARE BRACKET */ 0x005b],\n  KeyG: [/* ARABIC LETTER LAM */ 0x0644, { ligature: \"لأ\" }],\n  KeyH: [/* ARABIC LETTER ALEF */ 0x0627, /* ARABIC LETTER ALEF WITH HAMZA ABOVE */ 0x0623],\n  KeyJ: [/* ARABIC LETTER TEH */ 0x062a, /* ARABIC TATWEEL */ 0x0640],\n  KeyK: [/* ARABIC LETTER NOON */ 0x0646, /* ARABIC COMMA */ 0x060c],\n  KeyL: [/* ARABIC LETTER MEEM */ 0x0645, /* SOLIDUS */ 0x002f],\n  Semicolon: [/* ARABIC LETTER KAF */ 0x0643, /* COLON */ 0x003a],\n  Quote: [/* ARABIC LETTER TAH */ 0x0637, /* QUOTATION MARK */ 0x0022],\n  IntlBackslash: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  KeyZ: [/* ARABIC LETTER YEH WITH HAMZA ABOVE */ 0x0626, /* TILDE */ 0x007e],\n  KeyX: [/* ARABIC LETTER HAMZA */ 0x0621, /* ARABIC SUKUN */ 0x0652],\n  KeyC: [/* ARABIC LETTER WAW WITH HAMZA ABOVE */ 0x0624, /* RIGHT CURLY BRACKET */ 0x007d],\n  KeyV: [/* ARABIC LETTER REH */ 0x0631, /* LEFT CURLY BRACKET */ 0x007b],\n  KeyB: [{ ligature: \"لا\" }, { ligature: \"لآ\" }],\n  KeyN: [/* ARABIC LETTER ALEF MAKSURA */ 0x0649, /* ARABIC LETTER ALEF WITH MADDA ABOVE */ 0x0622],\n  KeyM: [/* ARABIC LETTER TEH MARBUTA */ 0x0629, /* RIGHT SINGLE QUOTATION MARK */ 0x2019],\n  Comma: [/* ARABIC LETTER WAW */ 0x0648, /* COMMA */ 0x002c],\n  Period: [/* ARABIC LETTER ZAIN */ 0x0632, /* FULL STOP */ 0x002e],\n  Slash: [/* ARABIC LETTER ZAH */ 0x0638, /* ARABIC QUESTION MARK */ 0x061f],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_AR_SA_102: CharacterDict = {\n  Backquote: [/* GREATER-THAN SIGN */ 0x003e, /* LESS-THAN SIGN */ 0x003c],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* COMMERCIAL AT */ 0x0040],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* NUMBER SIGN */ 0x0023],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* DOLLAR SIGN */ 0x0024, /* CURRENCY SIGN */ 0x00a4],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* CIRCUMFLEX ACCENT */ 0x005e],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* AMPERSAND */ 0x0026],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* ASTERISK */ 0x002a],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* RIGHT PARENTHESIS */ 0x0029],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* LEFT PARENTHESIS */ 0x0028],\n  Minus: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f],\n  Equal: [/* EQUALS SIGN */ 0x003d, /* PLUS SIGN */ 0x002b],\n  KeyQ: [/* ARABIC LETTER DAD */ 0x0636, /* ARABIC FATHA */ 0x064e, { ligature: \"َّ\" }],\n  KeyW: [/* ARABIC LETTER SAD */ 0x0635, /* ARABIC FATHATAN */ 0x064b, { ligature: \"ًّ\" }],\n  KeyE: [/* ARABIC LETTER THEH */ 0x062b, /* ARABIC DAMMA */ 0x064f, { ligature: \"ُّ\" }],\n  KeyR: [/* ARABIC LETTER QAF */ 0x0642, /* ARABIC DAMMATAN */ 0x064c, { ligature: \"ٌّ\" }],\n  KeyT: [/* ARABIC LETTER FEH */ 0x0641, { ligature: \"لإ\" }],\n  KeyY: [/* ARABIC LETTER GHAIN */ 0x063a, /* ARABIC LETTER ALEF WITH HAMZA BELOW */ 0x0625],\n  KeyU: [/* ARABIC LETTER AIN */ 0x0639, /* LEFT SINGLE QUOTATION MARK */ 0x2018],\n  KeyI: [/* ARABIC LETTER HEH */ 0x0647, /* DIVISION SIGN */ 0x00f7],\n  KeyO: [/* ARABIC LETTER KHAH */ 0x062e, /* MULTIPLICATION SIGN */ 0x00d7],\n  KeyP: [/* ARABIC LETTER HAH */ 0x062d, /* ARABIC SEMICOLON */ 0x061b],\n  BracketLeft: [/* ARABIC LETTER JEEM */ 0x062c, /* RIGHT CURLY BRACKET */ 0x007d],\n  BracketRight: [/* ARABIC LETTER DAL */ 0x062f, /* LEFT CURLY BRACKET */ 0x007b],\n  Backslash: [/* ARABIC LETTER THAL */ 0x0630, /* ARABIC SHADDA */ 0x0651],\n  KeyA: [/* ARABIC LETTER SHEEN */ 0x0634, /* REVERSE SOLIDUS */ 0x005c],\n  KeyS: [/* ARABIC LETTER SEEN */ 0x0633],\n  KeyD: [/* ARABIC LETTER YEH */ 0x064a, /* RIGHT SQUARE BRACKET */ 0x005d],\n  KeyF: [/* ARABIC LETTER BEH */ 0x0628, /* LEFT SQUARE BRACKET */ 0x005b],\n  KeyG: [/* ARABIC LETTER LAM */ 0x0644, { ligature: \"لأ\" }],\n  KeyH: [/* ARABIC LETTER ALEF */ 0x0627, /* ARABIC LETTER ALEF WITH HAMZA ABOVE */ 0x0623],\n  KeyJ: [/* ARABIC LETTER TEH */ 0x062a, /* ARABIC TATWEEL */ 0x0640],\n  KeyK: [/* ARABIC LETTER NOON */ 0x0646, /* ARABIC COMMA */ 0x060c],\n  KeyL: [/* ARABIC LETTER MEEM */ 0x0645, /* SOLIDUS */ 0x002f],\n  Semicolon: [/* ARABIC LETTER KAF */ 0x0643, /* COLON */ 0x003a],\n  Quote: [/* ARABIC LETTER TAH */ 0x0637, /* QUOTATION MARK */ 0x0022],\n  IntlBackslash: [/* ARABIC TATWEEL */ 0x0640, /* VERTICAL LINE */ 0x007c],\n  KeyZ: [/* ARABIC LETTER YEH WITH HAMZA ABOVE */ 0x0626, /* TILDE */ 0x007e],\n  KeyX: [/* ARABIC LETTER HAMZA */ 0x0621, /* ARABIC SUKUN */ 0x0652],\n  KeyC: [/* ARABIC LETTER WAW WITH HAMZA ABOVE */ 0x0624, /* ARABIC KASRA */ 0x0650, { ligature: \"ِّ\" }],\n  KeyV: [/* ARABIC LETTER REH */ 0x0631, /* ARABIC KASRATAN */ 0x064d, { ligature: \"ٍّ\" }],\n  KeyB: [{ ligature: \"لا\" }, { ligature: \"لآ\" }],\n  KeyN: [/* ARABIC LETTER ALEF MAKSURA */ 0x0649, /* ARABIC LETTER ALEF WITH MADDA ABOVE */ 0x0622],\n  KeyM: [/* ARABIC LETTER TEH MARBUTA */ 0x0629, /* RIGHT SINGLE QUOTATION MARK */ 0x2019],\n  Comma: [/* ARABIC LETTER WAW */ 0x0648, /* COMMA */ 0x002c],\n  Period: [/* ARABIC LETTER ZAIN */ 0x0632, /* FULL STOP */ 0x002e],\n  Slash: [/* ARABIC LETTER ZAH */ 0x0638, /* ARABIC QUESTION MARK */ 0x061f],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_BE_BY: CharacterDict = {\n  Backquote: [/* CYRILLIC SMALL LETTER IO */ 0x0451, /* CYRILLIC CAPITAL LETTER IO */ 0x0401],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* QUOTATION MARK */ 0x0022],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* NUMERO SIGN */ 0x2116],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* SEMICOLON */ 0x003b],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* COLON */ 0x003a],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* QUESTION MARK */ 0x003f],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* ASTERISK */ 0x002a],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* LEFT PARENTHESIS */ 0x0028],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* RIGHT PARENTHESIS */ 0x0029],\n  Minus: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f],\n  Equal: [/* EQUALS SIGN */ 0x003d, /* PLUS SIGN */ 0x002b],\n  KeyQ: [/* CYRILLIC SMALL LETTER SHORT I */ 0x0439, /* CYRILLIC CAPITAL LETTER SHORT I */ 0x0419],\n  KeyW: [/* CYRILLIC SMALL LETTER TSE */ 0x0446, /* CYRILLIC CAPITAL LETTER TSE */ 0x0426],\n  KeyE: [/* CYRILLIC SMALL LETTER U */ 0x0443, /* CYRILLIC CAPITAL LETTER U */ 0x0423],\n  KeyR: [/* CYRILLIC SMALL LETTER KA */ 0x043a, /* CYRILLIC CAPITAL LETTER KA */ 0x041a],\n  KeyT: [/* CYRILLIC SMALL LETTER IE */ 0x0435, /* CYRILLIC CAPITAL LETTER IE */ 0x0415],\n  KeyY: [/* CYRILLIC SMALL LETTER EN */ 0x043d, /* CYRILLIC CAPITAL LETTER EN */ 0x041d],\n  KeyU: [/* CYRILLIC SMALL LETTER GHE */ 0x0433, /* CYRILLIC CAPITAL LETTER GHE */ 0x0413],\n  KeyI: [/* CYRILLIC SMALL LETTER SHA */ 0x0448, /* CYRILLIC CAPITAL LETTER SHA */ 0x0428],\n  KeyO: [/* CYRILLIC SMALL LETTER SHORT U */ 0x045e, /* CYRILLIC CAPITAL LETTER SHORT U */ 0x040e],\n  KeyP: [/* CYRILLIC SMALL LETTER ZE */ 0x0437, /* CYRILLIC CAPITAL LETTER ZE */ 0x0417],\n  BracketLeft: [/* CYRILLIC SMALL LETTER HA */ 0x0445, /* CYRILLIC CAPITAL LETTER HA */ 0x0425],\n  BracketRight: [/* APOSTROPHE */ 0x0027, /* APOSTROPHE */ 0x0027],\n  Backslash: [/* REVERSE SOLIDUS */ 0x005c, /* SOLIDUS */ 0x002f],\n  KeyA: [/* CYRILLIC SMALL LETTER EF */ 0x0444, /* CYRILLIC CAPITAL LETTER EF */ 0x0424],\n  KeyS: [/* CYRILLIC SMALL LETTER YERU */ 0x044b, /* CYRILLIC CAPITAL LETTER YERU */ 0x042b],\n  KeyD: [/* CYRILLIC SMALL LETTER VE */ 0x0432, /* CYRILLIC CAPITAL LETTER VE */ 0x0412],\n  KeyF: [/* CYRILLIC SMALL LETTER A */ 0x0430, /* CYRILLIC CAPITAL LETTER A */ 0x0410],\n  KeyG: [/* CYRILLIC SMALL LETTER PE */ 0x043f, /* CYRILLIC CAPITAL LETTER PE */ 0x041f],\n  KeyH: [/* CYRILLIC SMALL LETTER ER */ 0x0440, /* CYRILLIC CAPITAL LETTER ER */ 0x0420],\n  KeyJ: [/* CYRILLIC SMALL LETTER O */ 0x043e, /* CYRILLIC CAPITAL LETTER O */ 0x041e],\n  KeyK: [/* CYRILLIC SMALL LETTER EL */ 0x043b, /* CYRILLIC CAPITAL LETTER EL */ 0x041b],\n  KeyL: [/* CYRILLIC SMALL LETTER DE */ 0x0434, /* CYRILLIC CAPITAL LETTER DE */ 0x0414],\n  Semicolon: [/* CYRILLIC SMALL LETTER ZHE */ 0x0436, /* CYRILLIC CAPITAL LETTER ZHE */ 0x0416],\n  Quote: [/* CYRILLIC SMALL LETTER E */ 0x044d, /* CYRILLIC CAPITAL LETTER E */ 0x042d],\n  IntlBackslash: [/* REVERSE SOLIDUS */ 0x005c, /* SOLIDUS */ 0x002f],\n  KeyZ: [/* CYRILLIC SMALL LETTER YA */ 0x044f, /* CYRILLIC CAPITAL LETTER YA */ 0x042f],\n  KeyX: [/* CYRILLIC SMALL LETTER CHE */ 0x0447, /* CYRILLIC CAPITAL LETTER CHE */ 0x0427],\n  KeyC: [/* CYRILLIC SMALL LETTER ES */ 0x0441, /* CYRILLIC CAPITAL LETTER ES */ 0x0421],\n  KeyV: [/* CYRILLIC SMALL LETTER EM */ 0x043c, /* CYRILLIC CAPITAL LETTER EM */ 0x041c],\n  KeyB: [/* CYRILLIC SMALL LETTER BYELORUSSIAN-UKRAINIAN I */ 0x0456, /* CYRILLIC CAPITAL LETTER BYELORUSSIAN-UKRAINIAN I */ 0x0406],\n  KeyN: [/* CYRILLIC SMALL LETTER TE */ 0x0442, /* CYRILLIC CAPITAL LETTER TE */ 0x0422],\n  KeyM: [/* CYRILLIC SMALL LETTER SOFT SIGN */ 0x044c, /* CYRILLIC CAPITAL LETTER SOFT SIGN */ 0x042c],\n  Comma: [/* CYRILLIC SMALL LETTER BE */ 0x0431, /* CYRILLIC CAPITAL LETTER BE */ 0x0411],\n  Period: [/* CYRILLIC SMALL LETTER YU */ 0x044e, /* CYRILLIC CAPITAL LETTER YU */ 0x042e],\n  Slash: [/* FULL STOP */ 0x002e, /* COMMA */ 0x002c],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_CS_CZ: CharacterDict = {\n  Backquote: [/* SEMICOLON */ 0x003b, { dead: /* COMBINING RING ABOVE */ 0x030a }],\n  Digit1: [/* PLUS SIGN */ 0x002b, /* DIGIT ONE */ 0x0031, /* TILDE */ 0x007e],\n  Digit2: [/* LATIN SMALL LETTER E WITH CARON */ 0x011b, /* DIGIT TWO */ 0x0032, { dead: /* COMBINING CARON */ 0x030c }],\n  Digit3: [/* LATIN SMALL LETTER S WITH CARON */ 0x0161, /* DIGIT THREE */ 0x0033, { dead: /* COMBINING CIRCUMFLEX ACCENT */ 0x0302 }],\n  Digit4: [/* LATIN SMALL LETTER C WITH CARON */ 0x010d, /* DIGIT FOUR */ 0x0034, { dead: /* COMBINING BREVE */ 0x0306 }],\n  Digit5: [/* LATIN SMALL LETTER R WITH CARON */ 0x0159, /* DIGIT FIVE */ 0x0035, { dead: /* COMBINING RING ABOVE */ 0x030a }],\n  Digit6: [/* LATIN SMALL LETTER Z WITH CARON */ 0x017e, /* DIGIT SIX */ 0x0036, { dead: /* COMBINING OGONEK */ 0x0328 }],\n  Digit7: [/* LATIN SMALL LETTER Y WITH ACUTE */ 0x00fd, /* DIGIT SEVEN */ 0x0037, { dead: /* COMBINING GRAVE ACCENT */ 0x0300 }],\n  Digit8: [/* LATIN SMALL LETTER A WITH ACUTE */ 0x00e1, /* DIGIT EIGHT */ 0x0038, { dead: /* COMBINING DOT ABOVE */ 0x0307 }],\n  Digit9: [/* LATIN SMALL LETTER I WITH ACUTE */ 0x00ed, /* DIGIT NINE */ 0x0039, { dead: /* COMBINING ACUTE ACCENT */ 0x0301 }],\n  Digit0: [/* LATIN SMALL LETTER E WITH ACUTE */ 0x00e9, /* DIGIT ZERO */ 0x0030, { dead: /* COMBINING DOUBLE ACUTE ACCENT */ 0x030b }],\n  Minus: [/* EQUALS SIGN */ 0x003d, /* PERCENT SIGN */ 0x0025, { dead: /* COMBINING DIAERESIS */ 0x0308 }],\n  Equal: [{ dead: /* COMBINING ACUTE ACCENT */ 0x0301 }, { dead: /* COMBINING CARON */ 0x030c }, { dead: /* COMBINING CEDILLA */ 0x0327 }],\n  KeyQ: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051, /* REVERSE SOLIDUS */ 0x005c],\n  KeyW: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057, /* VERTICAL LINE */ 0x007c],\n  KeyE: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045, /* EURO SIGN */ 0x20ac],\n  KeyR: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  KeyT: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyY: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  KeyU: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055],\n  KeyI: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049],\n  KeyO: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  KeyP: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  BracketLeft: [/* LATIN SMALL LETTER U WITH ACUTE */ 0x00fa, /* SOLIDUS */ 0x002f, /* DIVISION SIGN */ 0x00f7],\n  BracketRight: [/* RIGHT PARENTHESIS */ 0x0029, /* LEFT PARENTHESIS */ 0x0028, /* MULTIPLICATION SIGN */ 0x00d7],\n  Backslash: [{ dead: /* COMBINING DIAERESIS */ 0x0308 }, /* APOSTROPHE */ 0x0027, /* CURRENCY SIGN */ 0x00a4],\n  KeyA: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041],\n  KeyS: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053, /* LATIN SMALL LETTER D WITH STROKE */ 0x0111],\n  KeyD: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044, /* LATIN CAPITAL LETTER D WITH STROKE */ 0x0110],\n  KeyF: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046, /* LEFT SQUARE BRACKET */ 0x005b],\n  KeyG: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047, /* RIGHT SQUARE BRACKET */ 0x005d],\n  KeyH: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  KeyJ: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  KeyK: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b, /* LATIN SMALL LETTER L WITH STROKE */ 0x0142],\n  KeyL: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c, /* LATIN CAPITAL LETTER L WITH STROKE */ 0x0141],\n  Semicolon: [/* LATIN SMALL LETTER U WITH RING ABOVE */ 0x016f, /* QUOTATION MARK */ 0x0022, /* DOLLAR SIGN */ 0x0024],\n  Quote: [/* SECTION SIGN */ 0x00a7, /* EXCLAMATION MARK */ 0x0021, /* LATIN SMALL LETTER SHARP S */ 0x00df],\n  IntlBackslash: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  KeyZ: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  KeyX: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058, /* NUMBER SIGN */ 0x0023],\n  KeyC: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043, /* AMPERSAND */ 0x0026],\n  KeyV: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056, /* COMMERCIAL AT */ 0x0040],\n  KeyB: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042, /* LEFT CURLY BRACKET */ 0x007b],\n  KeyN: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e, /* RIGHT CURLY BRACKET */ 0x007d],\n  KeyM: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d],\n  Comma: [/* COMMA */ 0x002c, /* QUESTION MARK */ 0x003f, /* LESS-THAN SIGN */ 0x003c],\n  Period: [/* FULL STOP */ 0x002e, /* COLON */ 0x003a, /* GREATER-THAN SIGN */ 0x003e],\n  Slash: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f, /* ASTERISK */ 0x002a],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_DE_BONE: CharacterDict = {\n  Backquote: [{ dead: /* COMBINING CIRCUMFLEX ACCENT */ 0x0302 }, { dead: /* COMBINING CARON */ 0x030c }],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* DEGREE SIGN */ 0x00b0, /* SUPERSCRIPT ONE */ 0x00b9, /* SUBSCRIPT ONE */ 0x2081],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* SECTION SIGN */ 0x00a7, /* SUPERSCRIPT TWO */ 0x00b2, /* SUBSCRIPT TWO */ 0x2082],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* SCRIPT SMALL L */ 0x2113, /* SUPERSCRIPT THREE */ 0x00b3, /* SUBSCRIPT THREE */ 0x2083],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* RIGHT-POINTING DOUBLE ANGLE QUOTATION MARK */ 0x00bb, /* SINGLE RIGHT-POINTING ANGLE QUOTATION MARK */ 0x203a, /* FEMALE SIGN */ 0x2640],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* LEFT-POINTING DOUBLE ANGLE QUOTATION MARK */ 0x00ab, /* SINGLE LEFT-POINTING ANGLE QUOTATION MARK */ 0x2039, /* MALE SIGN */ 0x2642],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* DOLLAR SIGN */ 0x0024, /* CENT SIGN */ 0x00a2, /* MALE AND FEMALE SIGN */ 0x26a5],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* EURO SIGN */ 0x20ac, /* YEN SIGN */ 0x00a5, /* GREEK KAPPA SYMBOL */ 0x03f0],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* DOUBLE LOW-9 QUOTATION MARK */ 0x201e, /* SINGLE LOW-9 QUOTATION MARK */ 0x201a, /* MATHEMATICAL LEFT ANGLE BRACKET */ 0x27e8],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* LEFT DOUBLE QUOTATION MARK */ 0x201c, /* LEFT SINGLE QUOTATION MARK */ 0x2018, /* MATHEMATICAL RIGHT ANGLE BRACKET */ 0x27e9],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* RIGHT DOUBLE QUOTATION MARK */ 0x201d, /* RIGHT SINGLE QUOTATION MARK */ 0x2019, /* SUBSCRIPT ZERO */ 0x2080],\n  Minus: [/* HYPHEN-MINUS */ 0x002d, /* EM DASH */ 0x2014, null, /* NON-BREAKING HYPHEN */ 0x2011],\n  Equal: [{ dead: /* COMBINING GRAVE ACCENT */ 0x0300 }, { dead: /* COMBINING CEDILLA */ 0x0327 }, { dead: /* COMBINING DIAERESIS */ 0x0308 }],\n  KeyQ: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a, /* HORIZONTAL ELLIPSIS */ 0x2026, /* GREEK SMALL LETTER THETA */ 0x03b8],\n  KeyW: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044, /* LOW LINE */ 0x005f, /* GREEK SMALL LETTER DELTA */ 0x03b4],\n  KeyE: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055, /* LEFT SQUARE BRACKET */ 0x005b],\n  KeyR: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041, /* RIGHT SQUARE BRACKET */ 0x005d, /* GREEK SMALL LETTER ALPHA */ 0x03b1],\n  KeyT: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058, /* CIRCUMFLEX ACCENT */ 0x005e, /* GREEK SMALL LETTER XI */ 0x03be],\n  KeyY: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050, /* EXCLAMATION MARK */ 0x0021, /* GREEK SMALL LETTER PI */ 0x03c0],\n  KeyU: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048, /* LESS-THAN SIGN */ 0x003c, /* GREEK SMALL LETTER PSI */ 0x03c8],\n  KeyI: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c, /* GREATER-THAN SIGN */ 0x003e, /* GREEK SMALL LETTER LAMDA */ 0x03bb],\n  KeyO: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d, /* EQUALS SIGN */ 0x003d, /* GREEK SMALL LETTER MU */ 0x03bc],\n  KeyP: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057, /* AMPERSAND */ 0x0026, /* GREEK SMALL LETTER OMEGA */ 0x03c9],\n  BracketLeft: [/* LATIN SMALL LETTER SHARP S */ 0x00df, /* LATIN CAPITAL LETTER SHARP S */ 0x1e9e, /* LATIN SMALL LETTER LONG S */ 0x017f, /* GREEK RHO SYMBOL */ 0x03f1],\n  BracketRight: [{ dead: /* COMBINING ACUTE ACCENT */ 0x0301 }, { dead: /* COMBINING TILDE */ 0x0303 }],\n  KeyA: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043, /* REVERSE SOLIDUS */ 0x005c, /* GREEK SMALL LETTER CHI */ 0x03c7],\n  KeyS: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054, /* SOLIDUS */ 0x002f, /* GREEK SMALL LETTER TAU */ 0x03c4],\n  KeyD: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049, /* LEFT CURLY BRACKET */ 0x007b, /* GREEK SMALL LETTER IOTA */ 0x03b9],\n  KeyF: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045, /* RIGHT CURLY BRACKET */ 0x007d, /* GREEK SMALL LETTER EPSILON */ 0x03b5],\n  KeyG: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f, /* ASTERISK */ 0x002a, /* GREEK SMALL LETTER GAMMA */ 0x03b3],\n  KeyH: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042, /* QUESTION MARK */ 0x003f, /* GREEK SMALL LETTER BETA */ 0x03b2],\n  KeyJ: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e, /* LEFT PARENTHESIS */ 0x0028, /* GREEK SMALL LETTER NU */ 0x03bd],\n  KeyK: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052, /* RIGHT PARENTHESIS */ 0x0029, /* GREEK SMALL LETTER KAPPA */ 0x03ba],\n  KeyL: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053, /* HYPHEN-MINUS */ 0x002d, /* GREEK SMALL LETTER SIGMA */ 0x03c3],\n  Semicolon: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047, /* COLON */ 0x003a, /* GREEK SMALL LETTER GAMMA */ 0x03b3],\n  Quote: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051, /* COMMERCIAL AT */ 0x0040, /* GREEK PHI SYMBOL */ 0x03d5],\n  KeyZ: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046, /* NUMBER SIGN */ 0x0023],\n  KeyX: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056, /* DOLLAR SIGN */ 0x0024],\n  KeyC: [/* LATIN SMALL LETTER U WITH DIAERESIS */ 0x00fc, /* LATIN CAPITAL LETTER U WITH DIAERESIS */ 0x00dc, /* VERTICAL LINE */ 0x007c],\n  KeyV: [/* LATIN SMALL LETTER A WITH DIAERESIS */ 0x00e4, /* LATIN CAPITAL LETTER A WITH DIAERESIS */ 0x00c4, /* TILDE */ 0x007e, /* GREEK SMALL LETTER ETA */ 0x03b7],\n  KeyB: [/* LATIN SMALL LETTER O WITH DIAERESIS */ 0x00f6, /* LATIN CAPITAL LETTER O WITH DIAERESIS */ 0x00d6, /* GRAVE ACCENT */ 0x0060, /* GREEK LUNATE EPSILON SYMBOL */ 0x03f5],\n  KeyN: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059, /* PLUS SIGN */ 0x002b, /* GREEK SMALL LETTER UPSILON */ 0x03c5],\n  KeyM: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a, /* PERCENT SIGN */ 0x0025, /* GREEK SMALL LETTER ZETA */ 0x03b6],\n  Comma: [/* COMMA */ 0x002c, /* EN DASH */ 0x2013, /* QUOTATION MARK */ 0x0022, /* GREEK RHO SYMBOL */ 0x03f1],\n  Period: [/* FULL STOP */ 0x002e, /* BULLET */ 0x2022, /* SEMICOLON */ 0x003b, /* GREEK THETA SYMBOL */ 0x03d1],\n  Slash: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b, /* SEMICOLON */ 0x003b, /* GREEK SMALL LETTER KAPPA */ 0x03ba],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_DE_CH: CharacterDict = {\n  Backquote: [/* SECTION SIGN */ 0x00a7, /* DEGREE SIGN */ 0x00b0],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* PLUS SIGN */ 0x002b, /* BROKEN BAR */ 0x00a6],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* QUOTATION MARK */ 0x0022, /* COMMERCIAL AT */ 0x0040],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* ASTERISK */ 0x002a, /* NUMBER SIGN */ 0x0023],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* LATIN SMALL LETTER C WITH CEDILLA */ 0x00e7, /* DEGREE SIGN */ 0x00b0],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025, /* SECTION SIGN */ 0x00a7],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* AMPERSAND */ 0x0026, /* NOT SIGN */ 0x00ac],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* SOLIDUS */ 0x002f, /* VERTICAL LINE */ 0x007c],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* LEFT PARENTHESIS */ 0x0028, /* CENT SIGN */ 0x00a2],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* RIGHT PARENTHESIS */ 0x0029],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* EQUALS SIGN */ 0x003d],\n  Minus: [/* APOSTROPHE */ 0x0027, /* QUESTION MARK */ 0x003f, { dead: /* COMBINING ACUTE ACCENT */ 0x0301 }],\n  Equal: [{ dead: /* COMBINING CIRCUMFLEX ACCENT */ 0x0302 }, { dead: /* COMBINING GRAVE ACCENT */ 0x0300 }, { dead: /* COMBINING TILDE */ 0x0303 }],\n  KeyQ: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051],\n  KeyW: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057],\n  KeyE: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045, /* EURO SIGN */ 0x20ac],\n  KeyR: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  KeyT: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyY: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  KeyU: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055],\n  KeyI: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049],\n  KeyO: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  KeyP: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  BracketLeft: [/* LATIN SMALL LETTER U WITH DIAERESIS */ 0x00fc, /* LATIN SMALL LETTER E WITH GRAVE */ 0x00e8, /* LEFT SQUARE BRACKET */ 0x005b],\n  BracketRight: [{ dead: /* COMBINING DIAERESIS */ 0x0308 }, /* EXCLAMATION MARK */ 0x0021, /* RIGHT SQUARE BRACKET */ 0x005d],\n  Backslash: [/* DOLLAR SIGN */ 0x0024, /* POUND SIGN */ 0x00a3, /* RIGHT CURLY BRACKET */ 0x007d],\n  KeyA: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041],\n  KeyS: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053],\n  KeyD: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyF: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  KeyG: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  KeyH: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  KeyJ: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  KeyK: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  KeyL: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  Semicolon: [/* LATIN SMALL LETTER O WITH DIAERESIS */ 0x00f6, /* LATIN SMALL LETTER E WITH ACUTE */ 0x00e9],\n  Quote: [/* LATIN SMALL LETTER A WITH DIAERESIS */ 0x00e4, /* LATIN SMALL LETTER A WITH GRAVE */ 0x00e0, /* LEFT CURLY BRACKET */ 0x007b],\n  IntlBackslash: [/* LESS-THAN SIGN */ 0x003c, /* GREATER-THAN SIGN */ 0x003e, /* REVERSE SOLIDUS */ 0x005c],\n  KeyZ: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  KeyX: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058],\n  KeyC: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043],\n  KeyV: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  KeyB: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  KeyN: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e],\n  KeyM: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d],\n  Comma: [/* COMMA */ 0x002c, /* SEMICOLON */ 0x003b],\n  Period: [/* FULL STOP */ 0x002e, /* COLON */ 0x003a],\n  Slash: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_DE_CMOS: CharacterDict = {\n  Backquote: [/* CIRCUMFLEX ACCENT */ 0x005e, /* CARON */ 0x02c7],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* DEGREE SIGN */ 0x00b0],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* SECTION SIGN */ 0x00a7],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* SCRIPT SMALL L */ 0x2113],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* RIGHT-POINTING DOUBLE ANGLE QUOTATION MARK */ 0x00bb],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* LEFT-POINTING DOUBLE ANGLE QUOTATION MARK */ 0x00ab],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* DOLLAR SIGN */ 0x0024],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* EURO SIGN */ 0x20ac],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* DOUBLE LOW-9 QUOTATION MARK */ 0x201e],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* LEFT DOUBLE QUOTATION MARK */ 0x201c],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* RIGHT DOUBLE QUOTATION MARK */ 0x201d],\n  Minus: [/* HYPHEN-MINUS */ 0x002d, /* EM DASH */ 0x2014],\n  Equal: [/* GRAVE ACCENT */ 0x0060, /* CEDILLA */ 0x00b8],\n  KeyQ: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  KeyW: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  KeyE: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055],\n  KeyR: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  KeyT: [/* LATIN SMALL LETTER A WITH DIAERESIS */ 0x00e4, /* LATIN CAPITAL LETTER A WITH DIAERESIS */ 0x00c4],\n  KeyY: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  KeyU: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  KeyI: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  KeyO: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d],\n  KeyP: [/* LATIN SMALL LETTER SHARP S */ 0x00df],\n  BracketLeft: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058],\n  BracketRight: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051],\n  KeyA: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057],\n  KeyS: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  KeyD: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049],\n  KeyF: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045],\n  KeyG: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041],\n  KeyH: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyJ: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyK: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e],\n  KeyL: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  Semicolon: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053],\n  Quote: [/* ACUTE ACCENT */ 0x00b4, /* SMALL TILDE */ 0x02dc],\n  KeyZ: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  KeyX: [/* FULL STOP */ 0x002e, /* COLON */ 0x003a],\n  KeyC: [/* LATIN SMALL LETTER U WITH DIAERESIS */ 0x00fc, /* LATIN CAPITAL LETTER U WITH DIAERESIS */ 0x00dc],\n  KeyV: [/* COMMA */ 0x002c, /* SEMICOLON */ 0x003b],\n  KeyB: [/* LATIN SMALL LETTER O WITH DIAERESIS */ 0x00f6, /* LATIN CAPITAL LETTER O WITH DIAERESIS */ 0x00d6],\n  KeyN: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  KeyM: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043],\n  Comma: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  Period: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  Slash: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_DE_DE: CharacterDict = {\n  Backquote: [{ dead: /* COMBINING CIRCUMFLEX ACCENT */ 0x0302 }, /* DEGREE SIGN */ 0x00b0],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* QUOTATION MARK */ 0x0022, /* SUPERSCRIPT TWO */ 0x00b2],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* SECTION SIGN */ 0x00a7, /* SUPERSCRIPT THREE */ 0x00b3],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* DOLLAR SIGN */ 0x0024],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* AMPERSAND */ 0x0026],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* SOLIDUS */ 0x002f, /* LEFT CURLY BRACKET */ 0x007b],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* LEFT PARENTHESIS */ 0x0028, /* LEFT SQUARE BRACKET */ 0x005b],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* RIGHT PARENTHESIS */ 0x0029, /* RIGHT SQUARE BRACKET */ 0x005d],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* EQUALS SIGN */ 0x003d, /* RIGHT CURLY BRACKET */ 0x007d],\n  Minus: [/* LATIN SMALL LETTER SHARP S */ 0x00df, /* QUESTION MARK */ 0x003f, /* REVERSE SOLIDUS */ 0x005c, /* LATIN CAPITAL LETTER SHARP S */ 0x1e9e],\n  Equal: [{ dead: /* COMBINING ACUTE ACCENT */ 0x0301 }, { dead: /* COMBINING GRAVE ACCENT */ 0x0300 }],\n  KeyQ: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051, /* COMMERCIAL AT */ 0x0040],\n  KeyW: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057],\n  KeyE: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045, /* EURO SIGN */ 0x20ac],\n  KeyR: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  KeyT: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyY: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  KeyU: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055],\n  KeyI: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049],\n  KeyO: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  KeyP: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  BracketLeft: [/* LATIN SMALL LETTER U WITH DIAERESIS */ 0x00fc, /* LATIN CAPITAL LETTER U WITH DIAERESIS */ 0x00dc],\n  BracketRight: [/* PLUS SIGN */ 0x002b, /* ASTERISK */ 0x002a, /* TILDE */ 0x007e],\n  Backslash: [/* NUMBER SIGN */ 0x0023, /* APOSTROPHE */ 0x0027],\n  KeyA: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041],\n  KeyS: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053],\n  KeyD: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyF: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  KeyG: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  KeyH: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  KeyJ: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  KeyK: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  KeyL: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  Semicolon: [/* LATIN SMALL LETTER O WITH DIAERESIS */ 0x00f6, /* LATIN CAPITAL LETTER O WITH DIAERESIS */ 0x00d6],\n  Quote: [/* LATIN SMALL LETTER A WITH DIAERESIS */ 0x00e4, /* LATIN CAPITAL LETTER A WITH DIAERESIS */ 0x00c4],\n  IntlBackslash: [/* LESS-THAN SIGN */ 0x003c, /* GREATER-THAN SIGN */ 0x003e, /* VERTICAL LINE */ 0x007c],\n  KeyZ: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  KeyX: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058],\n  KeyC: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043],\n  KeyV: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  KeyB: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  KeyN: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e],\n  KeyM: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d, /* MICRO SIGN */ 0x00b5],\n  Comma: [/* COMMA */ 0x002c, /* SEMICOLON */ 0x003b],\n  Period: [/* FULL STOP */ 0x002e, /* COLON */ 0x003a],\n  Slash: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_DE_MINE: CharacterDict = {\n  Backquote: [{ dead: /* COMBINING CIRCUMFLEX ACCENT */ 0x0302 }, { dead: /* COMBINING CARON */ 0x030c }],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* DEGREE SIGN */ 0x00b0],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* SECTION SIGN */ 0x00a7],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* SCRIPT SMALL L */ 0x2113],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* RIGHT-POINTING DOUBLE ANGLE QUOTATION MARK */ 0x00bb],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* LEFT-POINTING DOUBLE ANGLE QUOTATION MARK */ 0x00ab],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* DOLLAR SIGN */ 0x0024],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* EURO SIGN */ 0x20ac],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* DOUBLE LOW-9 QUOTATION MARK */ 0x201e],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* LEFT DOUBLE QUOTATION MARK */ 0x201c],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* RIGHT DOUBLE QUOTATION MARK */ 0x201d],\n  Minus: [/* HYPHEN-MINUS */ 0x002d, /* EM DASH */ 0x2014],\n  Equal: [{ dead: /* COMBINING GRAVE ACCENT */ 0x0300 }, { dead: /* COMBINING CEDILLA */ 0x0327 }, { dead: /* COMBINING DIAERESIS */ 0x0308 }],\n  KeyQ: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  KeyW: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  KeyE: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055],\n  KeyR: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041],\n  KeyT: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051],\n  KeyY: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057],\n  KeyU: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  KeyI: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyO: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  KeyP: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  BracketLeft: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  BracketRight: [/* LATIN SMALL LETTER SHARP S */ 0x00df, /* LATIN CAPITAL LETTER SHARP S */ 0x1e9e],\n  Backslash: [{ dead: /* COMBINING ACUTE ACCENT */ 0x0301 }, { dead: /* COMBINING TILDE */ 0x0303 }],\n  KeyA: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043],\n  KeyS: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  KeyD: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049],\n  KeyF: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045],\n  KeyG: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  KeyH: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d],\n  KeyJ: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e],\n  KeyK: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyL: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053],\n  Semicolon: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  KeyZ: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  KeyX: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058],\n  KeyC: [/* LATIN SMALL LETTER U WITH DIAERESIS */ 0x00fc, /* LATIN CAPITAL LETTER U WITH DIAERESIS */ 0x00dc],\n  KeyV: [/* LATIN SMALL LETTER A WITH DIAERESIS */ 0x00e4, /* LATIN CAPITAL LETTER A WITH DIAERESIS */ 0x00c4],\n  KeyB: [/* LATIN SMALL LETTER O WITH DIAERESIS */ 0x00f6, /* LATIN CAPITAL LETTER O WITH DIAERESIS */ 0x00d6],\n  KeyN: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  KeyM: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  Comma: [/* COMMA */ 0x002c, /* EN DASH */ 0x2013],\n  Period: [/* FULL STOP */ 0x002e, /* BULLET */ 0x2022],\n  Slash: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_DE_NEO_2: CharacterDict = {\n  Backquote: [{ dead: /* COMBINING CIRCUMFLEX ACCENT */ 0x0302 }, { dead: /* COMBINING CARON */ 0x030c }],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* DEGREE SIGN */ 0x00b0],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* SECTION SIGN */ 0x00a7],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* SCRIPT SMALL L */ 0x2113],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* RIGHT-POINTING DOUBLE ANGLE QUOTATION MARK */ 0x00bb],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* LEFT-POINTING DOUBLE ANGLE QUOTATION MARK */ 0x00ab],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* DOLLAR SIGN */ 0x0024],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* EURO SIGN */ 0x20ac],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* DOUBLE LOW-9 QUOTATION MARK */ 0x201e],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* LEFT DOUBLE QUOTATION MARK */ 0x201c],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* RIGHT DOUBLE QUOTATION MARK */ 0x201d],\n  Minus: [/* HYPHEN-MINUS */ 0x002d, /* EM DASH */ 0x2014],\n  Equal: [{ dead: /* COMBINING GRAVE ACCENT */ 0x0300 }, { dead: /* COMBINING CEDILLA */ 0x0327 }, { dead: /* COMBINING DIAERESIS */ 0x0308 }],\n  KeyQ: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058],\n  KeyW: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  KeyE: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  KeyR: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043],\n  KeyT: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057],\n  KeyY: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  KeyU: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  KeyI: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  KeyO: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  KeyP: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051],\n  BracketLeft: [/* LATIN SMALL LETTER SHARP S */ 0x00df, /* LATIN CAPITAL LETTER SHARP S */ 0x1e9e],\n  BracketRight: [{ dead: /* COMBINING ACUTE ACCENT */ 0x0301 }, { dead: /* COMBINING TILDE */ 0x0303 }],\n  KeyA: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055],\n  KeyS: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049],\n  KeyD: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041],\n  KeyF: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045],\n  KeyG: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  KeyH: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053],\n  KeyJ: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e],\n  KeyK: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  KeyL: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  Semicolon: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  Quote: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  KeyZ: [/* LATIN SMALL LETTER U WITH DIAERESIS */ 0x00fc, /* LATIN CAPITAL LETTER U WITH DIAERESIS */ 0x00dc],\n  KeyX: [/* LATIN SMALL LETTER O WITH DIAERESIS */ 0x00f6, /* LATIN CAPITAL LETTER O WITH DIAERESIS */ 0x00d6],\n  KeyC: [/* LATIN SMALL LETTER A WITH DIAERESIS */ 0x00e4, /* LATIN CAPITAL LETTER A WITH DIAERESIS */ 0x00c4],\n  KeyV: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  KeyB: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  KeyN: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  KeyM: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d],\n  Comma: [/* COMMA */ 0x002c, /* EN DASH */ 0x2013],\n  Period: [/* FULL STOP */ 0x002e, /* BULLET */ 0x2022],\n  Slash: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_DE_NOTED: CharacterDict = {\n  Backquote: [{ dead: /* COMBINING CIRCUMFLEX ACCENT */ 0x0302 }, { dead: /* COMBINING CARON */ 0x030c }],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* DEGREE SIGN */ 0x00b0],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* SECTION SIGN */ 0x00a7],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* SCRIPT SMALL L */ 0x2113],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* RIGHT-POINTING DOUBLE ANGLE QUOTATION MARK */ 0x00bb],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* LEFT-POINTING DOUBLE ANGLE QUOTATION MARK */ 0x00ab],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* DOLLAR SIGN */ 0x0024],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* EURO SIGN */ 0x20ac],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* DOUBLE LOW-9 QUOTATION MARK */ 0x201e],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* LEFT DOUBLE QUOTATION MARK */ 0x201c],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* RIGHT DOUBLE QUOTATION MARK */ 0x201d],\n  Minus: [/* HYPHEN-MINUS */ 0x002d, /* EM DASH */ 0x2014],\n  Equal: [{ dead: /* COMBINING GRAVE ACCENT */ 0x0300 }, { dead: /* COMBINING CEDILLA */ 0x0327 }, { dead: /* COMBINING DIAERESIS */ 0x0308 }],\n  KeyQ: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  KeyW: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  KeyE: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055],\n  KeyR: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041],\n  KeyT: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051],\n  KeyY: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  KeyU: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  KeyI: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d],\n  KeyO: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  KeyP: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  BracketLeft: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  BracketRight: [/* LATIN SMALL LETTER SHARP S */ 0x00df, /* LATIN CAPITAL LETTER SHARP S */ 0x1e9e],\n  Backslash: [{ dead: /* COMBINING ACUTE ACCENT */ 0x0301 }, { dead: /* COMBINING TILDE */ 0x0303 }],\n  KeyA: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043],\n  KeyS: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053],\n  KeyD: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049],\n  KeyF: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045],\n  KeyG: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  KeyH: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyJ: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyK: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e],\n  KeyL: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  Semicolon: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  KeyZ: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  KeyX: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058],\n  KeyC: [/* LATIN SMALL LETTER U WITH DIAERESIS */ 0x00fc, /* LATIN CAPITAL LETTER U WITH DIAERESIS */ 0x00dc],\n  KeyV: [/* LATIN SMALL LETTER A WITH DIAERESIS */ 0x00e4, /* LATIN CAPITAL LETTER A WITH DIAERESIS */ 0x00c4],\n  KeyB: [/* LATIN SMALL LETTER O WITH DIAERESIS */ 0x00f6, /* LATIN CAPITAL LETTER O WITH DIAERESIS */ 0x00d6],\n  KeyN: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057],\n  KeyM: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  Comma: [/* COMMA */ 0x002c, /* EN DASH */ 0x2013],\n  Period: [/* FULL STOP */ 0x002e, /* BULLET */ 0x2022],\n  Slash: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_EL_GR: CharacterDict = {\n  Backquote: [/* GRAVE ACCENT */ 0x0060, /* TILDE */ 0x007e],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* COMMERCIAL AT */ 0x0040, /* SUPERSCRIPT TWO */ 0x00b2],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* NUMBER SIGN */ 0x0023, /* SUPERSCRIPT THREE */ 0x00b3],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* DOLLAR SIGN */ 0x0024, /* POUND SIGN */ 0x00a3],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025, /* SECTION SIGN */ 0x00a7],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* CIRCUMFLEX ACCENT */ 0x005e, /* PILCROW SIGN */ 0x00b6],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* AMPERSAND */ 0x0026],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* ASTERISK */ 0x002a, /* CURRENCY SIGN */ 0x00a4],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* LEFT PARENTHESIS */ 0x0028, /* BROKEN BAR */ 0x00a6],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* RIGHT PARENTHESIS */ 0x0029, /* DEGREE SIGN */ 0x00b0],\n  Minus: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f, /* PLUS-MINUS SIGN */ 0x00b1],\n  Equal: [/* EQUALS SIGN */ 0x003d, /* PLUS SIGN */ 0x002b, /* VULGAR FRACTION ONE HALF */ 0x00bd],\n  KeyQ: [/* SEMICOLON */ 0x003b, /* COLON */ 0x003a],\n  KeyW: [/* GREEK SMALL LETTER FINAL SIGMA */ 0x03c2],\n  KeyE: [/* GREEK SMALL LETTER EPSILON */ 0x03b5, /* GREEK CAPITAL LETTER EPSILON */ 0x0395, /* EURO SIGN */ 0x20ac],\n  KeyR: [/* GREEK SMALL LETTER RHO */ 0x03c1, /* GREEK CAPITAL LETTER RHO */ 0x03a1, /* REGISTERED SIGN */ 0x00ae],\n  KeyT: [/* GREEK SMALL LETTER TAU */ 0x03c4, /* GREEK CAPITAL LETTER TAU */ 0x03a4],\n  KeyY: [/* GREEK SMALL LETTER UPSILON */ 0x03c5, /* GREEK CAPITAL LETTER UPSILON */ 0x03a5, /* YEN SIGN */ 0x00a5],\n  KeyU: [/* GREEK SMALL LETTER THETA */ 0x03b8, /* GREEK CAPITAL LETTER THETA */ 0x0398],\n  KeyI: [/* GREEK SMALL LETTER IOTA */ 0x03b9, /* GREEK CAPITAL LETTER IOTA */ 0x0399],\n  KeyO: [/* GREEK SMALL LETTER OMICRON */ 0x03bf, /* GREEK CAPITAL LETTER OMICRON */ 0x039f],\n  KeyP: [/* GREEK SMALL LETTER PI */ 0x03c0, /* GREEK CAPITAL LETTER PI */ 0x03a0],\n  BracketLeft: [/* LEFT SQUARE BRACKET */ 0x005b, /* LEFT CURLY BRACKET */ 0x007b, /* LEFT-POINTING DOUBLE ANGLE QUOTATION MARK */ 0x00ab],\n  BracketRight: [/* RIGHT SQUARE BRACKET */ 0x005d, /* RIGHT CURLY BRACKET */ 0x007d, /* RIGHT-POINTING DOUBLE ANGLE QUOTATION MARK */ 0x00bb],\n  Backslash: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c, /* NOT SIGN */ 0x00ac],\n  KeyA: [/* GREEK SMALL LETTER ALPHA */ 0x03b1, /* GREEK CAPITAL LETTER ALPHA */ 0x0391],\n  KeyS: [/* GREEK SMALL LETTER SIGMA */ 0x03c3, /* GREEK CAPITAL LETTER SIGMA */ 0x03a3],\n  KeyD: [/* GREEK SMALL LETTER DELTA */ 0x03b4, /* GREEK CAPITAL LETTER DELTA */ 0x0394],\n  KeyF: [/* GREEK SMALL LETTER PHI */ 0x03c6, /* GREEK CAPITAL LETTER PHI */ 0x03a6],\n  KeyG: [/* GREEK SMALL LETTER GAMMA */ 0x03b3, /* GREEK CAPITAL LETTER GAMMA */ 0x0393],\n  KeyH: [/* GREEK SMALL LETTER ETA */ 0x03b7, /* GREEK CAPITAL LETTER ETA */ 0x0397],\n  KeyJ: [/* GREEK SMALL LETTER XI */ 0x03be, /* GREEK CAPITAL LETTER XI */ 0x039e],\n  KeyK: [/* GREEK SMALL LETTER KAPPA */ 0x03ba, /* GREEK CAPITAL LETTER KAPPA */ 0x039a],\n  KeyL: [/* GREEK SMALL LETTER LAMDA */ 0x03bb, /* GREEK CAPITAL LETTER LAMDA */ 0x039b],\n  Semicolon: [{ dead: /* COMBINING ACUTE ACCENT */ 0x0301 }, { dead: /* COMBINING DIAERESIS */ 0x0308 }],\n  Quote: [/* APOSTROPHE */ 0x0027, /* QUOTATION MARK */ 0x0022],\n  IntlBackslash: [/* LESS-THAN SIGN */ 0x003c, /* GREATER-THAN SIGN */ 0x003e],\n  KeyZ: [/* GREEK SMALL LETTER ZETA */ 0x03b6, /* GREEK CAPITAL LETTER ZETA */ 0x0396],\n  KeyX: [/* GREEK SMALL LETTER CHI */ 0x03c7, /* GREEK CAPITAL LETTER CHI */ 0x03a7],\n  KeyC: [/* GREEK SMALL LETTER PSI */ 0x03c8, /* GREEK CAPITAL LETTER PSI */ 0x03a8, /* COPYRIGHT SIGN */ 0x00a9],\n  KeyV: [/* GREEK SMALL LETTER OMEGA */ 0x03c9, /* GREEK CAPITAL LETTER OMEGA */ 0x03a9],\n  KeyB: [/* GREEK SMALL LETTER BETA */ 0x03b2, /* GREEK CAPITAL LETTER BETA */ 0x0392],\n  KeyN: [/* GREEK SMALL LETTER NU */ 0x03bd, /* GREEK CAPITAL LETTER NU */ 0x039d],\n  KeyM: [/* GREEK SMALL LETTER MU */ 0x03bc, /* GREEK CAPITAL LETTER MU */ 0x039c],\n  Comma: [/* COMMA */ 0x002c, /* LESS-THAN SIGN */ 0x003c],\n  Period: [/* FULL STOP */ 0x002e, /* GREATER-THAN SIGN */ 0x003e],\n  Slash: [/* SOLIDUS */ 0x002f, /* QUESTION MARK */ 0x003f],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_EN_CANARY: CharacterDict = {\n  Backquote: [/* GRAVE ACCENT */ 0x0060, /* TILDE */ 0x007e],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* COMMERCIAL AT */ 0x0040],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* NUMBER SIGN */ 0x0023],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* DOLLAR SIGN */ 0x0024],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* CIRCUMFLEX ACCENT */ 0x005e],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* AMPERSAND */ 0x0026],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* ASTERISK */ 0x002a],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* LEFT PARENTHESIS */ 0x0028],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* RIGHT PARENTHESIS */ 0x0029],\n  Minus: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f],\n  Equal: [/* EQUALS SIGN */ 0x003d, /* PLUS SIGN */ 0x002b],\n  KeyQ: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057],\n  KeyW: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  KeyE: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  KeyR: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  KeyT: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  KeyY: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  KeyU: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058],\n  KeyI: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  KeyO: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055],\n  KeyP: [/* SEMICOLON */ 0x003b, /* COLON */ 0x003a],\n  BracketLeft: [/* LEFT SQUARE BRACKET */ 0x005b, /* LEFT CURLY BRACKET */ 0x007b],\n  BracketRight: [/* RIGHT SQUARE BRACKET */ 0x005d, /* RIGHT CURLY BRACKET */ 0x007d],\n  Backslash: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  KeyA: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043],\n  KeyS: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  KeyD: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053],\n  KeyF: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyG: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  KeyH: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  KeyJ: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e],\n  KeyK: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045],\n  KeyL: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049],\n  Semicolon: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041],\n  Quote: [/* APOSTROPHE */ 0x0027, /* QUOTATION MARK */ 0x0022],\n  IntlBackslash: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  KeyZ: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  KeyX: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  KeyC: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyV: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  KeyB: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051],\n  KeyN: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d],\n  KeyM: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  Comma: [/* SOLIDUS */ 0x002f, /* QUESTION MARK */ 0x003f],\n  Period: [/* COMMA */ 0x002c, /* LESS-THAN SIGN */ 0x003c],\n  Slash: [/* FULL STOP */ 0x002e, /* GREATER-THAN SIGN */ 0x003e],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_EN_CANARY_MATRIX: CharacterDict = {\n  Backquote: [/* GRAVE ACCENT */ 0x0060, /* TILDE */ 0x007e],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* COMMERCIAL AT */ 0x0040],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* NUMBER SIGN */ 0x0023],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* DOLLAR SIGN */ 0x0024],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* CIRCUMFLEX ACCENT */ 0x005e],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* AMPERSAND */ 0x0026],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* ASTERISK */ 0x002a],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* LEFT PARENTHESIS */ 0x0028],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* RIGHT PARENTHESIS */ 0x0029],\n  Minus: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f],\n  Equal: [/* EQUALS SIGN */ 0x003d, /* PLUS SIGN */ 0x002b],\n  KeyQ: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057],\n  KeyW: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  KeyE: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  KeyR: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  KeyT: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  KeyY: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  KeyU: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  KeyI: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  KeyO: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055],\n  KeyP: [/* APOSTROPHE */ 0x0027, /* QUOTATION MARK */ 0x0022],\n  BracketLeft: [/* LEFT SQUARE BRACKET */ 0x005b, /* LEFT CURLY BRACKET */ 0x007b],\n  BracketRight: [/* RIGHT SQUARE BRACKET */ 0x005d, /* RIGHT CURLY BRACKET */ 0x007d],\n  Backslash: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  KeyA: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043],\n  KeyS: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  KeyD: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053],\n  KeyF: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyG: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  KeyH: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d],\n  KeyJ: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e],\n  KeyK: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045],\n  KeyL: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049],\n  Semicolon: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041],\n  Quote: [/* SEMICOLON */ 0x003b, /* COLON */ 0x003a],\n  IntlBackslash: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  KeyZ: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051],\n  KeyX: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  KeyC: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  KeyV: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyB: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  KeyN: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058],\n  KeyM: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  Comma: [/* SOLIDUS */ 0x002f, /* QUESTION MARK */ 0x003f],\n  Period: [/* COMMA */ 0x002c, /* LESS-THAN SIGN */ 0x003c],\n  Slash: [/* FULL STOP */ 0x002e, /* GREATER-THAN SIGN */ 0x003e],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_EN_COLEMAK: CharacterDict = {\n  Backquote: [/* GRAVE ACCENT */ 0x0060, /* TILDE */ 0x007e],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* COMMERCIAL AT */ 0x0040],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* NUMBER SIGN */ 0x0023],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* DOLLAR SIGN */ 0x0024],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* CIRCUMFLEX ACCENT */ 0x005e],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* AMPERSAND */ 0x0026],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* ASTERISK */ 0x002a],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* LEFT PARENTHESIS */ 0x0028],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* RIGHT PARENTHESIS */ 0x0029],\n  Minus: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f],\n  Equal: [/* EQUALS SIGN */ 0x003d, /* PLUS SIGN */ 0x002b],\n  KeyQ: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051],\n  KeyW: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057],\n  KeyE: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  KeyR: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  KeyT: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  KeyY: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  KeyU: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  KeyI: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055],\n  KeyO: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  KeyP: [/* SEMICOLON */ 0x003b, /* COLON */ 0x003a],\n  BracketLeft: [/* LEFT SQUARE BRACKET */ 0x005b, /* LEFT CURLY BRACKET */ 0x007b],\n  BracketRight: [/* RIGHT SQUARE BRACKET */ 0x005d, /* RIGHT CURLY BRACKET */ 0x007d],\n  Backslash: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  KeyA: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041],\n  KeyS: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  KeyD: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053],\n  KeyF: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyG: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyH: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  KeyJ: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e],\n  KeyK: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045],\n  KeyL: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049],\n  Semicolon: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  Quote: [/* APOSTROPHE */ 0x0027, /* QUOTATION MARK */ 0x0022],\n  IntlBackslash: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f],\n  KeyZ: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  KeyX: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058],\n  KeyC: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043],\n  KeyV: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  KeyB: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  KeyN: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  KeyM: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d],\n  Comma: [/* COMMA */ 0x002c, /* LESS-THAN SIGN */ 0x003c],\n  Period: [/* FULL STOP */ 0x002e, /* GREATER-THAN SIGN */ 0x003e],\n  Slash: [/* SOLIDUS */ 0x002f, /* QUESTION MARK */ 0x003f],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_EN_COLEMAK_DH_ANSI: CharacterDict = {\n  Backquote: [/* GRAVE ACCENT */ 0x0060, /* TILDE */ 0x007e],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* COMMERCIAL AT */ 0x0040],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* NUMBER SIGN */ 0x0023],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* DOLLAR SIGN */ 0x0024],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* CIRCUMFLEX ACCENT */ 0x005e],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* AMPERSAND */ 0x0026],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* ASTERISK */ 0x002a],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* LEFT PARENTHESIS */ 0x0028],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* RIGHT PARENTHESIS */ 0x0029],\n  Minus: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f],\n  Equal: [/* EQUALS SIGN */ 0x003d, /* PLUS SIGN */ 0x002b],\n  KeyQ: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051],\n  KeyW: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057],\n  KeyE: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  KeyR: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  KeyT: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  KeyY: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  KeyU: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  KeyI: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055],\n  KeyO: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  KeyP: [/* SEMICOLON */ 0x003b, /* COLON */ 0x003a],\n  BracketLeft: [/* LEFT SQUARE BRACKET */ 0x005b, /* LEFT CURLY BRACKET */ 0x007b],\n  BracketRight: [/* RIGHT SQUARE BRACKET */ 0x005d, /* RIGHT CURLY BRACKET */ 0x007d],\n  Backslash: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  KeyA: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041],\n  KeyS: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  KeyD: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053],\n  KeyF: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyG: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  KeyH: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d],\n  KeyJ: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e],\n  KeyK: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045],\n  KeyL: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049],\n  Semicolon: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  Quote: [/* APOSTROPHE */ 0x0027, /* QUOTATION MARK */ 0x0022],\n  IntlBackslash: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  KeyZ: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058],\n  KeyX: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043],\n  KeyC: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyV: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  KeyB: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  KeyN: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  KeyM: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  Comma: [/* COMMA */ 0x002c, /* LESS-THAN SIGN */ 0x003c],\n  Period: [/* FULL STOP */ 0x002e, /* GREATER-THAN SIGN */ 0x003e],\n  Slash: [/* SOLIDUS */ 0x002f, /* QUESTION MARK */ 0x003f],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_EN_COLEMAK_DH_ANSI_WIDE: CharacterDict = {\n  Backquote: [/* GRAVE ACCENT */ 0x0060, /* TILDE */ 0x007e],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* COMMERCIAL AT */ 0x0040],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* NUMBER SIGN */ 0x0023],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* DOLLAR SIGN */ 0x0024],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* CIRCUMFLEX ACCENT */ 0x005e],\n  Digit7: [/* EQUALS SIGN */ 0x003d, /* PLUS SIGN */ 0x002b],\n  Digit8: [/* DIGIT SEVEN */ 0x0037, /* AMPERSAND */ 0x0026],\n  Digit9: [/* DIGIT EIGHT */ 0x0038, /* ASTERISK */ 0x002a],\n  Digit0: [/* DIGIT NINE */ 0x0039, /* LEFT PARENTHESIS */ 0x0028],\n  Minus: [/* DIGIT ZERO */ 0x0030, /* RIGHT PARENTHESIS */ 0x0029],\n  Equal: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f],\n  KeyQ: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051],\n  KeyW: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057],\n  KeyE: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  KeyR: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  KeyT: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  KeyY: [/* LEFT SQUARE BRACKET */ 0x005b, /* LEFT CURLY BRACKET */ 0x007b],\n  KeyU: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  KeyI: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  KeyO: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055],\n  KeyP: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  BracketLeft: [/* SEMICOLON */ 0x003b, /* COLON */ 0x003a],\n  BracketRight: [/* APOSTROPHE */ 0x0027, /* QUOTATION MARK */ 0x0022],\n  Backslash: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  KeyA: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041],\n  KeyS: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  KeyD: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053],\n  KeyF: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyG: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  KeyH: [/* RIGHT SQUARE BRACKET */ 0x005d, /* RIGHT CURLY BRACKET */ 0x007d],\n  KeyJ: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d],\n  KeyK: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e],\n  KeyL: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045],\n  Semicolon: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049],\n  Quote: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  IntlBackslash: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  KeyZ: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058],\n  KeyX: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043],\n  KeyC: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyV: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  KeyB: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  KeyN: [/* SOLIDUS */ 0x002f, /* QUESTION MARK */ 0x003f],\n  KeyM: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  Comma: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  Period: [/* COMMA */ 0x002c, /* LESS-THAN SIGN */ 0x003c],\n  Slash: [/* FULL STOP */ 0x002e, /* GREATER-THAN SIGN */ 0x003e],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_EN_COLEMAK_DH_ISO: CharacterDict = {\n  Backquote: [/* GRAVE ACCENT */ 0x0060, /* NOT SIGN */ 0x00ac],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* QUOTATION MARK */ 0x0022],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* POUND SIGN */ 0x00a3],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* DOLLAR SIGN */ 0x0024],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* CIRCUMFLEX ACCENT */ 0x005e],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* AMPERSAND */ 0x0026],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* ASTERISK */ 0x002a],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* LEFT PARENTHESIS */ 0x0028],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* RIGHT PARENTHESIS */ 0x0029],\n  Minus: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f],\n  Equal: [/* EQUALS SIGN */ 0x003d, /* PLUS SIGN */ 0x002b],\n  KeyQ: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051],\n  KeyW: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057],\n  KeyE: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  KeyR: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  KeyT: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  KeyY: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  KeyU: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  KeyI: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055],\n  KeyO: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  KeyP: [/* SEMICOLON */ 0x003b, /* COLON */ 0x003a],\n  BracketLeft: [/* LEFT SQUARE BRACKET */ 0x005b, /* LEFT CURLY BRACKET */ 0x007b],\n  BracketRight: [/* RIGHT SQUARE BRACKET */ 0x005d, /* RIGHT CURLY BRACKET */ 0x007d],\n  Backslash: [/* NUMBER SIGN */ 0x0023, /* TILDE */ 0x007e],\n  KeyA: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041],\n  KeyS: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  KeyD: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053],\n  KeyF: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyG: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  KeyH: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d],\n  KeyJ: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e],\n  KeyK: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045],\n  KeyL: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049],\n  Semicolon: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  Quote: [/* APOSTROPHE */ 0x0027, /* COMMERCIAL AT */ 0x0040],\n  IntlBackslash: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  KeyZ: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058],\n  KeyX: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043],\n  KeyC: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyV: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  KeyB: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  KeyN: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  KeyM: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  Comma: [/* COMMA */ 0x002c, /* LESS-THAN SIGN */ 0x003c],\n  Period: [/* FULL STOP */ 0x002e, /* GREATER-THAN SIGN */ 0x003e],\n  Slash: [/* SOLIDUS */ 0x002f, /* QUESTION MARK */ 0x003f],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_EN_COLEMAK_DH_ISO_WIDE: CharacterDict = {\n  Backquote: [/* GRAVE ACCENT */ 0x0060, /* NOT SIGN */ 0x00ac],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* QUOTATION MARK */ 0x0022],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* POUND SIGN */ 0x00a3],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* DOLLAR SIGN */ 0x0024],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* CIRCUMFLEX ACCENT */ 0x005e],\n  Digit7: [/* EQUALS SIGN */ 0x003d, /* PLUS SIGN */ 0x002b],\n  Digit8: [/* DIGIT SEVEN */ 0x0037, /* AMPERSAND */ 0x0026],\n  Digit9: [/* DIGIT EIGHT */ 0x0038, /* ASTERISK */ 0x002a],\n  Digit0: [/* DIGIT NINE */ 0x0039, /* LEFT PARENTHESIS */ 0x0028],\n  Minus: [/* DIGIT ZERO */ 0x0030, /* RIGHT PARENTHESIS */ 0x0029],\n  Equal: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f],\n  KeyQ: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051],\n  KeyW: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057],\n  KeyE: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  KeyR: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  KeyT: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  KeyY: [/* LEFT SQUARE BRACKET */ 0x005b, /* LEFT CURLY BRACKET */ 0x007b],\n  KeyU: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  KeyI: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  KeyO: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055],\n  KeyP: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  BracketLeft: [/* SEMICOLON */ 0x003b, /* COLON */ 0x003a],\n  BracketRight: [/* SOLIDUS */ 0x002f, /* QUESTION MARK */ 0x003f],\n  Backslash: [/* APOSTROPHE */ 0x0027, /* COMMERCIAL AT */ 0x0040],\n  KeyA: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041],\n  KeyS: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  KeyD: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053],\n  KeyF: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyG: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  KeyH: [/* RIGHT SQUARE BRACKET */ 0x005d, /* RIGHT CURLY BRACKET */ 0x007d],\n  KeyJ: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d],\n  KeyK: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e],\n  KeyL: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045],\n  Semicolon: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049],\n  Quote: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  IntlBackslash: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  KeyZ: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058],\n  KeyX: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043],\n  KeyC: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyV: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  KeyB: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  KeyN: [/* NUMBER SIGN */ 0x0023, /* TILDE */ 0x007e],\n  KeyM: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  Comma: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  Period: [/* COMMA */ 0x002c, /* LESS-THAN SIGN */ 0x003c],\n  Slash: [/* FULL STOP */ 0x002e, /* GREATER-THAN SIGN */ 0x003e],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_EN_COLEMAK_DH_MATRIX: CharacterDict = {\n  Backquote: [/* GRAVE ACCENT */ 0x0060, /* TILDE */ 0x007e],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* COMMERCIAL AT */ 0x0040],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* NUMBER SIGN */ 0x0023],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* DOLLAR SIGN */ 0x0024],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* CIRCUMFLEX ACCENT */ 0x005e],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* AMPERSAND */ 0x0026],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* ASTERISK */ 0x002a],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* LEFT PARENTHESIS */ 0x0028],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* RIGHT PARENTHESIS */ 0x0029],\n  Minus: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f],\n  Equal: [/* EQUALS SIGN */ 0x003d, /* PLUS SIGN */ 0x002b],\n  KeyQ: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051],\n  KeyW: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057],\n  KeyE: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  KeyR: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  KeyT: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  KeyY: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  KeyU: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  KeyI: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055],\n  KeyO: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  KeyP: [/* SEMICOLON */ 0x003b, /* COLON */ 0x003a],\n  BracketLeft: [/* LEFT SQUARE BRACKET */ 0x005b, /* LEFT CURLY BRACKET */ 0x007b],\n  BracketRight: [/* RIGHT SQUARE BRACKET */ 0x005d, /* RIGHT CURLY BRACKET */ 0x007d],\n  Backslash: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  KeyA: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041],\n  KeyS: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  KeyD: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053],\n  KeyF: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyG: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  KeyH: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d],\n  KeyJ: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e],\n  KeyK: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045],\n  KeyL: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049],\n  Semicolon: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  Quote: [/* APOSTROPHE */ 0x0027, /* QUOTATION MARK */ 0x0022],\n  IntlBackslash: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f],\n  KeyZ: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  KeyX: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058],\n  KeyC: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043],\n  KeyV: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyB: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  KeyN: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  KeyM: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  Comma: [/* COMMA */ 0x002c, /* LESS-THAN SIGN */ 0x003c],\n  Period: [/* FULL STOP */ 0x002e, /* GREATER-THAN SIGN */ 0x003e],\n  Slash: [/* SOLIDUS */ 0x002f, /* QUESTION MARK */ 0x003f],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_EN_DVORAK: CharacterDict = {\n  Backquote: [/* GRAVE ACCENT */ 0x0060, /* TILDE */ 0x007e],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* COMMERCIAL AT */ 0x0040],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* NUMBER SIGN */ 0x0023],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* DOLLAR SIGN */ 0x0024],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* CIRCUMFLEX ACCENT */ 0x005e],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* AMPERSAND */ 0x0026],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* ASTERISK */ 0x002a],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* LEFT PARENTHESIS */ 0x0028],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* RIGHT PARENTHESIS */ 0x0029],\n  Minus: [/* LEFT SQUARE BRACKET */ 0x005b, /* LEFT CURLY BRACKET */ 0x007b],\n  Equal: [/* RIGHT SQUARE BRACKET */ 0x005d, /* RIGHT CURLY BRACKET */ 0x007d],\n  KeyQ: [/* APOSTROPHE */ 0x0027, /* QUOTATION MARK */ 0x0022],\n  KeyW: [/* COMMA */ 0x002c, /* LESS-THAN SIGN */ 0x003c],\n  KeyE: [/* FULL STOP */ 0x002e, /* GREATER-THAN SIGN */ 0x003e],\n  KeyR: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  KeyT: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  KeyY: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  KeyU: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  KeyI: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043],\n  KeyO: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  KeyP: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  BracketLeft: [/* SOLIDUS */ 0x002f, /* QUESTION MARK */ 0x003f],\n  BracketRight: [/* EQUALS SIGN */ 0x003d, /* PLUS SIGN */ 0x002b],\n  Backslash: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  KeyA: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041],\n  KeyS: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  KeyD: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045],\n  KeyF: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055],\n  KeyG: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049],\n  KeyH: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyJ: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  KeyK: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyL: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e],\n  Semicolon: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053],\n  Quote: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f],\n  IntlBackslash: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  KeyZ: [/* SEMICOLON */ 0x003b, /* COLON */ 0x003a],\n  KeyX: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051],\n  KeyC: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  KeyV: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  KeyB: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058],\n  KeyN: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  KeyM: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d],\n  Comma: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057],\n  Period: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  Slash: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_EN_DVORAK_PROG: CharacterDict = {\n  Backquote: [/* DOLLAR SIGN */ 0x0024, /* TILDE */ 0x007e],\n  Digit1: [/* AMPERSAND */ 0x0026, /* PERCENT SIGN */ 0x0025],\n  Digit2: [/* LEFT SQUARE BRACKET */ 0x005b, /* DIGIT SEVEN */ 0x0037],\n  Digit3: [/* LEFT CURLY BRACKET */ 0x007b, /* DIGIT FIVE */ 0x0035],\n  Digit4: [/* RIGHT CURLY BRACKET */ 0x007d, /* DIGIT THREE */ 0x0033],\n  Digit5: [/* LEFT PARENTHESIS */ 0x0028, /* DIGIT ONE */ 0x0031],\n  Digit6: [/* EQUALS SIGN */ 0x003d, /* DIGIT NINE */ 0x0039],\n  Digit7: [/* ASTERISK */ 0x002a, /* DIGIT ZERO */ 0x0030],\n  Digit8: [/* RIGHT PARENTHESIS */ 0x0029, /* DIGIT TWO */ 0x0032],\n  Digit9: [/* PLUS SIGN */ 0x002b, /* DIGIT FOUR */ 0x0034],\n  Digit0: [/* RIGHT SQUARE BRACKET */ 0x005d, /* DIGIT SIX */ 0x0036],\n  Minus: [/* EXCLAMATION MARK */ 0x0021, /* DIGIT EIGHT */ 0x0038],\n  Equal: [/* NUMBER SIGN */ 0x0023, /* GRAVE ACCENT */ 0x0060],\n  KeyQ: [/* SEMICOLON */ 0x003b, /* COLON */ 0x003a],\n  KeyW: [/* COMMA */ 0x002c, /* LESS-THAN SIGN */ 0x003c],\n  KeyE: [/* FULL STOP */ 0x002e, /* GREATER-THAN SIGN */ 0x003e],\n  KeyR: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  KeyT: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  KeyY: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  KeyU: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  KeyI: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043],\n  KeyO: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  KeyP: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  BracketLeft: [/* SOLIDUS */ 0x002f, /* QUESTION MARK */ 0x003f],\n  BracketRight: [/* COMMERCIAL AT */ 0x0040, /* CIRCUMFLEX ACCENT */ 0x005e],\n  Backslash: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  KeyA: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041],\n  KeyS: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  KeyD: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045],\n  KeyF: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055],\n  KeyG: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049],\n  KeyH: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyJ: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  KeyK: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyL: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e],\n  Semicolon: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053],\n  Quote: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f],\n  IntlBackslash: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  KeyZ: [/* APOSTROPHE */ 0x0027, /* QUOTATION MARK */ 0x0022],\n  KeyX: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051],\n  KeyC: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  KeyV: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  KeyB: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058],\n  KeyN: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  KeyM: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d],\n  Comma: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057],\n  Period: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  Slash: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_EN_ENGRAM: CharacterDict = {\n  Backquote: [/* LEFT SQUARE BRACKET */ 0x005b, /* LEFT CURLY BRACKET */ 0x007b],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* VERTICAL LINE */ 0x007c],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* EQUALS SIGN */ 0x003d],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* TILDE */ 0x007e],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* PLUS SIGN */ 0x002b],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* LESS-THAN SIGN */ 0x003c],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* GREATER-THAN SIGN */ 0x003e],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* CIRCUMFLEX ACCENT */ 0x005e],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* AMPERSAND */ 0x0026],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* PERCENT SIGN */ 0x0025],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* ASTERISK */ 0x002a],\n  Minus: [/* RIGHT SQUARE BRACKET */ 0x005d, /* RIGHT CURLY BRACKET */ 0x007d],\n  Equal: [/* SOLIDUS */ 0x002f, /* REVERSE SOLIDUS */ 0x005c],\n  KeyQ: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  KeyW: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  KeyE: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  KeyR: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055],\n  KeyT: [/* APOSTROPHE */ 0x0027, /* LEFT PARENTHESIS */ 0x0028],\n  KeyY: [/* QUOTATION MARK */ 0x0022, /* RIGHT PARENTHESIS */ 0x0029],\n  KeyU: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  KeyI: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyO: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057],\n  KeyP: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  BracketLeft: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  BracketRight: [/* NUMBER SIGN */ 0x0023, /* DOLLAR SIGN */ 0x0024],\n  Backslash: [/* COMMERCIAL AT */ 0x0040, /* GRAVE ACCENT */ 0x0060],\n  KeyA: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043],\n  KeyS: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049],\n  KeyD: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045],\n  KeyF: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041],\n  KeyG: [/* COMMA */ 0x002c, /* SEMICOLON */ 0x003b],\n  KeyH: [/* FULL STOP */ 0x002e, /* COLON */ 0x003a],\n  KeyJ: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  KeyK: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyL: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053],\n  Semicolon: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e],\n  Quote: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051],\n  IntlBackslash: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  KeyZ: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  KeyX: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058],\n  KeyC: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  KeyV: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  KeyB: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f],\n  KeyN: [/* QUESTION MARK */ 0x003f, /* EXCLAMATION MARK */ 0x0021],\n  KeyM: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  Comma: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d],\n  Period: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  Slash: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_EN_GALLIUM: CharacterDict = {\n  Backquote: [/* GRAVE ACCENT */ 0x0060, /* TILDE */ 0x007e],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* COMMERCIAL AT */ 0x0040],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* NUMBER SIGN */ 0x0023],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* DOLLAR SIGN */ 0x0024],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* CIRCUMFLEX ACCENT */ 0x005e],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* AMPERSAND */ 0x0026],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* ASTERISK */ 0x002a],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* LEFT PARENTHESIS */ 0x0028],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* RIGHT PARENTHESIS */ 0x0029],\n  Minus: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f],\n  Equal: [/* EQUALS SIGN */ 0x003d, /* PLUS SIGN */ 0x002b],\n  KeyQ: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  KeyW: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  KeyE: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyR: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043],\n  KeyT: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  KeyY: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  KeyU: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  KeyI: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  KeyO: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055],\n  KeyP: [/* COMMA */ 0x002c, /* LESS-THAN SIGN */ 0x003c],\n  BracketLeft: [/* LEFT SQUARE BRACKET */ 0x005b, /* LEFT CURLY BRACKET */ 0x007b],\n  BracketRight: [/* RIGHT SQUARE BRACKET */ 0x005d, /* RIGHT CURLY BRACKET */ 0x007d],\n  Backslash: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  KeyA: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e],\n  KeyS: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  KeyD: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyF: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053],\n  KeyG: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  KeyH: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  KeyJ: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  KeyK: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041],\n  KeyL: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045],\n  Semicolon: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049],\n  Quote: [/* SOLIDUS */ 0x002f, /* QUESTION MARK */ 0x003f],\n  KeyZ: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058],\n  KeyX: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051],\n  KeyC: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d],\n  KeyV: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057],\n  KeyB: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  KeyN: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  KeyM: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  Comma: [/* APOSTROPHE */ 0x0027, /* QUOTATION MARK */ 0x0022],\n  Period: [/* SEMICOLON */ 0x003b, /* COLON */ 0x003a],\n  Slash: [/* FULL STOP */ 0x002e, /* GREATER-THAN SIGN */ 0x003e],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_EN_GALLIUM_MATRIX: CharacterDict = {\n  Backquote: [/* GRAVE ACCENT */ 0x0060, /* TILDE */ 0x007e],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* COMMERCIAL AT */ 0x0040],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* NUMBER SIGN */ 0x0023],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* DOLLAR SIGN */ 0x0024],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* CIRCUMFLEX ACCENT */ 0x005e],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* AMPERSAND */ 0x0026],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* ASTERISK */ 0x002a],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* LEFT PARENTHESIS */ 0x0028],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* RIGHT PARENTHESIS */ 0x0029],\n  Minus: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f],\n  Equal: [/* EQUALS SIGN */ 0x003d, /* PLUS SIGN */ 0x002b],\n  KeyQ: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  KeyW: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  KeyE: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyR: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043],\n  KeyT: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  KeyY: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  KeyU: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  KeyI: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  KeyO: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055],\n  KeyP: [/* COMMA */ 0x002c, /* LESS-THAN SIGN */ 0x003c],\n  BracketLeft: [/* LEFT SQUARE BRACKET */ 0x005b, /* LEFT CURLY BRACKET */ 0x007b],\n  BracketRight: [/* RIGHT SQUARE BRACKET */ 0x005d, /* RIGHT CURLY BRACKET */ 0x007d],\n  Backslash: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  KeyA: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e],\n  KeyS: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  KeyD: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyF: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053],\n  KeyG: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  KeyH: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  KeyJ: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  KeyK: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041],\n  KeyL: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045],\n  Semicolon: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049],\n  Quote: [/* SOLIDUS */ 0x002f, /* QUESTION MARK */ 0x003f],\n  KeyZ: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058],\n  KeyX: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051],\n  KeyC: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d],\n  KeyV: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057],\n  KeyB: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  KeyN: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  KeyM: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  Comma: [/* APOSTROPHE */ 0x0027, /* QUOTATION MARK */ 0x0022],\n  Period: [/* SEMICOLON */ 0x003b, /* COLON */ 0x003a],\n  Slash: [/* FULL STOP */ 0x002e, /* GREATER-THAN SIGN */ 0x003e],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_EN_GRAPHITE: CharacterDict = {\n  Backquote: [/* GRAVE ACCENT */ 0x0060, /* TILDE */ 0x007e],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* COMMERCIAL AT */ 0x0040],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* NUMBER SIGN */ 0x0023],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* DOLLAR SIGN */ 0x0024],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* CIRCUMFLEX ACCENT */ 0x005e],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* AMPERSAND */ 0x0026],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* ASTERISK */ 0x002a],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* LEFT PARENTHESIS */ 0x0028],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* RIGHT PARENTHESIS */ 0x0029],\n  Minus: [/* LEFT SQUARE BRACKET */ 0x005b, /* LEFT CURLY BRACKET */ 0x007b],\n  Equal: [/* RIGHT SQUARE BRACKET */ 0x005d, /* RIGHT CURLY BRACKET */ 0x007d],\n  KeyQ: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  KeyW: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  KeyE: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyR: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057],\n  KeyT: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  KeyY: [/* APOSTROPHE */ 0x0027, /* LOW LINE */ 0x005f],\n  KeyU: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  KeyI: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  KeyO: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055],\n  KeyP: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  BracketLeft: [/* SEMICOLON */ 0x003b, /* COLON */ 0x003a],\n  BracketRight: [/* EQUALS SIGN */ 0x003d, /* PLUS SIGN */ 0x002b],\n  Backslash: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  KeyA: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e],\n  KeyS: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  KeyD: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyF: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053],\n  KeyG: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  KeyH: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  KeyJ: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  KeyK: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041],\n  KeyL: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045],\n  Semicolon: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049],\n  Quote: [/* COMMA */ 0x002c, /* QUESTION MARK */ 0x003f],\n  IntlBackslash: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  KeyZ: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051],\n  KeyX: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058],\n  KeyC: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d],\n  KeyV: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043],\n  KeyB: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  KeyN: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  KeyM: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  Comma: [/* FULL STOP */ 0x002e, /* GREATER-THAN SIGN */ 0x003e],\n  Period: [/* HYPHEN-MINUS */ 0x002d, /* QUOTATION MARK */ 0x0022],\n  Slash: [/* SOLIDUS */ 0x002f, /* LESS-THAN SIGN */ 0x003c],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_EN_HALMAK: CharacterDict = {\n  Backquote: [/* GRAVE ACCENT */ 0x0060, /* TILDE */ 0x007e],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* COMMERCIAL AT */ 0x0040],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* NUMBER SIGN */ 0x0023],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* DOLLAR SIGN */ 0x0024],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* CIRCUMFLEX ACCENT */ 0x005e],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* AMPERSAND */ 0x0026],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* ASTERISK */ 0x002a],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* LESS-THAN SIGN */ 0x003c],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* GREATER-THAN SIGN */ 0x003e],\n  Minus: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f],\n  Equal: [/* EQUALS SIGN */ 0x003d, /* PLUS SIGN */ 0x002b],\n  KeyQ: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057],\n  KeyW: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  KeyE: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  KeyR: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  KeyT: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  KeyY: [/* SEMICOLON */ 0x003b, /* COLON */ 0x003a],\n  KeyU: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051],\n  KeyI: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055],\n  KeyO: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyP: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  BracketLeft: [/* LEFT SQUARE BRACKET */ 0x005b, /* LEFT CURLY BRACKET */ 0x007b],\n  BracketRight: [/* RIGHT SQUARE BRACKET */ 0x005d, /* RIGHT CURLY BRACKET */ 0x007d],\n  Backslash: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  KeyA: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053],\n  KeyS: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  KeyD: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e],\n  KeyF: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyG: [/* COMMA */ 0x002c, /* LEFT PARENTHESIS */ 0x0028],\n  KeyH: [/* FULL STOP */ 0x002e, /* RIGHT PARENTHESIS */ 0x0029],\n  KeyJ: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041],\n  KeyK: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045],\n  KeyL: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  Semicolon: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049],\n  Quote: [/* APOSTROPHE */ 0x0027, /* QUOTATION MARK */ 0x0022],\n  IntlBackslash: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  KeyZ: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  KeyX: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d],\n  KeyC: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  KeyV: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043],\n  KeyB: [/* SOLIDUS */ 0x002f, /* QUESTION MARK */ 0x003f],\n  KeyN: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  KeyM: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  Comma: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058],\n  Period: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  Slash: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_EN_HANDS_DOWN_NEU: CharacterDict = {\n  Backquote: [/* GRAVE ACCENT */ 0x0060, /* TILDE */ 0x007e],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* COMMERCIAL AT */ 0x0040],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* NUMBER SIGN */ 0x0023],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* DOLLAR SIGN */ 0x0024],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* CIRCUMFLEX ACCENT */ 0x005e],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* AMPERSAND */ 0x0026],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* ASTERISK */ 0x002a],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* LEFT PARENTHESIS */ 0x0028],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* RIGHT PARENTHESIS */ 0x0029],\n  Minus: [/* RIGHT SQUARE BRACKET */ 0x005d, /* RIGHT CURLY BRACKET */ 0x007d],\n  Equal: [/* LEFT SQUARE BRACKET */ 0x005b, /* LEFT CURLY BRACKET */ 0x007b],\n  KeyQ: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057],\n  KeyW: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  KeyE: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d],\n  KeyR: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  KeyT: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  KeyY: [/* SOLIDUS */ 0x002f, /* QUESTION MARK */ 0x003f],\n  KeyU: [/* FULL STOP */ 0x002e, /* GREATER-THAN SIGN */ 0x003e],\n  KeyI: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051],\n  KeyO: [/* QUOTATION MARK */ 0x0022],\n  KeyP: [/* APOSTROPHE */ 0x0027],\n  BracketLeft: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  Backslash: [/* SEMICOLON */ 0x003b, /* COLON */ 0x003a],\n  KeyA: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  KeyS: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053],\n  KeyD: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e],\n  KeyF: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyG: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  KeyH: [/* COMMA */ 0x002c, /* LESS-THAN SIGN */ 0x003c],\n  KeyJ: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041],\n  KeyK: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045],\n  KeyL: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049],\n  Semicolon: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  Quote: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  IntlBackslash: [/* SEMICOLON */ 0x003b, /* COLON */ 0x003a],\n  KeyZ: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058],\n  KeyX: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043],\n  KeyC: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  KeyV: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyB: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  KeyN: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f],\n  KeyM: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055],\n  Comma: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  Period: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  Slash: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_EN_HANDS_DOWN_PROMETHIUM: CharacterDict = {\n  Backquote: [/* GRAVE ACCENT */ 0x0060, /* TILDE */ 0x007e],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* COMMERCIAL AT */ 0x0040],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* NUMBER SIGN */ 0x0023],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* DOLLAR SIGN */ 0x0024],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* CIRCUMFLEX ACCENT */ 0x005e],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* AMPERSAND */ 0x0026],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* ASTERISK */ 0x002a],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* LEFT PARENTHESIS */ 0x0028],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* RIGHT PARENTHESIS */ 0x0029],\n  Minus: [/* RIGHT SQUARE BRACKET */ 0x005d, /* RIGHT CURLY BRACKET */ 0x007d],\n  Equal: [/* LEFT SQUARE BRACKET */ 0x005b, /* LEFT CURLY BRACKET */ 0x007b],\n  KeyQ: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  KeyW: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  KeyE: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyR: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  KeyT: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058],\n  KeyY: [/* SEMICOLON */ 0x003b, /* COLON */ 0x003a],\n  KeyU: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055],\n  KeyI: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  KeyO: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  KeyP: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  BracketLeft: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  Backslash: [/* SEMICOLON */ 0x003b, /* COLON */ 0x003a],\n  KeyA: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053],\n  KeyS: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e],\n  KeyD: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyF: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  KeyG: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  KeyH: [/* COMMA */ 0x002c, /* LESS-THAN SIGN */ 0x003c],\n  KeyJ: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041],\n  KeyK: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045],\n  KeyL: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049],\n  Semicolon: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043],\n  Quote: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051],\n  IntlBackslash: [/* SEMICOLON */ 0x003b, /* COLON */ 0x003a],\n  KeyZ: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  KeyX: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057],\n  KeyC: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  KeyV: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d],\n  KeyB: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  KeyN: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f],\n  KeyM: [/* FULL STOP */ 0x002e, /* GREATER-THAN SIGN */ 0x003e],\n  Comma: [/* APOSTROPHE */ 0x0027],\n  Period: [/* EQUALS SIGN */ 0x003d, /* PLUS SIGN */ 0x002b],\n  Slash: [/* SOLIDUS */ 0x002f, /* QUESTION MARK */ 0x003f],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_JA_JP_JIS: CharacterDict = {\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021, /* HIRAGANA LETTER NU */ 0x306c],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* QUOTATION MARK */ 0x0022, /* HIRAGANA LETTER HU */ 0x3075],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* NUMBER SIGN */ 0x0023, /* HIRAGANA LETTER A */ 0x3042, /* HIRAGANA LETTER SMALL A */ 0x3041],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* DOLLAR SIGN */ 0x0024, /* HIRAGANA LETTER U */ 0x3046, /* HIRAGANA LETTER SMALL U */ 0x3045],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025, /* HIRAGANA LETTER E */ 0x3048, /* HIRAGANA LETTER SMALL E */ 0x3047],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* AMPERSAND */ 0x0026, /* HIRAGANA LETTER O */ 0x304a, /* HIRAGANA LETTER SMALL O */ 0x3049],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* APOSTROPHE */ 0x0027, /* HIRAGANA LETTER YA */ 0x3084, /* HIRAGANA LETTER SMALL YA */ 0x3083],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* LEFT PARENTHESIS */ 0x0028, /* HIRAGANA LETTER YU */ 0x3086, /* HIRAGANA LETTER SMALL YU */ 0x3085],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* RIGHT PARENTHESIS */ 0x0029, /* HIRAGANA LETTER YO */ 0x3088, /* HIRAGANA LETTER SMALL YO */ 0x3087],\n  Digit0: [/* DIGIT ZERO */ 0x0030, null, /* HIRAGANA LETTER WA */ 0x308f, /* HIRAGANA LETTER WO */ 0x3092],\n  Minus: [/* HYPHEN-MINUS */ 0x002d, /* EQUALS SIGN */ 0x003d, /* HIRAGANA LETTER HO */ 0x307b],\n  Equal: [/* CIRCUMFLEX ACCENT */ 0x005e, /* TILDE */ 0x007e, /* HIRAGANA LETTER HE */ 0x3078],\n  IntlYen: [/* YEN SIGN */ 0x00a5, /* LOW LINE */ 0x005f],\n  KeyQ: [/* LATIN CAPITAL LETTER Q */ 0x0051, /* LATIN SMALL LETTER Q */ 0x0071, /* HIRAGANA LETTER TA */ 0x305f],\n  KeyW: [/* LATIN CAPITAL LETTER W */ 0x0057, /* LATIN SMALL LETTER W */ 0x0077, /* HIRAGANA LETTER TE */ 0x3066],\n  KeyE: [/* LATIN CAPITAL LETTER E */ 0x0045, /* LATIN SMALL LETTER E */ 0x0065, /* HIRAGANA LETTER I */ 0x3044, /* HIRAGANA LETTER SMALL I */ 0x3043],\n  KeyR: [/* LATIN CAPITAL LETTER R */ 0x0052, /* LATIN SMALL LETTER R */ 0x0072, /* HIRAGANA LETTER SU */ 0x3059],\n  KeyT: [/* LATIN CAPITAL LETTER T */ 0x0054, /* LATIN SMALL LETTER T */ 0x0074, /* HIRAGANA LETTER KA */ 0x304b],\n  KeyY: [/* LATIN CAPITAL LETTER Y */ 0x0059, /* LATIN SMALL LETTER Y */ 0x0079, /* HIRAGANA LETTER N */ 0x3093],\n  KeyU: [/* LATIN CAPITAL LETTER U */ 0x0055, /* LATIN SMALL LETTER U */ 0x0075, /* HIRAGANA LETTER NA */ 0x306a],\n  KeyI: [/* LATIN CAPITAL LETTER I */ 0x0049, /* LATIN SMALL LETTER I */ 0x0069, /* HIRAGANA LETTER NI */ 0x306b],\n  KeyO: [/* LATIN CAPITAL LETTER O */ 0x004f, /* LATIN SMALL LETTER O */ 0x006f, /* HIRAGANA LETTER RA */ 0x3089],\n  KeyP: [/* LATIN CAPITAL LETTER P */ 0x0050, /* LATIN SMALL LETTER P */ 0x0070, /* HIRAGANA LETTER SE */ 0x305b],\n  BracketLeft: [/* COMMERCIAL AT */ 0x0040, /* GRAVE ACCENT */ 0x0060, /* KATAKANA-HIRAGANA VOICED SOUND MARK */ 0x309b],\n  BracketRight: [/* LEFT SQUARE BRACKET */ 0x005b, /* LEFT CURLY BRACKET */ 0x007b, /* WHITE CIRCLE */ 0x25cb, /* LEFT CORNER BRACKET */ 0x300c],\n  Backslash: [/* RIGHT SQUARE BRACKET */ 0x005d, /* RIGHT CURLY BRACKET */ 0x007d, /* HIRAGANA LETTER MU */ 0x3080, /* RIGHT CORNER BRACKET */ 0x300d],\n  KeyA: [/* LATIN CAPITAL LETTER A */ 0x0041, /* LATIN SMALL LETTER A */ 0x0061, /* HIRAGANA LETTER TI */ 0x3061],\n  KeyS: [/* LATIN CAPITAL LETTER S */ 0x0053, /* LATIN SMALL LETTER S */ 0x0073, /* HIRAGANA LETTER TO */ 0x3068],\n  KeyD: [/* LATIN CAPITAL LETTER D */ 0x0044, /* LATIN SMALL LETTER D */ 0x0064, /* HIRAGANA LETTER SI */ 0x3057],\n  KeyF: [/* LATIN CAPITAL LETTER F */ 0x0046, /* LATIN SMALL LETTER F */ 0x0066, /* HIRAGANA LETTER HA */ 0x306f],\n  KeyG: [/* LATIN CAPITAL LETTER G */ 0x0047, /* LATIN SMALL LETTER G */ 0x0067, /* HIRAGANA LETTER KI */ 0x304d],\n  KeyH: [/* LATIN CAPITAL LETTER H */ 0x0048, /* LATIN SMALL LETTER H */ 0x0068, /* HIRAGANA LETTER KU */ 0x304f],\n  KeyJ: [/* LATIN CAPITAL LETTER J */ 0x004a, /* LATIN SMALL LETTER J */ 0x006a, /* HIRAGANA LETTER MA */ 0x307e],\n  KeyK: [/* LATIN CAPITAL LETTER K */ 0x004b, /* LATIN SMALL LETTER K */ 0x006b, /* HIRAGANA LETTER NO */ 0x306e],\n  KeyL: [/* LATIN CAPITAL LETTER L */ 0x004c, /* LATIN SMALL LETTER L */ 0x006c, /* HIRAGANA LETTER RI */ 0x308a],\n  Semicolon: [/* SEMICOLON */ 0x003b, /* PLUS SIGN */ 0x002b, /* HIRAGANA LETTER RE */ 0x308c],\n  Quote: [/* COLON */ 0x003a, /* ASTERISK */ 0x002a, /* HIRAGANA LETTER KE */ 0x3051],\n  IntlBackslash: [/* RIGHT SQUARE BRACKET */ 0x005d, /* RIGHT CURLY BRACKET */ 0x007d, /* HIRAGANA LETTER MU */ 0x3080, /* RIGHT CORNER BRACKET */ 0x300d],\n  KeyZ: [/* LATIN CAPITAL LETTER Z */ 0x005a, /* LATIN SMALL LETTER Z */ 0x007a, /* HIRAGANA LETTER TU */ 0x3064, /* HIRAGANA LETTER SMALL TU */ 0x3063],\n  KeyX: [/* LATIN CAPITAL LETTER X */ 0x0058, /* LATIN SMALL LETTER X */ 0x0078, /* HIRAGANA LETTER SA */ 0x3055],\n  KeyC: [/* LATIN CAPITAL LETTER C */ 0x0043, /* LATIN SMALL LETTER C */ 0x0063, /* HIRAGANA LETTER SO */ 0x305d],\n  KeyV: [/* LATIN CAPITAL LETTER V */ 0x0056, /* LATIN SMALL LETTER V */ 0x0076, /* HIRAGANA LETTER HI */ 0x3072],\n  KeyB: [/* LATIN CAPITAL LETTER B */ 0x0042, /* LATIN SMALL LETTER B */ 0x0062, /* HIRAGANA LETTER KO */ 0x3053],\n  KeyN: [/* LATIN CAPITAL LETTER N */ 0x004e, /* LATIN SMALL LETTER N */ 0x006e, /* HIRAGANA LETTER MI */ 0x307f],\n  KeyM: [/* LATIN CAPITAL LETTER M */ 0x004d, /* LATIN SMALL LETTER M */ 0x006d, /* HIRAGANA LETTER MO */ 0x3082],\n  Comma: [/* COMMA */ 0x002c, /* LESS-THAN SIGN */ 0x003c, /* HIRAGANA LETTER NE */ 0x306d, /* GRAVE ACCENT */ 0x0060],\n  Period: [/* FULL STOP */ 0x002e, /* GREATER-THAN SIGN */ 0x003e, /* HIRAGANA LETTER RU */ 0x308b, /* WHITE CIRCLE */ 0x25cb],\n  Slash: [/* SOLIDUS */ 0x002f, /* QUESTION MARK */ 0x003f, /* HIRAGANA LETTER ME */ 0x3081, /* BLACK CIRCLE */ 0x25cf],\n  IntlRo: [/* REVERSE SOLIDUS */ 0x005c, /* HIRAGANA LETTER RO */ 0x308d],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_EN_NERPS: CharacterDict = {\n  Backquote: [/* GRAVE ACCENT */ 0x0060, /* TILDE */ 0x007e],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* COMMERCIAL AT */ 0x0040],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* NUMBER SIGN */ 0x0023],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* DOLLAR SIGN */ 0x0024],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* CIRCUMFLEX ACCENT */ 0x005e],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* AMPERSAND */ 0x0026],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* ASTERISK */ 0x002a],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* LEFT PARENTHESIS */ 0x0028],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* RIGHT PARENTHESIS */ 0x0029],\n  Minus: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f],\n  Equal: [/* EQUALS SIGN */ 0x003d, /* PLUS SIGN */ 0x002b],\n  KeyQ: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058],\n  KeyW: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  KeyE: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyR: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  KeyT: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  KeyY: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  KeyU: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  KeyI: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  KeyO: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055],\n  KeyP: [/* SEMICOLON */ 0x003b, /* COLON */ 0x003a],\n  BracketLeft: [/* LEFT SQUARE BRACKET */ 0x005b, /* LEFT CURLY BRACKET */ 0x007b],\n  BracketRight: [/* RIGHT SQUARE BRACKET */ 0x005d, /* RIGHT CURLY BRACKET */ 0x007d],\n  Backslash: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  KeyA: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e],\n  KeyS: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  KeyD: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyF: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053],\n  KeyG: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  KeyH: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  KeyJ: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  KeyK: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045],\n  KeyL: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049],\n  Semicolon: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041],\n  Quote: [/* SOLIDUS */ 0x002f, /* QUESTION MARK */ 0x003f],\n  IntlBackslash: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  KeyZ: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  KeyX: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d],\n  KeyC: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043],\n  KeyV: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057],\n  KeyB: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051],\n  KeyN: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  KeyM: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  Comma: [/* APOSTROPHE */ 0x0027, /* QUOTATION MARK */ 0x0022],\n  Period: [/* COMMA */ 0x002c, /* LESS-THAN SIGN */ 0x003c],\n  Slash: [/* FULL STOP */ 0x002e, /* GREATER-THAN SIGN */ 0x003e],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_EN_NERPS_MATRIX: CharacterDict = {\n  Backquote: [/* GRAVE ACCENT */ 0x0060, /* TILDE */ 0x007e],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* COMMERCIAL AT */ 0x0040],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* NUMBER SIGN */ 0x0023],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* DOLLAR SIGN */ 0x0024],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* CIRCUMFLEX ACCENT */ 0x005e],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* AMPERSAND */ 0x0026],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* ASTERISK */ 0x002a],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* LEFT PARENTHESIS */ 0x0028],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* RIGHT PARENTHESIS */ 0x0029],\n  Minus: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f],\n  Equal: [/* EQUALS SIGN */ 0x003d, /* PLUS SIGN */ 0x002b],\n  KeyQ: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058],\n  KeyW: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  KeyE: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyR: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  KeyT: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  KeyY: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  KeyU: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  KeyI: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  KeyO: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055],\n  KeyP: [/* SEMICOLON */ 0x003b, /* COLON */ 0x003a],\n  BracketLeft: [/* LEFT SQUARE BRACKET */ 0x005b, /* LEFT CURLY BRACKET */ 0x007b],\n  BracketRight: [/* RIGHT SQUARE BRACKET */ 0x005d, /* RIGHT CURLY BRACKET */ 0x007d],\n  Backslash: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  KeyA: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e],\n  KeyS: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  KeyD: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyF: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053],\n  KeyG: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057],\n  KeyH: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  KeyJ: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  KeyK: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045],\n  KeyL: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049],\n  Semicolon: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041],\n  Quote: [/* SOLIDUS */ 0x002f, /* QUESTION MARK */ 0x003f],\n  IntlBackslash: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  KeyZ: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051],\n  KeyX: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  KeyC: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d],\n  KeyV: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043],\n  KeyB: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  KeyN: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  KeyM: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  Comma: [/* APOSTROPHE */ 0x0027, /* QUOTATION MARK */ 0x0022],\n  Period: [/* COMMA */ 0x002c, /* LESS-THAN SIGN */ 0x003c],\n  Slash: [/* FULL STOP */ 0x002e, /* GREATER-THAN SIGN */ 0x003e],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_EN_NORMAN: CharacterDict = {\n  Backquote: [/* GRAVE ACCENT */ 0x0060, /* TILDE */ 0x007e],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* COMMERCIAL AT */ 0x0040],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* NUMBER SIGN */ 0x0023],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* DOLLAR SIGN */ 0x0024],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* CIRCUMFLEX ACCENT */ 0x005e],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* AMPERSAND */ 0x0026],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* ASTERISK */ 0x002a],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* LEFT PARENTHESIS */ 0x0028],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* RIGHT PARENTHESIS */ 0x0029],\n  Minus: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f],\n  Equal: [/* EQUALS SIGN */ 0x003d, /* PLUS SIGN */ 0x002b],\n  KeyQ: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051],\n  KeyW: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057],\n  KeyE: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyR: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  KeyT: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  KeyY: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  KeyU: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055],\n  KeyI: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  KeyO: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  KeyP: [/* SEMICOLON */ 0x003b, /* COLON */ 0x003a],\n  BracketLeft: [/* LEFT SQUARE BRACKET */ 0x005b, /* LEFT CURLY BRACKET */ 0x007b],\n  BracketRight: [/* RIGHT SQUARE BRACKET */ 0x005d, /* RIGHT CURLY BRACKET */ 0x007d],\n  Backslash: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  KeyA: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041],\n  KeyS: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053],\n  KeyD: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045],\n  KeyF: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyG: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  KeyH: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  KeyJ: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e],\n  KeyK: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049],\n  KeyL: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  Semicolon: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  Quote: [/* APOSTROPHE */ 0x0027, /* QUOTATION MARK */ 0x0022],\n  IntlBackslash: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  KeyZ: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  KeyX: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058],\n  KeyC: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043],\n  KeyV: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  KeyB: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  KeyN: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  KeyM: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d],\n  Comma: [/* COMMA */ 0x002c, /* LESS-THAN SIGN */ 0x003c],\n  Period: [/* FULL STOP */ 0x002e, /* GREATER-THAN SIGN */ 0x003e],\n  Slash: [/* SOLIDUS */ 0x002f, /* QUESTION MARK */ 0x003f],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_EN_STURDY: CharacterDict = {\n  Backquote: [/* GRAVE ACCENT */ 0x0060, /* TILDE */ 0x007e],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* COMMERCIAL AT */ 0x0040],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* NUMBER SIGN */ 0x0023],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* DOLLAR SIGN */ 0x0024],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* CIRCUMFLEX ACCENT */ 0x005e],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* AMPERSAND */ 0x0026],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* ASTERISK */ 0x002a],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* LEFT PARENTHESIS */ 0x0028],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* RIGHT PARENTHESIS */ 0x0029],\n  Minus: [/* RIGHT SQUARE BRACKET */ 0x005d, /* RIGHT CURLY BRACKET */ 0x007d],\n  Equal: [/* LEFT SQUARE BRACKET */ 0x005b, /* LEFT CURLY BRACKET */ 0x007b],\n  KeyQ: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  KeyW: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d],\n  KeyE: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  KeyR: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043],\n  KeyT: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  KeyY: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058],\n  KeyU: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  KeyI: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  KeyO: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055],\n  KeyP: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  BracketLeft: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  Backslash: [/* SEMICOLON */ 0x003b, /* COLON */ 0x003a],\n  KeyA: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053],\n  KeyS: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyD: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  KeyF: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyG: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  KeyH: [/* FULL STOP */ 0x002e, /* GREATER-THAN SIGN */ 0x003e],\n  KeyJ: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e],\n  KeyK: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041],\n  KeyL: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045],\n  Semicolon: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049],\n  Quote: [/* APOSTROPHE */ 0x0027],\n  IntlBackslash: [/* COMMA */ 0x002c, /* LESS-THAN SIGN */ 0x003c],\n  KeyZ: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  KeyX: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  KeyC: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051],\n  KeyV: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  KeyB: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057],\n  KeyN: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  KeyM: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  Comma: [/* APOSTROPHE */ 0x0027],\n  Period: [/* SEMICOLON */ 0x003b, /* COLON */ 0x003a],\n  Slash: [/* COMMA */ 0x002c, /* LESS-THAN SIGN */ 0x003c],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_EN_UK: CharacterDict = {\n  Backquote: [/* GRAVE ACCENT */ 0x0060, /* NOT SIGN */ 0x00ac, /* BROKEN BAR */ 0x00a6],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* QUOTATION MARK */ 0x0022],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* POUND SIGN */ 0x00a3],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* DOLLAR SIGN */ 0x0024, /* EURO SIGN */ 0x20ac],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* CIRCUMFLEX ACCENT */ 0x005e],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* AMPERSAND */ 0x0026],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* ASTERISK */ 0x002a],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* LEFT PARENTHESIS */ 0x0028],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* RIGHT PARENTHESIS */ 0x0029],\n  Minus: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f],\n  Equal: [/* EQUALS SIGN */ 0x003d, /* PLUS SIGN */ 0x002b],\n  KeyQ: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051],\n  KeyW: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057],\n  KeyE: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045, /* LATIN SMALL LETTER E WITH ACUTE */ 0x00e9, /* LATIN CAPITAL LETTER E WITH ACUTE */ 0x00c9],\n  KeyR: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  KeyT: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyY: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  KeyU: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055, /* LATIN SMALL LETTER U WITH ACUTE */ 0x00fa, /* LATIN CAPITAL LETTER U WITH ACUTE */ 0x00da],\n  KeyI: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049, /* LATIN SMALL LETTER I WITH ACUTE */ 0x00ed, /* LATIN CAPITAL LETTER I WITH ACUTE */ 0x00cd],\n  KeyO: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f, /* LATIN SMALL LETTER O WITH ACUTE */ 0x00f3, /* LATIN CAPITAL LETTER O WITH ACUTE */ 0x00d3],\n  KeyP: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  BracketLeft: [/* LEFT SQUARE BRACKET */ 0x005b, /* LEFT CURLY BRACKET */ 0x007b],\n  BracketRight: [/* RIGHT SQUARE BRACKET */ 0x005d, /* RIGHT CURLY BRACKET */ 0x007d],\n  Backslash: [/* NUMBER SIGN */ 0x0023, /* TILDE */ 0x007e, /* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  KeyA: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041, /* LATIN SMALL LETTER A WITH ACUTE */ 0x00e1, /* LATIN CAPITAL LETTER A WITH ACUTE */ 0x00c1],\n  KeyS: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053],\n  KeyD: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyF: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  KeyG: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  KeyH: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  KeyJ: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  KeyK: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  KeyL: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  Semicolon: [/* SEMICOLON */ 0x003b, /* COLON */ 0x003a],\n  Quote: [/* APOSTROPHE */ 0x0027, /* COMMERCIAL AT */ 0x0040],\n  IntlBackslash: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  KeyZ: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  KeyX: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058],\n  KeyC: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043],\n  KeyV: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  KeyB: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  KeyN: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e],\n  KeyM: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d],\n  Comma: [/* COMMA */ 0x002c, /* LESS-THAN SIGN */ 0x003c],\n  Period: [/* FULL STOP */ 0x002e, /* GREATER-THAN SIGN */ 0x003e],\n  Slash: [/* SOLIDUS */ 0x002f, /* QUESTION MARK */ 0x003f],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_EN_US: CharacterDict = {\n  Backquote: [/* GRAVE ACCENT */ 0x0060, /* TILDE */ 0x007e],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* COMMERCIAL AT */ 0x0040],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* NUMBER SIGN */ 0x0023],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* DOLLAR SIGN */ 0x0024],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* CIRCUMFLEX ACCENT */ 0x005e],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* AMPERSAND */ 0x0026],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* ASTERISK */ 0x002a],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* LEFT PARENTHESIS */ 0x0028],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* RIGHT PARENTHESIS */ 0x0029],\n  Minus: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f],\n  Equal: [/* EQUALS SIGN */ 0x003d, /* PLUS SIGN */ 0x002b],\n  KeyQ: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051],\n  KeyW: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057],\n  KeyE: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045],\n  KeyR: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  KeyT: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyY: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  KeyU: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055],\n  KeyI: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049],\n  KeyO: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  KeyP: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  BracketLeft: [/* LEFT SQUARE BRACKET */ 0x005b, /* LEFT CURLY BRACKET */ 0x007b],\n  BracketRight: [/* RIGHT SQUARE BRACKET */ 0x005d, /* RIGHT CURLY BRACKET */ 0x007d],\n  Backslash: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  KeyA: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041],\n  KeyS: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053],\n  KeyD: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyF: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  KeyG: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  KeyH: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  KeyJ: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  KeyK: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  KeyL: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  Semicolon: [/* SEMICOLON */ 0x003b, /* COLON */ 0x003a],\n  Quote: [/* APOSTROPHE */ 0x0027, /* QUOTATION MARK */ 0x0022],\n  IntlBackslash: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  KeyZ: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  KeyX: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058],\n  KeyC: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043],\n  KeyV: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  KeyB: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  KeyN: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e],\n  KeyM: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d],\n  Comma: [/* COMMA */ 0x002c, /* LESS-THAN SIGN */ 0x003c],\n  Period: [/* FULL STOP */ 0x002e, /* GREATER-THAN SIGN */ 0x003e],\n  Slash: [/* SOLIDUS */ 0x002f, /* QUESTION MARK */ 0x003f],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_EN_WORKMAN: CharacterDict = {\n  Backquote: [/* GRAVE ACCENT */ 0x0060, /* TILDE */ 0x007e],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* COMMERCIAL AT */ 0x0040],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* NUMBER SIGN */ 0x0023],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* DOLLAR SIGN */ 0x0024],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* CIRCUMFLEX ACCENT */ 0x005e],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* AMPERSAND */ 0x0026],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* ASTERISK */ 0x002a],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* LEFT PARENTHESIS */ 0x0028],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* RIGHT PARENTHESIS */ 0x0029],\n  Minus: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f],\n  Equal: [/* EQUALS SIGN */ 0x003d, /* PLUS SIGN */ 0x002b],\n  KeyQ: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051],\n  KeyW: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyE: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  KeyR: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057],\n  KeyT: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  KeyY: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  KeyU: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  KeyI: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055],\n  KeyO: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  KeyP: [/* SEMICOLON */ 0x003b, /* COLON */ 0x003a],\n  BracketLeft: [/* LEFT SQUARE BRACKET */ 0x005b, /* LEFT CURLY BRACKET */ 0x007b],\n  BracketRight: [/* RIGHT SQUARE BRACKET */ 0x005d, /* RIGHT CURLY BRACKET */ 0x007d],\n  Backslash: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  KeyA: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041],\n  KeyS: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053],\n  KeyD: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  KeyF: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyG: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  KeyH: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  KeyJ: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e],\n  KeyK: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045],\n  KeyL: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  Semicolon: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049],\n  Quote: [/* APOSTROPHE */ 0x0027, /* QUOTATION MARK */ 0x0022],\n  IntlBackslash: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  KeyZ: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  KeyX: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058],\n  KeyC: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d],\n  KeyV: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043],\n  KeyB: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  KeyN: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  KeyM: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  Comma: [/* COMMA */ 0x002c, /* LESS-THAN SIGN */ 0x003c],\n  Period: [/* FULL STOP */ 0x002e, /* GREATER-THAN SIGN */ 0x003e],\n  Slash: [/* SOLIDUS */ 0x002f, /* QUESTION MARK */ 0x003f],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_ES_ES: CharacterDict = {\n  Backquote: [/* MASCULINE ORDINAL INDICATOR */ 0x00ba, /* FEMININE ORDINAL INDICATOR */ 0x00aa, /* REVERSE SOLIDUS */ 0x005c],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021, /* VERTICAL LINE */ 0x007c],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* QUOTATION MARK */ 0x0022, /* COMMERCIAL AT */ 0x0040],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* MIDDLE DOT */ 0x00b7, /* NUMBER SIGN */ 0x0023],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* DOLLAR SIGN */ 0x0024, { dead: /* COMBINING TILDE */ 0x0303 }],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025, /* EURO SIGN */ 0x20ac],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* AMPERSAND */ 0x0026, /* NOT SIGN */ 0x00ac],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* SOLIDUS */ 0x002f],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* LEFT PARENTHESIS */ 0x0028],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* RIGHT PARENTHESIS */ 0x0029],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* EQUALS SIGN */ 0x003d],\n  Minus: [/* APOSTROPHE */ 0x0027, /* QUESTION MARK */ 0x003f],\n  Equal: [/* INVERTED EXCLAMATION MARK */ 0x00a1, /* INVERTED QUESTION MARK */ 0x00bf],\n  KeyQ: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051],\n  KeyW: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057],\n  KeyE: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045, /* EURO SIGN */ 0x20ac],\n  KeyR: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  KeyT: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyY: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  KeyU: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055],\n  KeyI: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049],\n  KeyO: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  KeyP: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  BracketLeft: [{ dead: /* COMBINING GRAVE ACCENT */ 0x0300 }, { dead: /* COMBINING CIRCUMFLEX ACCENT */ 0x0302 }, /* LEFT SQUARE BRACKET */ 0x005b],\n  BracketRight: [/* PLUS SIGN */ 0x002b, /* ASTERISK */ 0x002a, /* RIGHT SQUARE BRACKET */ 0x005d],\n  Backslash: [/* LATIN SMALL LETTER C WITH CEDILLA */ 0x00e7, /* LATIN CAPITAL LETTER C WITH CEDILLA */ 0x00c7, /* RIGHT CURLY BRACKET */ 0x007d],\n  KeyA: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041],\n  KeyS: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053],\n  KeyD: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyF: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  KeyG: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  KeyH: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  KeyJ: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  KeyK: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  KeyL: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  Semicolon: [/* LATIN SMALL LETTER N WITH TILDE */ 0x00f1, /* LATIN CAPITAL LETTER N WITH TILDE */ 0x00d1],\n  Quote: [{ dead: /* COMBINING ACUTE ACCENT */ 0x0301 }, { dead: /* COMBINING DIAERESIS */ 0x0308 }, /* LEFT CURLY BRACKET */ 0x007b],\n  IntlBackslash: [/* LESS-THAN SIGN */ 0x003c, /* GREATER-THAN SIGN */ 0x003e],\n  KeyZ: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  KeyX: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058],\n  KeyC: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043],\n  KeyV: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  KeyB: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  KeyN: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e],\n  KeyM: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d],\n  Comma: [/* COMMA */ 0x002c, /* SEMICOLON */ 0x003b],\n  Period: [/* FULL STOP */ 0x002e, /* COLON */ 0x003a],\n  Slash: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_ES_MX: CharacterDict = {\n  Backquote: [/* VERTICAL LINE */ 0x007c, /* DEGREE SIGN */ 0x00b0, /* NOT SIGN */ 0x00ac],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* QUOTATION MARK */ 0x0022],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* NUMBER SIGN */ 0x0023],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* DOLLAR SIGN */ 0x0024],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* AMPERSAND */ 0x0026],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* SOLIDUS */ 0x002f],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* LEFT PARENTHESIS */ 0x0028],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* RIGHT PARENTHESIS */ 0x0029],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* EQUALS SIGN */ 0x003d],\n  Minus: [/* APOSTROPHE */ 0x0027, /* QUESTION MARK */ 0x003f, /* REVERSE SOLIDUS */ 0x005c],\n  Equal: [/* INVERTED QUESTION MARK */ 0x00bf, /* INVERTED EXCLAMATION MARK */ 0x00a1],\n  KeyQ: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051, /* COMMERCIAL AT */ 0x0040],\n  KeyW: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057],\n  KeyE: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045],\n  KeyR: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  KeyT: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyY: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  KeyU: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055],\n  KeyI: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049],\n  KeyO: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  KeyP: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  BracketLeft: [{ dead: /* COMBINING ACUTE ACCENT */ 0x0301 }, { dead: /* COMBINING DIAERESIS */ 0x0308 }],\n  BracketRight: [/* PLUS SIGN */ 0x002b, /* ASTERISK */ 0x002a, /* TILDE */ 0x007e],\n  Backslash: [/* RIGHT CURLY BRACKET */ 0x007d, /* RIGHT SQUARE BRACKET */ 0x005d, { dead: /* COMBINING GRAVE ACCENT */ 0x0300 }],\n  KeyA: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041],\n  KeyS: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053],\n  KeyD: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyF: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  KeyG: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  KeyH: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  KeyJ: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  KeyK: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  KeyL: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  Semicolon: [/* LATIN SMALL LETTER N WITH TILDE */ 0x00f1, /* LATIN CAPITAL LETTER N WITH TILDE */ 0x00d1],\n  Quote: [/* LEFT CURLY BRACKET */ 0x007b, /* LEFT SQUARE BRACKET */ 0x005b, { dead: /* COMBINING CIRCUMFLEX ACCENT */ 0x0302 }],\n  IntlBackslash: [/* LESS-THAN SIGN */ 0x003c, /* GREATER-THAN SIGN */ 0x003e],\n  KeyZ: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  KeyX: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058],\n  KeyC: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043],\n  KeyV: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  KeyB: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  KeyN: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e],\n  KeyM: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d],\n  Comma: [/* COMMA */ 0x002c, /* SEMICOLON */ 0x003b],\n  Period: [/* FULL STOP */ 0x002e, /* COLON */ 0x003a],\n  Slash: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_FA_IR: CharacterDict = {\n  Backquote: [{ special: /* ZERO WIDTH JOINER */ 0x200d }, { special: /* ZERO WIDTH JOINER */ 0x200d }],\n  Digit1: [/* EXTENDED ARABIC-INDIC DIGIT ONE */ 0x06f1, /* EXCLAMATION MARK */ 0x0021],\n  Digit2: [/* EXTENDED ARABIC-INDIC DIGIT TWO */ 0x06f2, /* ARABIC THOUSANDS SEPARATOR */ 0x066c],\n  Digit3: [/* EXTENDED ARABIC-INDIC DIGIT THREE */ 0x06f3, /* ARABIC DECIMAL SEPARATOR */ 0x066b],\n  Digit4: [/* EXTENDED ARABIC-INDIC DIGIT FOUR */ 0x06f4, { ligature: \"ریال\" }],\n  Digit5: [/* EXTENDED ARABIC-INDIC DIGIT FIVE */ 0x06f5, /* ARABIC PERCENT SIGN */ 0x066a],\n  Digit6: [/* EXTENDED ARABIC-INDIC DIGIT SIX */ 0x06f6, /* MULTIPLICATION SIGN */ 0x00d7],\n  Digit7: [/* EXTENDED ARABIC-INDIC DIGIT SEVEN */ 0x06f7, /* ARABIC COMMA */ 0x060c],\n  Digit8: [/* EXTENDED ARABIC-INDIC DIGIT EIGHT */ 0x06f8, /* ASTERISK */ 0x002a],\n  Digit9: [/* EXTENDED ARABIC-INDIC DIGIT NINE */ 0x06f9, /* RIGHT PARENTHESIS */ 0x0029],\n  Digit0: [/* EXTENDED ARABIC-INDIC DIGIT ZERO */ 0x06f0, /* LEFT PARENTHESIS */ 0x0028],\n  Minus: [/* HYPHEN-MINUS */ 0x002d, /* ARABIC TATWEEL */ 0x0640],\n  Equal: [/* EQUALS SIGN */ 0x003d, /* PLUS SIGN */ 0x002b],\n  KeyQ: [/* ARABIC LETTER DAD */ 0x0636, /* ARABIC SUKUN */ 0x0652],\n  KeyW: [/* ARABIC LETTER SAD */ 0x0635, /* ARABIC DAMMATAN */ 0x064c],\n  KeyE: [/* ARABIC LETTER THEH */ 0x062b, /* ARABIC KASRATAN */ 0x064d],\n  KeyR: [/* ARABIC LETTER QAF */ 0x0642, /* ARABIC FATHATAN */ 0x064b],\n  KeyT: [/* ARABIC LETTER FEH */ 0x0641, /* ARABIC DAMMA */ 0x064f],\n  KeyY: [/* ARABIC LETTER GHAIN */ 0x063a, /* ARABIC KASRA */ 0x0650],\n  KeyU: [/* ARABIC LETTER AIN */ 0x0639, /* ARABIC FATHA */ 0x064e],\n  KeyI: [/* ARABIC LETTER HEH */ 0x0647, /* ARABIC SHADDA */ 0x0651],\n  KeyO: [/* ARABIC LETTER KHAH */ 0x062e, /* RIGHT SQUARE BRACKET */ 0x005d],\n  KeyP: [/* ARABIC LETTER HAH */ 0x062d, /* LEFT SQUARE BRACKET */ 0x005b],\n  BracketLeft: [/* ARABIC LETTER JEEM */ 0x062c, /* RIGHT CURLY BRACKET */ 0x007d],\n  BracketRight: [/* ARABIC LETTER TCHEH */ 0x0686, /* LEFT CURLY BRACKET */ 0x007b],\n  Backslash: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  KeyA: [/* ARABIC LETTER SHEEN */ 0x0634, /* ARABIC LETTER WAW WITH HAMZA ABOVE */ 0x0624],\n  KeyS: [/* ARABIC LETTER SEEN */ 0x0633, /* ARABIC LETTER YEH WITH HAMZA ABOVE */ 0x0626],\n  KeyD: [/* ARABIC LETTER FARSI YEH */ 0x06cc, /* ARABIC LETTER YEH */ 0x064a],\n  KeyF: [/* ARABIC LETTER BEH */ 0x0628, /* ARABIC LETTER ALEF WITH HAMZA BELOW */ 0x0625],\n  KeyG: [/* ARABIC LETTER LAM */ 0x0644, /* ARABIC LETTER ALEF WITH HAMZA ABOVE */ 0x0623],\n  KeyH: [/* ARABIC LETTER ALEF */ 0x0627, /* ARABIC LETTER ALEF WITH MADDA ABOVE */ 0x0622],\n  KeyJ: [/* ARABIC LETTER TEH */ 0x062a, /* ARABIC LETTER TEH MARBUTA */ 0x0629],\n  KeyK: [/* ARABIC LETTER NOON */ 0x0646, /* RIGHT-POINTING DOUBLE ANGLE QUOTATION MARK */ 0x00bb],\n  KeyL: [/* ARABIC LETTER MEEM */ 0x0645, /* LEFT-POINTING DOUBLE ANGLE QUOTATION MARK */ 0x00ab],\n  Semicolon: [/* ARABIC LETTER KEHEH */ 0x06a9, /* COLON */ 0x003a],\n  Quote: [/* ARABIC LETTER GAF */ 0x06af, /* ARABIC SEMICOLON */ 0x061b],\n  IntlBackslash: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  KeyZ: [/* ARABIC LETTER ZAH */ 0x0638, /* ARABIC LETTER KAF */ 0x0643],\n  KeyX: [/* ARABIC LETTER TAH */ 0x0637, /* ARABIC LETTER TAH */ 0x0637],\n  KeyC: [/* ARABIC LETTER ZAIN */ 0x0632, /* ARABIC LETTER JEH */ 0x0698],\n  KeyV: [/* ARABIC LETTER REH */ 0x0631, /* ARABIC LETTER SUPERSCRIPT ALEF */ 0x0670],\n  KeyB: [/* ARABIC LETTER THAL */ 0x0630, { special: /* ZERO WIDTH NON-JOINER */ 0x200c }],\n  KeyN: [/* ARABIC LETTER DAL */ 0x062f, /* ARABIC HAMZA ABOVE */ 0x0654],\n  KeyM: [/* ARABIC LETTER PEH */ 0x067e, /* ARABIC LETTER HAMZA */ 0x0621],\n  Comma: [/* ARABIC LETTER WAW */ 0x0648, /* GREATER-THAN SIGN */ 0x003e],\n  Period: [/* FULL STOP */ 0x002e, /* LESS-THAN SIGN */ 0x003c],\n  Slash: [/* SOLIDUS */ 0x002f, /* ARABIC QUESTION MARK */ 0x061f],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_FA_IR_LEGACY: CharacterDict = {\n  Backquote: [/* DIVISION SIGN */ 0x00f7, /* MULTIPLICATION SIGN */ 0x00d7],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* COMMERCIAL AT */ 0x0040],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* NUMBER SIGN */ 0x0023],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* DOLLAR SIGN */ 0x0024],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* CIRCUMFLEX ACCENT */ 0x005e],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* AMPERSAND */ 0x0026],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* ASTERISK */ 0x002a],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* RIGHT PARENTHESIS */ 0x0029],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* LEFT PARENTHESIS */ 0x0028],\n  Minus: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f],\n  Equal: [/* EQUALS SIGN */ 0x003d, /* PLUS SIGN */ 0x002b],\n  KeyQ: [/* ARABIC LETTER DAD */ 0x0636, /* ARABIC FATHATAN */ 0x064b],\n  KeyW: [/* ARABIC LETTER SAD */ 0x0635, /* ARABIC DAMMATAN */ 0x064c],\n  KeyE: [/* ARABIC LETTER THEH */ 0x062b, /* ARABIC KASRATAN */ 0x064d],\n  KeyR: [/* ARABIC LETTER QAF */ 0x0642, { ligature: \"ريال\" }],\n  KeyT: [/* ARABIC LETTER FEH */ 0x0641, /* ARABIC COMMA */ 0x060c],\n  KeyY: [/* ARABIC LETTER GHAIN */ 0x063a, /* ARABIC SEMICOLON */ 0x061b],\n  KeyU: [/* ARABIC LETTER AIN */ 0x0639, /* COMMA */ 0x002c],\n  KeyI: [/* ARABIC LETTER HEH */ 0x0647, /* RIGHT SQUARE BRACKET */ 0x005d],\n  KeyO: [/* ARABIC LETTER KHAH */ 0x062e, /* LEFT SQUARE BRACKET */ 0x005b],\n  KeyP: [/* ARABIC LETTER HAH */ 0x062d, /* REVERSE SOLIDUS */ 0x005c],\n  BracketLeft: [/* ARABIC LETTER JEEM */ 0x062c, /* RIGHT CURLY BRACKET */ 0x007d],\n  BracketRight: [/* ARABIC LETTER TCHEH */ 0x0686, /* LEFT CURLY BRACKET */ 0x007b],\n  Backslash: [/* ARABIC LETTER PEH */ 0x067e, /* VERTICAL LINE */ 0x007c],\n  KeyA: [/* ARABIC LETTER SHEEN */ 0x0634, /* ARABIC FATHA */ 0x064e],\n  KeyS: [/* ARABIC LETTER SEEN */ 0x0633, /* ARABIC DAMMA */ 0x064f],\n  KeyD: [/* ARABIC LETTER FARSI YEH */ 0x06cc, /* ARABIC KASRA */ 0x0650],\n  KeyF: [/* ARABIC LETTER BEH */ 0x0628, /* ARABIC SHADDA */ 0x0651],\n  KeyG: [/* ARABIC LETTER LAM */ 0x0644, /* ARABIC LETTER HEH WITH YEH ABOVE */ 0x06c0],\n  KeyH: [/* ARABIC LETTER ALEF */ 0x0627, /* ARABIC LETTER ALEF WITH MADDA ABOVE */ 0x0622],\n  KeyJ: [/* ARABIC LETTER TEH */ 0x062a, /* ARABIC TATWEEL */ 0x0640],\n  KeyK: [/* ARABIC LETTER NOON */ 0x0646, /* LEFT-POINTING DOUBLE ANGLE QUOTATION MARK */ 0x00ab],\n  KeyL: [/* ARABIC LETTER MEEM */ 0x0645, /* RIGHT-POINTING DOUBLE ANGLE QUOTATION MARK */ 0x00bb],\n  Semicolon: [/* ARABIC LETTER KEHEH */ 0x06a9, /* COLON */ 0x003a],\n  Quote: [/* ARABIC LETTER GAF */ 0x06af, /* QUOTATION MARK */ 0x0022],\n  IntlBackslash: [/* ARABIC LETTER PEH */ 0x067e, /* VERTICAL LINE */ 0x007c],\n  KeyZ: [/* ARABIC LETTER ZAH */ 0x0638, /* ARABIC LETTER TEH MARBUTA */ 0x0629],\n  KeyX: [/* ARABIC LETTER TAH */ 0x0637, /* ARABIC LETTER YEH */ 0x064a],\n  KeyC: [/* ARABIC LETTER ZAIN */ 0x0632, /* ARABIC LETTER JEH */ 0x0698],\n  KeyV: [/* ARABIC LETTER REH */ 0x0631, /* ARABIC LETTER WAW WITH HAMZA ABOVE */ 0x0624],\n  KeyB: [/* ARABIC LETTER THAL */ 0x0630, /* ARABIC LETTER ALEF WITH HAMZA BELOW */ 0x0625],\n  KeyN: [/* ARABIC LETTER DAL */ 0x062f, /* ARABIC LETTER ALEF WITH HAMZA ABOVE */ 0x0623],\n  KeyM: [/* ARABIC LETTER YEH WITH HAMZA ABOVE */ 0x0626, /* ARABIC LETTER HAMZA */ 0x0621],\n  Comma: [/* ARABIC LETTER WAW */ 0x0648, /* LESS-THAN SIGN */ 0x003c],\n  Period: [/* FULL STOP */ 0x002e, /* GREATER-THAN SIGN */ 0x003e],\n  Slash: [/* SOLIDUS */ 0x002f, /* ARABIC QUESTION MARK */ 0x061f],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_FR_BEPO: CharacterDict = {\n  Backquote: [/* DOLLAR SIGN */ 0x0024, /* NUMBER SIGN */ 0x0023, /* EN DASH */ 0x2013],\n  Digit1: [/* QUOTATION MARK */ 0x0022, /* DIGIT ONE */ 0x0031, /* EM DASH */ 0x2014, /* DOUBLE LOW-9 QUOTATION MARK */ 0x201e],\n  Digit2: [/* LEFT-POINTING DOUBLE ANGLE QUOTATION MARK */ 0x00ab, /* DIGIT TWO */ 0x0032, /* LESS-THAN SIGN */ 0x003c, /* LEFT DOUBLE QUOTATION MARK */ 0x201c],\n  Digit3: [/* RIGHT-POINTING DOUBLE ANGLE QUOTATION MARK */ 0x00bb, /* DIGIT THREE */ 0x0033, /* GREATER-THAN SIGN */ 0x003e, /* RIGHT DOUBLE QUOTATION MARK */ 0x201d],\n  Digit4: [/* LEFT PARENTHESIS */ 0x0028, /* DIGIT FOUR */ 0x0034, /* LEFT SQUARE BRACKET */ 0x005b, /* LESS-THAN OR EQUAL TO */ 0x2264],\n  Digit5: [/* RIGHT PARENTHESIS */ 0x0029, /* DIGIT FIVE */ 0x0035, /* RIGHT SQUARE BRACKET */ 0x005d, /* GREATER-THAN OR EQUAL TO */ 0x2265],\n  Digit6: [/* COMMERCIAL AT */ 0x0040, /* DIGIT SIX */ 0x0036, /* CIRCUMFLEX ACCENT */ 0x005e],\n  Digit7: [/* PLUS SIGN */ 0x002b, /* DIGIT SEVEN */ 0x0037, /* PLUS-MINUS SIGN */ 0x00b1, /* NOT SIGN */ 0x00ac],\n  Digit8: [/* HYPHEN-MINUS */ 0x002d, /* DIGIT EIGHT */ 0x0038, /* MINUS SIGN */ 0x2212, /* VULGAR FRACTION ONE QUARTER */ 0x00bc],\n  Digit9: [/* SOLIDUS */ 0x002f, /* DIGIT NINE */ 0x0039, /* DIVISION SIGN */ 0x00f7, /* VULGAR FRACTION ONE HALF */ 0x00bd],\n  Digit0: [/* ASTERISK */ 0x002a, /* DIGIT ZERO */ 0x0030, /* MULTIPLICATION SIGN */ 0x00d7, /* VULGAR FRACTION THREE QUARTERS */ 0x00be],\n  Minus: [/* EQUALS SIGN */ 0x003d, /* DEGREE SIGN */ 0x00b0, /* NOT EQUAL TO */ 0x2260],\n  Equal: [/* PERCENT SIGN */ 0x0025, /* GRAVE ACCENT */ 0x0060, /* PER MILLE SIGN */ 0x2030],\n  KeyQ: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042, /* VERTICAL LINE */ 0x007c, /* BROKEN BAR */ 0x00a6],\n  KeyW: [/* LATIN SMALL LETTER E WITH ACUTE */ 0x00e9, /* LATIN CAPITAL LETTER E WITH ACUTE */ 0x00c9, { dead: /* COMBINING ACUTE ACCENT */ 0x0301 }],\n  KeyE: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050, /* AMPERSAND */ 0x0026, /* SECTION SIGN */ 0x00a7],\n  KeyR: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f, /* LATIN SMALL LIGATURE OE */ 0x0153, /* LATIN CAPITAL LIGATURE OE */ 0x0152],\n  KeyT: [/* LATIN SMALL LETTER E WITH GRAVE */ 0x00e8, /* LATIN CAPITAL LETTER E WITH GRAVE */ 0x00c8, { dead: /* COMBINING GRAVE ACCENT */ 0x0300 }],\n  KeyY: [{ dead: /* COMBINING CIRCUMFLEX ACCENT */ 0x0302 }, /* EXCLAMATION MARK */ 0x0021, /* INVERTED EXCLAMATION MARK */ 0x00a1],\n  KeyU: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  KeyI: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyO: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  KeyP: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  BracketLeft: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  BracketRight: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057],\n  Backslash: [/* LATIN SMALL LETTER C WITH CEDILLA */ 0x00e7, /* LATIN CAPITAL LETTER C WITH CEDILLA */ 0x00c7],\n  KeyA: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041, /* LATIN SMALL LETTER AE */ 0x00e6, /* LATIN CAPITAL LETTER AE */ 0x00c6],\n  KeyS: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055, /* LATIN SMALL LETTER U WITH GRAVE */ 0x00f9, /* LATIN CAPITAL LETTER U WITH GRAVE */ 0x00d9],\n  KeyD: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049, { dead: /* COMBINING DIAERESIS */ 0x0308 }],\n  KeyF: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045, /* EURO SIGN */ 0x20ac],\n  KeyG: [/* COMMA */ 0x002c, /* SEMICOLON */ 0x003b],\n  KeyH: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043],\n  KeyJ: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyK: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053, /* LATIN SMALL LETTER SHARP S */ 0x00df, /* LATIN CAPITAL LETTER SHARP S */ 0x1e9e],\n  KeyL: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  Semicolon: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e, { dead: /* COMBINING TILDE */ 0x0303 }],\n  Quote: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d],\n  IntlBackslash: [/* LATIN SMALL LETTER E WITH CIRCUMFLEX */ 0x00ea, /* LATIN CAPITAL LETTER E WITH CIRCUMFLEX */ 0x00ca, /* SOLIDUS */ 0x002f],\n  KeyZ: [/* LATIN SMALL LETTER A WITH GRAVE */ 0x00e0, /* LATIN CAPITAL LETTER A WITH GRAVE */ 0x00c0, /* REVERSE SOLIDUS */ 0x005c],\n  KeyX: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059, /* LEFT CURLY BRACKET */ 0x007b],\n  KeyC: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058, /* RIGHT CURLY BRACKET */ 0x007d],\n  KeyV: [/* FULL STOP */ 0x002e, /* COLON */ 0x003a, /* HORIZONTAL ELLIPSIS */ 0x2026, /* MIDDLE DOT */ 0x00b7],\n  KeyB: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b, /* TILDE */ 0x007e],\n  KeyN: [/* APOSTROPHE */ 0x0027, /* QUESTION MARK */ 0x003f, /* INVERTED QUESTION MARK */ 0x00bf],\n  KeyM: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051],\n  Comma: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  Period: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  Slash: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_FR_CA: CharacterDict = {\n  Backquote: [/* NUMBER SIGN */ 0x0023, /* VERTICAL LINE */ 0x007c, /* REVERSE SOLIDUS */ 0x005c],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021, /* PLUS-MINUS SIGN */ 0x00b1],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* QUOTATION MARK */ 0x0022, /* COMMERCIAL AT */ 0x0040],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* SOLIDUS */ 0x002f, /* POUND SIGN */ 0x00a3],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* DOLLAR SIGN */ 0x0024, /* CENT SIGN */ 0x00a2],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025, /* CURRENCY SIGN */ 0x00a4],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* QUESTION MARK */ 0x003f, /* NOT SIGN */ 0x00ac],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* AMPERSAND */ 0x0026, /* BROKEN BAR */ 0x00a6],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* ASTERISK */ 0x002a, /* SUPERSCRIPT TWO */ 0x00b2],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* LEFT PARENTHESIS */ 0x0028, /* SUPERSCRIPT THREE */ 0x00b3],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* RIGHT PARENTHESIS */ 0x0029, /* VULGAR FRACTION ONE QUARTER */ 0x00bc],\n  Minus: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f, /* VULGAR FRACTION ONE HALF */ 0x00bd],\n  Equal: [/* EQUALS SIGN */ 0x003d, /* PLUS SIGN */ 0x002b, /* VULGAR FRACTION THREE QUARTERS */ 0x00be],\n  KeyQ: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051],\n  KeyW: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057],\n  KeyE: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045],\n  KeyR: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  KeyT: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyY: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  KeyU: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055],\n  KeyI: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049],\n  KeyO: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f, /* SECTION SIGN */ 0x00a7],\n  KeyP: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050, /* PILCROW SIGN */ 0x00b6],\n  BracketLeft: [{ dead: /* COMBINING CIRCUMFLEX ACCENT */ 0x0302 }, { dead: /* COMBINING CIRCUMFLEX ACCENT */ 0x0302 }, /* LEFT SQUARE BRACKET */ 0x005b],\n  BracketRight: [{ dead: /* COMBINING CEDILLA */ 0x0327 }, { dead: /* COMBINING DIAERESIS */ 0x0308 }, /* RIGHT SQUARE BRACKET */ 0x005d],\n  Backslash: [/* LESS-THAN SIGN */ 0x003c, /* GREATER-THAN SIGN */ 0x003e, /* RIGHT CURLY BRACKET */ 0x007d],\n  KeyA: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041],\n  KeyS: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053],\n  KeyD: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyF: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  KeyG: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  KeyH: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  KeyJ: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  KeyK: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  KeyL: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  Semicolon: [/* SEMICOLON */ 0x003b, /* COLON */ 0x003a, /* TILDE */ 0x007e],\n  Quote: [{ dead: /* COMBINING GRAVE ACCENT */ 0x0300 }, { dead: /* COMBINING GRAVE ACCENT */ 0x0300 }, /* LEFT CURLY BRACKET */ 0x007b],\n  IntlBackslash: [/* LEFT-POINTING DOUBLE ANGLE QUOTATION MARK */ 0x00ab, /* RIGHT-POINTING DOUBLE ANGLE QUOTATION MARK */ 0x00bb, /* DEGREE SIGN */ 0x00b0],\n  KeyZ: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  KeyX: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058],\n  KeyC: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043],\n  KeyV: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  KeyB: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  KeyN: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e],\n  KeyM: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d, /* MICRO SIGN */ 0x00b5],\n  Comma: [/* COMMA */ 0x002c, /* APOSTROPHE */ 0x0027, /* MACRON */ 0x00af],\n  Period: [/* FULL STOP */ 0x002e, /* FULL STOP */ 0x002e, /* SOFT HYPHEN */ 0x00ad],\n  Slash: [/* LATIN SMALL LETTER E WITH ACUTE */ 0x00e9, /* LATIN CAPITAL LETTER E WITH ACUTE */ 0x00c9, { dead: /* COMBINING ACUTE ACCENT */ 0x0301 }],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_FR_CH: CharacterDict = {\n  Backquote: [/* SECTION SIGN */ 0x00a7, /* DEGREE SIGN */ 0x00b0],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* PLUS SIGN */ 0x002b, /* BROKEN BAR */ 0x00a6],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* QUOTATION MARK */ 0x0022, /* COMMERCIAL AT */ 0x0040],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* ASTERISK */ 0x002a, /* NUMBER SIGN */ 0x0023],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* LATIN SMALL LETTER C WITH CEDILLA */ 0x00e7, /* DEGREE SIGN */ 0x00b0],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025, /* SECTION SIGN */ 0x00a7],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* AMPERSAND */ 0x0026, /* NOT SIGN */ 0x00ac],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* SOLIDUS */ 0x002f, /* VERTICAL LINE */ 0x007c],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* LEFT PARENTHESIS */ 0x0028, /* CENT SIGN */ 0x00a2],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* RIGHT PARENTHESIS */ 0x0029],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* EQUALS SIGN */ 0x003d],\n  Minus: [/* APOSTROPHE */ 0x0027, /* QUESTION MARK */ 0x003f, { dead: /* COMBINING ACUTE ACCENT */ 0x0301 }],\n  Equal: [{ dead: /* COMBINING CIRCUMFLEX ACCENT */ 0x0302 }, { dead: /* COMBINING GRAVE ACCENT */ 0x0300 }, { dead: /* COMBINING TILDE */ 0x0303 }],\n  KeyQ: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051],\n  KeyW: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057],\n  KeyE: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045, /* EURO SIGN */ 0x20ac],\n  KeyR: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  KeyT: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyY: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  KeyU: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055],\n  KeyI: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049],\n  KeyO: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  KeyP: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  BracketLeft: [/* LATIN SMALL LETTER E WITH GRAVE */ 0x00e8, /* LATIN SMALL LETTER U WITH DIAERESIS */ 0x00fc, /* LEFT SQUARE BRACKET */ 0x005b],\n  BracketRight: [{ dead: /* COMBINING DIAERESIS */ 0x0308 }, /* EXCLAMATION MARK */ 0x0021, /* RIGHT SQUARE BRACKET */ 0x005d],\n  Backslash: [/* DOLLAR SIGN */ 0x0024, /* POUND SIGN */ 0x00a3, /* RIGHT CURLY BRACKET */ 0x007d],\n  KeyA: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041],\n  KeyS: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053],\n  KeyD: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyF: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  KeyG: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  KeyH: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  KeyJ: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  KeyK: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  KeyL: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  Semicolon: [/* LATIN SMALL LETTER E WITH ACUTE */ 0x00e9, /* LATIN SMALL LETTER O WITH DIAERESIS */ 0x00f6],\n  Quote: [/* LATIN SMALL LETTER A WITH GRAVE */ 0x00e0, /* LATIN SMALL LETTER A WITH DIAERESIS */ 0x00e4, /* LEFT CURLY BRACKET */ 0x007b],\n  IntlBackslash: [/* LESS-THAN SIGN */ 0x003c, /* GREATER-THAN SIGN */ 0x003e, /* REVERSE SOLIDUS */ 0x005c],\n  KeyZ: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  KeyX: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058],\n  KeyC: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043],\n  KeyV: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  KeyB: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  KeyN: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e],\n  KeyM: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d],\n  Comma: [/* COMMA */ 0x002c, /* SEMICOLON */ 0x003b],\n  Period: [/* FULL STOP */ 0x002e, /* COLON */ 0x003a],\n  Slash: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_FR_ERGLACE: CharacterDict = {\n  Backquote: [/* GRAVE ACCENT */ 0x0060, /* TILDE */ 0x007e],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021, /* SUBSCRIPT ONE */ 0x2081, /* SUPERSCRIPT ONE */ 0x00b9],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* COMMERCIAL AT */ 0x0040, /* SUBSCRIPT TWO */ 0x2082, /* SUPERSCRIPT TWO */ 0x00b2],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* NUMBER SIGN */ 0x0023, /* SUBSCRIPT THREE */ 0x2083, /* SUPERSCRIPT THREE */ 0x00b3],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* DOLLAR SIGN */ 0x0024, /* SUBSCRIPT FOUR */ 0x2084, /* SUPERSCRIPT FOUR */ 0x2074],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025, /* SUBSCRIPT FIVE */ 0x2085, /* SUPERSCRIPT FIVE */ 0x2075],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* CIRCUMFLEX ACCENT */ 0x005e, /* SUBSCRIPT SIX */ 0x2086, /* SUPERSCRIPT SIX */ 0x2076],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* AMPERSAND */ 0x0026, /* SUBSCRIPT SEVEN */ 0x2087, /* SUPERSCRIPT SEVEN */ 0x2077],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* ASTERISK */ 0x002a, /* SUBSCRIPT EIGHT */ 0x2088, /* SUPERSCRIPT EIGHT */ 0x2078],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* LEFT PARENTHESIS */ 0x0028, /* SUBSCRIPT NINE */ 0x2089, /* SUPERSCRIPT NINE */ 0x2079],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* RIGHT PARENTHESIS */ 0x0029, /* SUBSCRIPT ZERO */ 0x2080, /* SUPERSCRIPT ZERO */ 0x2070],\n  Minus: [/* SOLIDUS */ 0x002f, /* LOW LINE */ 0x005f],\n  Equal: [/* EQUALS SIGN */ 0x003d, /* PLUS SIGN */ 0x002b],\n  KeyQ: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059, /* COMMERCIAL AT */ 0x0040],\n  KeyW: [{ dead: /* ASTERISK */ 0x002a }, { dead: /* ASTERISK */ 0x002a }, /* LESS-THAN SIGN */ 0x003c, /* LESS-THAN OR EQUAL TO */ 0x2264],\n  KeyE: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f, /* GREATER-THAN SIGN */ 0x003e, /* GREATER-THAN OR EQUAL TO */ 0x2265],\n  KeyR: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046, /* DOLLAR SIGN */ 0x0024],\n  KeyT: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b, /* PERCENT SIGN */ 0x0025, /* PER MILLE SIGN */ 0x2030],\n  KeyY: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056, /* CIRCUMFLEX ACCENT */ 0x005e, { dead: /* COMBINING CIRCUMFLEX ACCENT */ 0x0302 }],\n  KeyU: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050, /* AMPERSAND */ 0x0026],\n  KeyI: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c, /* ASTERISK */ 0x002a, /* MULTIPLICATION SIGN */ 0x00d7],\n  KeyO: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043, /* APOSTROPHE */ 0x0027, { dead: /* COMBINING ACUTE ACCENT */ 0x0301 }],\n  KeyP: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051, /* GRAVE ACCENT */ 0x0060, { dead: /* COMBINING GRAVE ACCENT */ 0x0300 }],\n  BracketLeft: [/* LEFT SQUARE BRACKET */ 0x005b, /* LEFT CURLY BRACKET */ 0x007b],\n  BracketRight: [/* RIGHT SQUARE BRACKET */ 0x005d, /* RIGHT CURLY BRACKET */ 0x007d],\n  Backslash: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  KeyA: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049, /* LEFT CURLY BRACKET */ 0x007b],\n  KeyS: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041, /* LEFT PARENTHESIS */ 0x0028, /* SUPERSCRIPT LEFT PARENTHESIS */ 0x207d],\n  KeyD: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045, /* RIGHT PARENTHESIS */ 0x0029, /* SUPERSCRIPT RIGHT PARENTHESIS */ 0x207e],\n  KeyF: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055, /* RIGHT CURLY BRACKET */ 0x007d],\n  KeyG: [/* COMMA */ 0x002c, /* SEMICOLON */ 0x003b, /* EQUALS SIGN */ 0x003d, /* NOT EQUAL TO */ 0x2260],\n  KeyH: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047, /* REVERSE SOLIDUS */ 0x005c],\n  KeyJ: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054, /* PLUS SIGN */ 0x002b, /* PLUS-MINUS SIGN */ 0x00b1],\n  KeyK: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e, /* HYPHEN-MINUS */ 0x002d, /* EM DASH */ 0x2014],\n  KeyL: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053, /* SOLIDUS */ 0x002f, /* DIVISION SIGN */ 0x00f7],\n  Semicolon: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052, /* QUOTATION MARK */ 0x0022, { dead: /* COMBINING DIAERESIS */ 0x0308 }],\n  Quote: [/* APOSTROPHE */ 0x0027, /* QUOTATION MARK */ 0x0022],\n  IntlBackslash: [/* LESS-THAN SIGN */ 0x003c, /* GREATER-THAN SIGN */ 0x003e],\n  KeyZ: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a, /* TILDE */ 0x007e, { dead: /* COMBINING TILDE */ 0x0303 }],\n  KeyX: [/* FULL STOP */ 0x002e, /* COLON */ 0x003a, /* LEFT SQUARE BRACKET */ 0x005b],\n  KeyC: [/* HYPHEN-MINUS */ 0x002d, /* QUESTION MARK */ 0x003f, /* RIGHT SQUARE BRACKET */ 0x005d],\n  KeyV: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048, /* LOW LINE */ 0x005f, /* EN DASH */ 0x2013],\n  KeyB: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a, /* NUMBER SIGN */ 0x0023],\n  KeyN: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042, /* VERTICAL LINE */ 0x007c, /* BROKEN BAR */ 0x00a6],\n  KeyM: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044, /* EXCLAMATION MARK */ 0x0021, /* NOT SIGN */ 0x00ac],\n  Comma: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d, /* SEMICOLON */ 0x003b, { dead: /* COMBINING CEDILLA */ 0x0327 }],\n  Period: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057, /* COLON */ 0x003a],\n  Slash: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058, /* QUESTION MARK */ 0x003f],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_FR_ERGO_L: CharacterDict = {\n  Backquote: [/* GRAVE ACCENT */ 0x0060, /* TILDE */ 0x007e],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EURO SIGN */ 0x20ac, /* SUBSCRIPT ONE */ 0x2081, /* SUPERSCRIPT ONE */ 0x00b9],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* LEFT-POINTING DOUBLE ANGLE QUOTATION MARK */ 0x00ab, /* SUBSCRIPT TWO */ 0x2082, /* SUPERSCRIPT TWO */ 0x00b2],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* RIGHT-POINTING DOUBLE ANGLE QUOTATION MARK */ 0x00bb, /* SUBSCRIPT THREE */ 0x2083, /* SUPERSCRIPT THREE */ 0x00b3],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* DOLLAR SIGN */ 0x0024, /* SUBSCRIPT FOUR */ 0x2084, /* SUPERSCRIPT FOUR */ 0x2074],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025, /* SUBSCRIPT FIVE */ 0x2085, /* SUPERSCRIPT FIVE */ 0x2075],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* CIRCUMFLEX ACCENT */ 0x005e, /* SUBSCRIPT SIX */ 0x2086, /* SUPERSCRIPT SIX */ 0x2076],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* AMPERSAND */ 0x0026, /* SUBSCRIPT SEVEN */ 0x2087, /* SUPERSCRIPT SEVEN */ 0x2077],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* ASTERISK */ 0x002a, /* SUBSCRIPT EIGHT */ 0x2088, /* SUPERSCRIPT EIGHT */ 0x2078],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* NUMBER SIGN */ 0x0023, /* SUBSCRIPT NINE */ 0x2089, /* SUPERSCRIPT NINE */ 0x2079],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* COMMERCIAL AT */ 0x0040, /* SUBSCRIPT ZERO */ 0x2080, /* SUPERSCRIPT ZERO */ 0x2070],\n  Minus: [/* SOLIDUS */ 0x002f, /* LOW LINE */ 0x005f],\n  Equal: [/* EQUALS SIGN */ 0x003d, /* PLUS SIGN */ 0x002b],\n  KeyQ: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051, /* CIRCUMFLEX ACCENT */ 0x005e, { dead: /* COMBINING CIRCUMFLEX ACCENT */ 0x0302 }],\n  KeyW: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043, /* LESS-THAN SIGN */ 0x003c, /* LESS-THAN OR EQUAL TO */ 0x2264],\n  KeyE: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f, /* GREATER-THAN SIGN */ 0x003e, /* GREATER-THAN OR EQUAL TO */ 0x2265],\n  KeyR: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050, /* DOLLAR SIGN */ 0x0024],\n  KeyT: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057, /* PERCENT SIGN */ 0x0025, /* PER MILLE SIGN */ 0x2030],\n  KeyY: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a, /* COMMERCIAL AT */ 0x0040],\n  KeyU: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d, /* AMPERSAND */ 0x0026],\n  KeyI: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044, /* ASTERISK */ 0x002a, /* MULTIPLICATION SIGN */ 0x00d7],\n  KeyO: [{ dead: /* ASTERISK */ 0x002a }, /* EXCLAMATION MARK */ 0x0021, /* APOSTROPHE */ 0x0027, { dead: /* COMBINING ACUTE ACCENT */ 0x0301 }],\n  KeyP: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059, /* GRAVE ACCENT */ 0x0060, { dead: /* COMBINING GRAVE ACCENT */ 0x0300 }],\n  BracketLeft: [/* LEFT SQUARE BRACKET */ 0x005b, /* LEFT CURLY BRACKET */ 0x007b],\n  BracketRight: [/* RIGHT SQUARE BRACKET */ 0x005d, /* RIGHT CURLY BRACKET */ 0x007d],\n  Backslash: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  KeyA: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041, /* LEFT CURLY BRACKET */ 0x007b, { dead: /* COMBINING CARON */ 0x030c }],\n  KeyS: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053, /* LEFT PARENTHESIS */ 0x0028],\n  KeyD: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045, /* RIGHT PARENTHESIS */ 0x0029],\n  KeyF: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e, /* RIGHT CURLY BRACKET */ 0x007d, { dead: /* COMBINING DOT ABOVE */ 0x0307 }],\n  KeyG: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046, /* EQUALS SIGN */ 0x003d, /* NOT EQUAL TO */ 0x2260],\n  KeyH: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c, /* REVERSE SOLIDUS */ 0x005c],\n  KeyJ: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052, /* PLUS SIGN */ 0x002b, /* PLUS-MINUS SIGN */ 0x00b1],\n  KeyK: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054, /* HYPHEN-MINUS */ 0x002d, { dead: /* COMBINING MACRON */ 0x0304 }],\n  KeyL: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049, /* SOLIDUS */ 0x002f, /* DIVISION SIGN */ 0x00f7],\n  Semicolon: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055, /* QUOTATION MARK */ 0x0022],\n  Quote: [/* APOSTROPHE */ 0x0027, /* QUOTATION MARK */ 0x0022],\n  IntlBackslash: [/* LESS-THAN SIGN */ 0x003c, /* GREATER-THAN SIGN */ 0x003e],\n  KeyZ: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a, /* TILDE */ 0x007e, { dead: /* COMBINING TILDE */ 0x0303 }],\n  KeyX: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058, /* LEFT SQUARE BRACKET */ 0x005b],\n  KeyC: [/* HYPHEN-MINUS */ 0x002d, /* QUESTION MARK */ 0x003f, /* RIGHT SQUARE BRACKET */ 0x005d, { dead: /* COMBINING OGONEK */ 0x0328 }],\n  KeyV: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056, /* LOW LINE */ 0x005f, /* EN DASH */ 0x2013],\n  KeyB: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042, /* NUMBER SIGN */ 0x0023],\n  KeyN: [/* FULL STOP */ 0x002e, /* COLON */ 0x003a, /* VERTICAL LINE */ 0x007c, /* BROKEN BAR */ 0x00a6],\n  KeyM: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048, /* EXCLAMATION MARK */ 0x0021, /* NOT SIGN */ 0x00ac],\n  Comma: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047, /* SEMICOLON */ 0x003b, { dead: /* COMBINING CEDILLA */ 0x0327 }],\n  Period: [/* COMMA */ 0x002c, /* SEMICOLON */ 0x003b, /* COLON */ 0x003a, /* COLON */ 0x003a],\n  Slash: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b, /* QUESTION MARK */ 0x003f, { dead: /* COMBINING BREVE */ 0x0306 }],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_FR_FR: CharacterDict = {\n  Backquote: [/* SUPERSCRIPT TWO */ 0x00b2],\n  Digit1: [/* AMPERSAND */ 0x0026, /* DIGIT ONE */ 0x0031],\n  Digit2: [/* LATIN SMALL LETTER E WITH ACUTE */ 0x00e9, /* DIGIT TWO */ 0x0032, { dead: /* COMBINING TILDE */ 0x0303 }],\n  Digit3: [/* QUOTATION MARK */ 0x0022, /* DIGIT THREE */ 0x0033, /* NUMBER SIGN */ 0x0023],\n  Digit4: [/* APOSTROPHE */ 0x0027, /* DIGIT FOUR */ 0x0034, /* LEFT CURLY BRACKET */ 0x007b],\n  Digit5: [/* LEFT PARENTHESIS */ 0x0028, /* DIGIT FIVE */ 0x0035, /* LEFT SQUARE BRACKET */ 0x005b],\n  Digit6: [/* HYPHEN-MINUS */ 0x002d, /* DIGIT SIX */ 0x0036, /* VERTICAL LINE */ 0x007c],\n  Digit7: [/* LATIN SMALL LETTER E WITH GRAVE */ 0x00e8, /* DIGIT SEVEN */ 0x0037, { dead: /* COMBINING GRAVE ACCENT */ 0x0300 }],\n  Digit8: [/* LOW LINE */ 0x005f, /* DIGIT EIGHT */ 0x0038, /* REVERSE SOLIDUS */ 0x005c],\n  Digit9: [/* LATIN SMALL LETTER C WITH CEDILLA */ 0x00e7, /* DIGIT NINE */ 0x0039, /* CIRCUMFLEX ACCENT */ 0x005e],\n  Digit0: [/* LATIN SMALL LETTER A WITH GRAVE */ 0x00e0, /* DIGIT ZERO */ 0x0030, /* COMMERCIAL AT */ 0x0040],\n  Minus: [/* RIGHT PARENTHESIS */ 0x0029, /* DEGREE SIGN */ 0x00b0, /* RIGHT SQUARE BRACKET */ 0x005d],\n  Equal: [/* EQUALS SIGN */ 0x003d, /* PLUS SIGN */ 0x002b, /* RIGHT CURLY BRACKET */ 0x007d],\n  KeyQ: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041],\n  KeyW: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  KeyE: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045, /* EURO SIGN */ 0x20ac],\n  KeyR: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  KeyT: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyY: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  KeyU: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055],\n  KeyI: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049],\n  KeyO: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  KeyP: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  BracketLeft: [{ dead: /* COMBINING CIRCUMFLEX ACCENT */ 0x0302 }, { dead: /* COMBINING DIAERESIS */ 0x0308 }],\n  BracketRight: [/* DOLLAR SIGN */ 0x0024, /* POUND SIGN */ 0x00a3, /* CURRENCY SIGN */ 0x00a4],\n  Backslash: [/* ASTERISK */ 0x002a, /* MICRO SIGN */ 0x00b5],\n  KeyA: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051],\n  KeyS: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053],\n  KeyD: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyF: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  KeyG: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  KeyH: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  KeyJ: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  KeyK: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  KeyL: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  Semicolon: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d],\n  Quote: [/* LATIN SMALL LETTER U WITH GRAVE */ 0x00f9, /* PERCENT SIGN */ 0x0025],\n  IntlBackslash: [/* LESS-THAN SIGN */ 0x003c, /* GREATER-THAN SIGN */ 0x003e],\n  KeyZ: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057],\n  KeyX: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058],\n  KeyC: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043],\n  KeyV: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  KeyB: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  KeyN: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e],\n  KeyM: [/* COMMA */ 0x002c, /* QUESTION MARK */ 0x003f],\n  Comma: [/* SEMICOLON */ 0x003b, /* FULL STOP */ 0x002e],\n  Period: [/* COLON */ 0x003a, /* SOLIDUS */ 0x002f],\n  Slash: [/* EXCLAMATION MARK */ 0x0021, /* SECTION SIGN */ 0x00a7],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_FR_OPTIMOT_ERGO: CharacterDict = {\n  Backquote: [/* DOLLAR SIGN */ 0x0024, /* EURO SIGN */ 0x20ac, /* POUND SIGN */ 0x00a3, /* COPYRIGHT SIGN */ 0x00a9],\n  Digit1: [/* LEFT-POINTING DOUBLE ANGLE QUOTATION MARK */ 0x00ab, /* DIGIT ONE */ 0x0031, /* LEFT DOUBLE QUOTATION MARK */ 0x201c, /* VULGAR FRACTION ONE QUARTER */ 0x00bc],\n  Digit2: [/* RIGHT-POINTING DOUBLE ANGLE QUOTATION MARK */ 0x00bb, /* DIGIT TWO */ 0x0032, /* RIGHT DOUBLE QUOTATION MARK */ 0x201d, /* VULGAR FRACTION ONE HALF */ 0x00bd],\n  Digit3: [/* QUOTATION MARK */ 0x0022, /* DIGIT THREE */ 0x0033, /* DOUBLE LOW-9 QUOTATION MARK */ 0x201e, /* VULGAR FRACTION THREE QUARTERS */ 0x00be],\n  Digit4: [/* HYPHEN-MINUS */ 0x002d, /* DIGIT FOUR */ 0x0034, /* NON-BREAKING HYPHEN */ 0x2011, /* VULGAR FRACTION ONE THIRD */ 0x2153],\n  Digit5: [/* PLUS SIGN */ 0x002b, /* DIGIT FIVE */ 0x0035, /* PLUS-MINUS SIGN */ 0x00b1, /* VULGAR FRACTION TWO THIRDS */ 0x2154],\n  Digit6: [/* ASTERISK */ 0x002a, /* DIGIT SIX */ 0x0036, /* MULTIPLICATION SIGN */ 0x00d7, /* TEARDROP-SPOKED ASTERISK */ 0x273b],\n  Digit7: [/* SOLIDUS */ 0x002f, /* DIGIT SEVEN */ 0x0037, /* REVERSE SOLIDUS */ 0x005c, /* DIVISION SIGN */ 0x00f7],\n  Digit8: [/* EQUALS SIGN */ 0x003d, /* DIGIT EIGHT */ 0x0038, /* NOT EQUAL TO */ 0x2260, /* ALMOST EQUAL TO */ 0x2248],\n  Digit9: [/* LEFT PARENTHESIS */ 0x0028, /* DIGIT NINE */ 0x0039, /* LEFT SQUARE BRACKET */ 0x005b, /* PRIME */ 0x2032],\n  Digit0: [/* RIGHT PARENTHESIS */ 0x0029, /* DIGIT ZERO */ 0x0030, /* RIGHT SQUARE BRACKET */ 0x005d, /* DOUBLE PRIME */ 0x2033],\n  Minus: [/* COMMERCIAL AT */ 0x0040, /* LOW LINE */ 0x005f, /* MINUS SIGN */ 0x2212, /* FIGURE DASH */ 0x2012],\n  Equal: [/* NUMBER SIGN */ 0x0023, /* PERCENT SIGN */ 0x0025, /* DEGREE SIGN */ 0x00b0, /* MASCULINE ORDINAL INDICATOR */ 0x00ba],\n  KeyQ: [/* LATIN SMALL LETTER A WITH GRAVE */ 0x00e0, /* LATIN CAPITAL LETTER A WITH GRAVE */ 0x00c0, /* LESS-THAN SIGN */ 0x003c, /* LESS-THAN OR EQUAL TO */ 0x2264],\n  KeyW: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a, /* GREATER-THAN SIGN */ 0x003e, /* GREATER-THAN OR EQUAL TO */ 0x2265],\n  KeyE: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f, /* LATIN SMALL LIGATURE OE */ 0x0153, /* LATIN CAPITAL LIGATURE OE */ 0x0152],\n  KeyR: [/* LATIN SMALL LETTER E WITH ACUTE */ 0x00e9, /* LATIN CAPITAL LETTER E WITH ACUTE */ 0x00c9, { dead: /* COMBINING ACUTE ACCENT */ 0x0301 }],\n  KeyT: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042, /* EM DASH */ 0x2014, /* LOWER RIGHT DROP-SHADOWED WHITE SQUARE */ 0x274f],\n  KeyY: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046, /* LEFT SINGLE QUOTATION MARK */ 0x2018, /* BLACK FOUR POINTED STAR */ 0x2726],\n  KeyU: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044, /* LEFT CURLY BRACKET */ 0x007b, /* DAGGER */ 0x2020],\n  KeyI: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c, /* RIGHT CURLY BRACKET */ 0x007d, /* DOUBLE DAGGER */ 0x2021],\n  KeyO: [/* RIGHT SINGLE QUOTATION MARK */ 0x2019, /* QUESTION MARK */ 0x003f, /* RIGHT SINGLE QUOTATION MARK */ 0x2019, /* INVERTED QUESTION MARK */ 0x00bf],\n  KeyP: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051, { dead: /* COMBINING RING ABOVE */ 0x030a }, /* REVERSED QUESTION MARK */ 0x2e2e],\n  BracketLeft: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058, /* VERTICAL LINE */ 0x007c, /* BROKEN BAR */ 0x00a6],\n  BracketRight: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a, null, /* TRADE MARK SIGN */ 0x2122],\n  Backslash: [/* LATIN SMALL LETTER C WITH CEDILLA */ 0x00e7, /* LATIN CAPITAL LETTER C WITH CEDILLA */ 0x00c7, { dead: /* COMBINING ACUTE ACCENT */ 0x0301 }, /* COPYLEFT SYMBOL */ 0x1f12f],\n  KeyA: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041, /* LATIN SMALL LETTER AE */ 0x00e6, /* LATIN CAPITAL LETTER AE */ 0x00c6],\n  KeyS: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049, /* SUBSCRIPT TWO */ 0x2082, /* SECTION SIGN */ 0x00a7],\n  KeyD: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045, /* SUPERSCRIPT TWO */ 0x00b2, /* PILCROW SIGN */ 0x00b6],\n  KeyF: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055, /* LATIN SMALL LETTER U WITH GRAVE */ 0x00f9, /* LATIN CAPITAL LETTER U WITH GRAVE */ 0x00d9],\n  KeyG: [/* COMMA */ 0x002c, /* SEMICOLON */ 0x003b, /* EN DASH */ 0x2013, /* CHECK MARK */ 0x2713],\n  KeyH: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050, /* GRAVE ACCENT */ 0x0060, /* BLACK STAR */ 0x2605],\n  KeyJ: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054, /* AMPERSAND */ 0x0026, /* LEFTWARDS BLACK ARROW */ 0x2b05],\n  KeyK: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053, null, /* DOWNWARDS BLACK ARROW */ 0x2b07],\n  KeyL: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052, null, /* UPWARDS BLACK ARROW */ 0x2b06],\n  Semicolon: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e, { dead: /* COMBINING TILDE */ 0x0303 }, /* RIGHTWARDS BLACK ARROW */ 0x2b95],\n  Quote: [{ dead: /* COMBINING CIRCUMFLEX ACCENT */ 0x0302 }, /* EXCLAMATION MARK */ 0x0021, { dead: /* COMBINING DIAERESIS */ 0x0308 }, /* INVERTED EXCLAMATION MARK */ 0x00a1],\n  IntlBackslash: [{ dead: /* COMBINING DIAERESIS */ 0x0308 }, /* INTERROBANG */ 0x203d, /* LATIN SMALL LETTER O WITH STROKE */ 0x00f8, /* LATIN CAPITAL LETTER O WITH STROKE */ 0x00d8],\n  KeyZ: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  KeyX: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059, { dead: /* COMBINING DOT ABOVE */ 0x0307 }, /* OPTION KEY */ 0x2325],\n  KeyC: [/* LATIN SMALL LETTER E WITH GRAVE */ 0x00e8, /* LATIN CAPITAL LETTER E WITH GRAVE */ 0x00c8, { dead: /* COMBINING GRAVE ACCENT */ 0x0300 }, /* PLACE OF INTEREST SIGN */ 0x2318],\n  KeyV: [/* FULL STOP */ 0x002e, /* COLON */ 0x003a, /* HORIZONTAL ELLIPSIS */ 0x2026, /* MIDDLE DOT */ 0x00b7],\n  KeyB: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057, /* BULLET */ 0x2022, /* BALLOT X */ 0x2717],\n  KeyN: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047, null, /* FOUR BALLOON-SPOKED ASTERISK */ 0x2723],\n  KeyM: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043, { dead: /* COMBINING CEDILLA */ 0x0327 }, /* BLACK SPADE SUIT */ 0x2660],\n  Comma: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d, { dead: /* COMBINING MACRON */ 0x0304 }, /* BLACK HEART SUIT */ 0x2665],\n  Period: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048, { dead: /* COMBINING BREVE */ 0x0306 }, /* BLACK DIAMOND SUIT */ 0x2666],\n  Slash: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056, { dead: /* COMBINING CARON */ 0x030c }, /* BLACK CLUB SUIT */ 0x2663],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_HE_IL: CharacterDict = {\n  Backquote: [/* SEMICOLON */ 0x003b, /* TILDE */ 0x007e, /* HEBREW PUNCTUATION GERESH */ 0x05f3],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* COMMERCIAL AT */ 0x0040],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* NUMBER SIGN */ 0x0023, /* EURO SIGN */ 0x20ac],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* DOLLAR SIGN */ 0x0024, /* NEW SHEQEL SIGN */ 0x20aa],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025, /* DEGREE SIGN */ 0x00b0],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* CIRCUMFLEX ACCENT */ 0x005e, /* HEBREW ACCENT OLE */ 0x05ab],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* AMPERSAND */ 0x0026, /* HEBREW POINT METEG */ 0x05bd],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* ASTERISK */ 0x002a, /* MULTIPLICATION SIGN */ 0x00d7],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* RIGHT PARENTHESIS */ 0x0029, { special: /* LEFT-TO-RIGHT MARK */ 0x200e }],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* LEFT PARENTHESIS */ 0x0028, { special: /* RIGHT-TO-LEFT MARK */ 0x200f }],\n  Minus: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f, /* HEBREW PUNCTUATION MAQAF */ 0x05be],\n  Equal: [/* EQUALS SIGN */ 0x003d, /* PLUS SIGN */ 0x002b, /* EN DASH */ 0x2013],\n  KeyQ: [/* SOLIDUS */ 0x002f, /* LATIN CAPITAL LETTER Q */ 0x0051, /* HEBREW POINT SIN DOT */ 0x05c2],\n  KeyW: [/* APOSTROPHE */ 0x0027, /* LATIN CAPITAL LETTER W */ 0x0057, /* HEBREW POINT SHIN DOT */ 0x05c1],\n  KeyE: [/* HEBREW LETTER QOF */ 0x05e7, /* LATIN CAPITAL LETTER E */ 0x0045, /* HEBREW POINT QAMATS */ 0x05b8],\n  KeyR: [/* HEBREW LETTER RESH */ 0x05e8, /* LATIN CAPITAL LETTER R */ 0x0052, /* HEBREW POINT HATAF QAMATS */ 0x05b3],\n  KeyT: [/* HEBREW LETTER ALEF */ 0x05d0, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyY: [/* HEBREW LETTER TET */ 0x05d8, /* LATIN CAPITAL LETTER Y */ 0x0059, /* HEBREW LIGATURE YIDDISH DOUBLE VAV */ 0x05f0],\n  KeyU: [/* HEBREW LETTER VAV */ 0x05d5, /* LATIN CAPITAL LETTER U */ 0x0055, /* HEBREW POINT HOLAM */ 0x05b9, /* HEBREW POINT HOLAM HASER FOR VAV */ 0x05ba],\n  KeyI: [/* HEBREW LETTER FINAL NUN */ 0x05df, /* LATIN CAPITAL LETTER I */ 0x0049],\n  KeyO: [/* HEBREW LETTER FINAL MEM */ 0x05dd, /* LATIN CAPITAL LETTER O */ 0x004f],\n  KeyP: [/* HEBREW LETTER PE */ 0x05e4, /* LATIN CAPITAL LETTER P */ 0x0050, /* HEBREW POINT PATAH */ 0x05b7],\n  BracketLeft: [/* RIGHT SQUARE BRACKET */ 0x005d, /* RIGHT CURLY BRACKET */ 0x007d, /* HEBREW POINT HATAF PATAH */ 0x05b2],\n  BracketRight: [/* LEFT SQUARE BRACKET */ 0x005b, /* LEFT CURLY BRACKET */ 0x007b, /* HEBREW POINT RAFE */ 0x05bf],\n  Backslash: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c, /* HEBREW POINT QUBUTS */ 0x05bb],\n  KeyA: [/* HEBREW LETTER SHIN */ 0x05e9, /* LATIN CAPITAL LETTER A */ 0x0041, /* HEBREW POINT SHEVA */ 0x05b0],\n  KeyS: [/* HEBREW LETTER DALET */ 0x05d3, /* LATIN CAPITAL LETTER S */ 0x0053, /* HEBREW POINT DAGESH OR MAPIQ */ 0x05bc],\n  KeyD: [/* HEBREW LETTER GIMEL */ 0x05d2, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyF: [/* HEBREW LETTER KAF */ 0x05db, /* LATIN CAPITAL LETTER F */ 0x0046],\n  KeyG: [/* HEBREW LETTER AYIN */ 0x05e2, /* LATIN CAPITAL LETTER G */ 0x0047, /* HEBREW LIGATURE YIDDISH VAV YOD */ 0x05f1],\n  KeyH: [/* HEBREW LETTER YOD */ 0x05d9, /* LATIN CAPITAL LETTER H */ 0x0048, /* HEBREW LIGATURE YIDDISH DOUBLE YOD */ 0x05f2],\n  KeyJ: [/* HEBREW LETTER HET */ 0x05d7, /* LATIN CAPITAL LETTER J */ 0x004a, /* HEBREW POINT HIRIQ */ 0x05b4, { special: /* ZERO WIDTH JOINER */ 0x200d }],\n  KeyK: [/* HEBREW LETTER LAMED */ 0x05dc, /* LATIN CAPITAL LETTER K */ 0x004b],\n  KeyL: [/* HEBREW LETTER FINAL KAF */ 0x05da, /* LATIN CAPITAL LETTER L */ 0x004c, /* RIGHT DOUBLE QUOTATION MARK */ 0x201d, /* LEFT DOUBLE QUOTATION MARK */ 0x201c],\n  Semicolon: [/* HEBREW LETTER FINAL PE */ 0x05e3, /* COLON */ 0x003a, /* DOUBLE LOW-9 QUOTATION MARK */ 0x201e, /* RIGHT DOUBLE QUOTATION MARK */ 0x201d],\n  Quote: [/* COMMA */ 0x002c, /* QUOTATION MARK */ 0x0022, /* HEBREW PUNCTUATION GERSHAYIM */ 0x05f4],\n  IntlBackslash: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  KeyZ: [/* HEBREW LETTER ZAYIN */ 0x05d6, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  KeyX: [/* HEBREW LETTER SAMEKH */ 0x05e1, /* LATIN CAPITAL LETTER X */ 0x0058, /* HEBREW POINT SEGOL */ 0x05b6],\n  KeyC: [/* HEBREW LETTER BET */ 0x05d1, /* LATIN CAPITAL LETTER C */ 0x0043, /* HEBREW POINT HATAF SEGOL */ 0x05b1, { special: /* COMBINING GRAPHEME JOINER */ 0x034f }],\n  KeyV: [/* HEBREW LETTER HE */ 0x05d4, /* LATIN CAPITAL LETTER V */ 0x0056],\n  KeyB: [/* HEBREW LETTER NUN */ 0x05e0, /* LATIN CAPITAL LETTER B */ 0x0042, null, /* HEBREW PUNCTUATION NUN HAFUKHA */ 0x05c6],\n  KeyN: [/* HEBREW LETTER MEM */ 0x05de, /* LATIN CAPITAL LETTER N */ 0x004e, null, { special: /* ZERO WIDTH NON-JOINER */ 0x200c }],\n  KeyM: [/* HEBREW LETTER TSADI */ 0x05e6, /* LATIN CAPITAL LETTER M */ 0x004d, /* HEBREW POINT TSERE */ 0x05b5],\n  Comma: [/* HEBREW LETTER TAV */ 0x05ea, /* GREATER-THAN SIGN */ 0x003e, /* RIGHT SINGLE QUOTATION MARK */ 0x2019, /* LEFT SINGLE QUOTATION MARK */ 0x2018],\n  Period: [/* HEBREW LETTER FINAL TSADI */ 0x05e5, /* LESS-THAN SIGN */ 0x003c, /* SINGLE LOW-9 QUOTATION MARK */ 0x201a, /* RIGHT SINGLE QUOTATION MARK */ 0x2019],\n  Slash: [/* FULL STOP */ 0x002e, /* QUESTION MARK */ 0x003f, /* DIVISION SIGN */ 0x00f7],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_HE_IL_ARKN: CharacterDict = {\n  Backquote: [/* SEMICOLON */ 0x003b, /* TILDE */ 0x007e, /* HEBREW PUNCTUATION GERESH */ 0x05f3],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* COMMERCIAL AT */ 0x0040],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* NUMBER SIGN */ 0x0023, /* EURO SIGN */ 0x20ac],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* DOLLAR SIGN */ 0x0024, /* NEW SHEQEL SIGN */ 0x20aa],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025, /* DEGREE SIGN */ 0x00b0],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* CIRCUMFLEX ACCENT */ 0x005e, /* HEBREW ACCENT OLE */ 0x05ab],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* AMPERSAND */ 0x0026, /* HEBREW POINT METEG */ 0x05bd],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* ASTERISK */ 0x002a, /* MULTIPLICATION SIGN */ 0x00d7],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* RIGHT PARENTHESIS */ 0x0029, { special: /* LEFT-TO-RIGHT MARK */ 0x200e }],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* LEFT PARENTHESIS */ 0x0028, { special: /* RIGHT-TO-LEFT MARK */ 0x200f }],\n  Minus: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f, /* HEBREW PUNCTUATION MAQAF */ 0x05be],\n  Equal: [/* EQUALS SIGN */ 0x003d, /* PLUS SIGN */ 0x002b, /* EN DASH */ 0x2013],\n  KeyQ: [/* HEBREW LETTER FINAL TSADI */ 0x05e5, /* LATIN CAPITAL LETTER Q */ 0x0051, /* HEBREW POINT SIN DOT */ 0x05c2],\n  KeyW: [/* HEBREW LETTER FINAL NUN */ 0x05df, /* LATIN CAPITAL LETTER W */ 0x0057, /* HEBREW POINT SHIN DOT */ 0x05c1],\n  KeyE: [/* HEBREW LETTER QOF */ 0x05e7, /* LATIN CAPITAL LETTER E */ 0x0045, /* HEBREW POINT QAMATS */ 0x05b8],\n  KeyR: [/* HEBREW LETTER RESH */ 0x05e8, /* LATIN CAPITAL LETTER R */ 0x0052, /* HEBREW POINT HATAF QAMATS */ 0x05b3],\n  KeyT: [/* HEBREW LETTER ALEF */ 0x05d0, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyY: [/* HEBREW LETTER TET */ 0x05d8, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  KeyU: [/* HEBREW LETTER VAV */ 0x05d5, /* LATIN CAPITAL LETTER U */ 0x0055, /* HEBREW POINT HOLAM */ 0x05b9, /* HEBREW POINT HOLAM HASER FOR VAV */ 0x05ba],\n  KeyI: [/* HEBREW LETTER TAV */ 0x05ea, /* LATIN CAPITAL LETTER I */ 0x0049],\n  KeyO: [/* HEBREW LETTER FINAL MEM */ 0x05dd, /* LATIN CAPITAL LETTER O */ 0x004f],\n  KeyP: [/* HEBREW LETTER PE */ 0x05e4, /* LATIN CAPITAL LETTER P */ 0x0050, /* HEBREW POINT PATAH */ 0x05b7],\n  BracketLeft: [/* RIGHT SQUARE BRACKET */ 0x005d, /* RIGHT CURLY BRACKET */ 0x007d, /* HEBREW POINT HATAF PATAH */ 0x05b2],\n  BracketRight: [/* LEFT SQUARE BRACKET */ 0x005b, /* LEFT CURLY BRACKET */ 0x007b, /* HEBREW POINT RAFE */ 0x05bf],\n  Backslash: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c, /* HEBREW POINT QUBUTS */ 0x05bb],\n  KeyA: [/* HEBREW LETTER SHIN */ 0x05e9, /* LATIN CAPITAL LETTER A */ 0x0041, /* HEBREW POINT SHEVA */ 0x05b0],\n  KeyS: [/* HEBREW LETTER DALET */ 0x05d3, /* LATIN CAPITAL LETTER S */ 0x0053, /* HEBREW POINT DAGESH OR MAPIQ */ 0x05bc],\n  KeyD: [/* HEBREW LETTER GIMEL */ 0x05d2, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyF: [/* HEBREW LETTER KAF */ 0x05db, /* LATIN CAPITAL LETTER F */ 0x0046],\n  KeyG: [/* HEBREW LETTER AYIN */ 0x05e2, /* LATIN CAPITAL LETTER G */ 0x0047],\n  KeyH: [/* HEBREW LETTER YOD */ 0x05d9, /* LATIN CAPITAL LETTER H */ 0x0048],\n  KeyJ: [/* HEBREW LETTER HET */ 0x05d7, /* LATIN CAPITAL LETTER J */ 0x004a, /* HEBREW POINT HIRIQ */ 0x05b4, { special: /* ZERO WIDTH JOINER */ 0x200d }],\n  KeyK: [/* HEBREW LETTER LAMED */ 0x05dc, /* LATIN CAPITAL LETTER K */ 0x004b],\n  KeyL: [/* HEBREW LETTER FINAL KAF */ 0x05da, /* LATIN CAPITAL LETTER L */ 0x004c, /* RIGHT DOUBLE QUOTATION MARK */ 0x201d, /* LEFT DOUBLE QUOTATION MARK */ 0x201c],\n  Semicolon: [/* HEBREW LETTER FINAL PE */ 0x05e3, /* COLON */ 0x003a, /* DOUBLE LOW-9 QUOTATION MARK */ 0x201e, /* RIGHT DOUBLE QUOTATION MARK */ 0x201d],\n  Quote: [/* APOSTROPHE */ 0x0027, /* QUOTATION MARK */ 0x0022, /* HEBREW PUNCTUATION GERSHAYIM */ 0x05f4],\n  IntlBackslash: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  KeyZ: [/* HEBREW LETTER ZAYIN */ 0x05d6, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  KeyX: [/* HEBREW LETTER SAMEKH */ 0x05e1, /* LATIN CAPITAL LETTER X */ 0x0058, /* HEBREW POINT SEGOL */ 0x05b6],\n  KeyC: [/* HEBREW LETTER BET */ 0x05d1, /* LATIN CAPITAL LETTER C */ 0x0043, /* HEBREW POINT HATAF SEGOL */ 0x05b1, { special: /* COMBINING GRAPHEME JOINER */ 0x034f }],\n  KeyV: [/* HEBREW LETTER HE */ 0x05d4, /* LATIN CAPITAL LETTER V */ 0x0056],\n  KeyB: [/* HEBREW LETTER NUN */ 0x05e0, /* LATIN CAPITAL LETTER B */ 0x0042, null, /* HEBREW PUNCTUATION NUN HAFUKHA */ 0x05c6],\n  KeyN: [/* HEBREW LETTER MEM */ 0x05de, /* LATIN CAPITAL LETTER N */ 0x004e, null, { special: /* ZERO WIDTH NON-JOINER */ 0x200c }],\n  KeyM: [/* HEBREW LETTER TSADI */ 0x05e6, /* LATIN CAPITAL LETTER M */ 0x004d, /* HEBREW POINT TSERE */ 0x05b5],\n  Comma: [/* COMMA */ 0x002c, /* GREATER-THAN SIGN */ 0x003e, /* RIGHT SINGLE QUOTATION MARK */ 0x2019, /* LEFT SINGLE QUOTATION MARK */ 0x2018],\n  Period: [/* FULL STOP */ 0x002e, /* LESS-THAN SIGN */ 0x003c, /* SINGLE LOW-9 QUOTATION MARK */ 0x201a, /* RIGHT SINGLE QUOTATION MARK */ 0x2019],\n  Slash: [/* SOLIDUS */ 0x002f, /* QUESTION MARK */ 0x003f, /* DIVISION SIGN */ 0x00f7],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_HU_HU: CharacterDict = {\n  Backquote: [/* DIGIT ZERO */ 0x0030, /* SECTION SIGN */ 0x00a7],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* APOSTROPHE */ 0x0027, /* TILDE */ 0x007e],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* QUOTATION MARK */ 0x0022, { dead: /* COMBINING CARON */ 0x030c }],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* PLUS SIGN */ 0x002b, { dead: /* COMBINING CIRCUMFLEX ACCENT */ 0x0302 }],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* EXCLAMATION MARK */ 0x0021, { dead: /* COMBINING BREVE */ 0x0306 }],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025, { dead: /* COMBINING RING ABOVE */ 0x030a }],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* SOLIDUS */ 0x002f, { dead: /* COMBINING OGONEK */ 0x0328 }],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* EQUALS SIGN */ 0x003d, /* GRAVE ACCENT */ 0x0060],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* LEFT PARENTHESIS */ 0x0028, { dead: /* COMBINING DOT ABOVE */ 0x0307 }],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* RIGHT PARENTHESIS */ 0x0029, { dead: /* COMBINING ACUTE ACCENT */ 0x0301 }],\n  Digit0: [/* LATIN SMALL LETTER O WITH DIAERESIS */ 0x00f6, /* LATIN CAPITAL LETTER O WITH DIAERESIS */ 0x00d6, { dead: /* COMBINING DOUBLE ACUTE ACCENT */ 0x030b }],\n  Minus: [/* LATIN SMALL LETTER U WITH DIAERESIS */ 0x00fc, /* LATIN CAPITAL LETTER U WITH DIAERESIS */ 0x00dc, { dead: /* COMBINING DIAERESIS */ 0x0308 }],\n  Equal: [/* LATIN SMALL LETTER O WITH ACUTE */ 0x00f3, /* LATIN CAPITAL LETTER O WITH ACUTE */ 0x00d3, { dead: /* COMBINING CEDILLA */ 0x0327 }],\n  KeyQ: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051, /* REVERSE SOLIDUS */ 0x005c],\n  KeyW: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057, /* VERTICAL LINE */ 0x007c],\n  KeyE: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045, /* LATIN CAPITAL LETTER A WITH DIAERESIS */ 0x00c4],\n  KeyR: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  KeyT: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyY: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  KeyU: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055, /* EURO SIGN */ 0x20ac],\n  KeyI: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049, /* LATIN CAPITAL LETTER I WITH ACUTE */ 0x00cd],\n  KeyO: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  KeyP: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  BracketLeft: [/* LATIN SMALL LETTER O WITH DOUBLE ACUTE */ 0x0151, /* LATIN CAPITAL LETTER O WITH DOUBLE ACUTE */ 0x0150, /* DIVISION SIGN */ 0x00f7],\n  BracketRight: [/* LATIN SMALL LETTER U WITH ACUTE */ 0x00fa, /* LATIN CAPITAL LETTER U WITH ACUTE */ 0x00da, /* MULTIPLICATION SIGN */ 0x00d7],\n  Backslash: [/* LATIN SMALL LETTER U WITH DOUBLE ACUTE */ 0x0171, /* LATIN CAPITAL LETTER U WITH DOUBLE ACUTE */ 0x0170, /* CURRENCY SIGN */ 0x00a4],\n  KeyA: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041, /* LATIN SMALL LETTER A WITH DIAERESIS */ 0x00e4],\n  KeyS: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053, /* LATIN SMALL LETTER D WITH STROKE */ 0x0111],\n  KeyD: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044, /* LATIN CAPITAL LETTER D WITH STROKE */ 0x0110],\n  KeyF: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046, /* LEFT SQUARE BRACKET */ 0x005b],\n  KeyG: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047, /* RIGHT SQUARE BRACKET */ 0x005d],\n  KeyH: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  KeyJ: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a, /* LATIN SMALL LETTER I WITH ACUTE */ 0x00ed],\n  KeyK: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b, /* LATIN SMALL LETTER L WITH STROKE */ 0x0142],\n  KeyL: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c, /* LATIN CAPITAL LETTER L WITH STROKE */ 0x0141],\n  Semicolon: [/* LATIN SMALL LETTER E WITH ACUTE */ 0x00e9, /* LATIN CAPITAL LETTER E WITH ACUTE */ 0x00c9, /* DOLLAR SIGN */ 0x0024],\n  Quote: [/* LATIN SMALL LETTER A WITH ACUTE */ 0x00e1, /* LATIN CAPITAL LETTER A WITH ACUTE */ 0x00c1, /* LATIN SMALL LETTER SHARP S */ 0x00df],\n  IntlBackslash: [/* LATIN SMALL LETTER I WITH ACUTE */ 0x00ed, /* LATIN CAPITAL LETTER I WITH ACUTE */ 0x00cd, /* LESS-THAN SIGN */ 0x003c],\n  KeyZ: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059, /* GREATER-THAN SIGN */ 0x003e],\n  KeyX: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058, /* NUMBER SIGN */ 0x0023],\n  KeyC: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043, /* AMPERSAND */ 0x0026],\n  KeyV: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056, /* COMMERCIAL AT */ 0x0040],\n  KeyB: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042, /* LEFT CURLY BRACKET */ 0x007b],\n  KeyN: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e, /* RIGHT CURLY BRACKET */ 0x007d],\n  KeyM: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d, /* LESS-THAN SIGN */ 0x003c],\n  Comma: [/* COMMA */ 0x002c, /* QUESTION MARK */ 0x003f, /* SEMICOLON */ 0x003b],\n  Period: [/* FULL STOP */ 0x002e, /* COLON */ 0x003a, /* GREATER-THAN SIGN */ 0x003e],\n  Slash: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f, /* ASTERISK */ 0x002a],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_IT_IT: CharacterDict = {\n  Backquote: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* QUOTATION MARK */ 0x0022],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* POUND SIGN */ 0x00a3],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* DOLLAR SIGN */ 0x0024],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025, /* EURO SIGN */ 0x20ac],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* AMPERSAND */ 0x0026],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* SOLIDUS */ 0x002f],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* LEFT PARENTHESIS */ 0x0028],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* RIGHT PARENTHESIS */ 0x0029],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* EQUALS SIGN */ 0x003d],\n  Minus: [/* APOSTROPHE */ 0x0027, /* QUESTION MARK */ 0x003f],\n  Equal: [/* LATIN SMALL LETTER I WITH GRAVE */ 0x00ec, /* CIRCUMFLEX ACCENT */ 0x005e],\n  KeyQ: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051],\n  KeyW: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057],\n  KeyE: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045, /* EURO SIGN */ 0x20ac],\n  KeyR: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  KeyT: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyY: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  KeyU: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055],\n  KeyI: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049],\n  KeyO: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  KeyP: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  BracketLeft: [/* LATIN SMALL LETTER E WITH GRAVE */ 0x00e8, /* LATIN SMALL LETTER E WITH ACUTE */ 0x00e9, /* LEFT SQUARE BRACKET */ 0x005b, /* LEFT CURLY BRACKET */ 0x007b],\n  BracketRight: [/* PLUS SIGN */ 0x002b, /* ASTERISK */ 0x002a, /* RIGHT SQUARE BRACKET */ 0x005d, /* RIGHT CURLY BRACKET */ 0x007d],\n  Backslash: [/* LATIN SMALL LETTER U WITH GRAVE */ 0x00f9, /* SECTION SIGN */ 0x00a7],\n  KeyA: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041],\n  KeyS: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053],\n  KeyD: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyF: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  KeyG: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  KeyH: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  KeyJ: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  KeyK: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  KeyL: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  Semicolon: [/* LATIN SMALL LETTER O WITH GRAVE */ 0x00f2, /* LATIN SMALL LETTER C WITH CEDILLA */ 0x00e7, /* COMMERCIAL AT */ 0x0040],\n  Quote: [/* LATIN SMALL LETTER A WITH GRAVE */ 0x00e0, /* DEGREE SIGN */ 0x00b0, /* NUMBER SIGN */ 0x0023],\n  IntlBackslash: [/* LESS-THAN SIGN */ 0x003c, /* GREATER-THAN SIGN */ 0x003e],\n  KeyZ: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  KeyX: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058],\n  KeyC: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043],\n  KeyV: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  KeyB: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  KeyN: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e],\n  KeyM: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d],\n  Comma: [/* COMMA */ 0x002c, /* SEMICOLON */ 0x003b],\n  Period: [/* FULL STOP */ 0x002e, /* COLON */ 0x003a],\n  Slash: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_LT_LT: CharacterDict = {\n  Backquote: [/* GRAVE ACCENT */ 0x0060, /* TILDE */ 0x007e, /* ACUTE ACCENT */ 0x00b4],\n  Digit1: [/* EXCLAMATION MARK */ 0x0021, /* DIGIT ONE */ 0x0031, /* COMMERCIAL AT */ 0x0040],\n  Digit2: [/* HYPHEN-MINUS */ 0x002d, /* DIGIT TWO */ 0x0032, /* LOW LINE */ 0x005f],\n  Digit3: [/* SOLIDUS */ 0x002f, /* DIGIT THREE */ 0x0033, /* NUMBER SIGN */ 0x0023],\n  Digit4: [/* SEMICOLON */ 0x003b, /* DIGIT FOUR */ 0x0034, /* DOLLAR SIGN */ 0x0024],\n  Digit5: [/* COLON */ 0x003a, /* DIGIT FIVE */ 0x0035, /* SECTION SIGN */ 0x00a7],\n  Digit6: [/* COMMA */ 0x002c, /* DIGIT SIX */ 0x0036, /* CIRCUMFLEX ACCENT */ 0x005e],\n  Digit7: [/* FULL STOP */ 0x002e, /* DIGIT SEVEN */ 0x0037, /* AMPERSAND */ 0x0026],\n  Digit8: [/* EQUALS SIGN */ 0x003d, /* DIGIT EIGHT */ 0x0038, /* ASTERISK */ 0x002a],\n  Digit9: [/* LEFT PARENTHESIS */ 0x0028, /* DIGIT NINE */ 0x0039, /* LEFT SQUARE BRACKET */ 0x005b],\n  Digit0: [/* RIGHT PARENTHESIS */ 0x0029, /* DIGIT ZERO */ 0x0030, /* RIGHT SQUARE BRACKET */ 0x005d],\n  Minus: [/* QUESTION MARK */ 0x003f, /* PLUS SIGN */ 0x002b, /* APOSTROPHE */ 0x0027],\n  Equal: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058, /* PERCENT SIGN */ 0x0025],\n  KeyQ: [/* LATIN SMALL LETTER A WITH OGONEK */ 0x0105, /* LATIN CAPITAL LETTER A WITH OGONEK */ 0x0104],\n  KeyW: [/* LATIN SMALL LETTER Z WITH CARON */ 0x017e, /* LATIN CAPITAL LETTER Z WITH CARON */ 0x017d],\n  KeyE: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045, /* EURO SIGN */ 0x20ac],\n  KeyR: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  KeyT: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyY: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  KeyU: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055],\n  KeyI: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049],\n  KeyO: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  KeyP: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  BracketLeft: [/* LATIN SMALL LETTER I WITH OGONEK */ 0x012f, /* LATIN CAPITAL LETTER I WITH OGONEK */ 0x012e, /* LEFT CURLY BRACKET */ 0x007b],\n  BracketRight: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057, /* RIGHT CURLY BRACKET */ 0x007d],\n  Backslash: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051, /* VERTICAL LINE */ 0x007c],\n  KeyA: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041],\n  KeyS: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053],\n  KeyD: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyF: [/* LATIN SMALL LETTER S WITH CARON */ 0x0161, /* LATIN CAPITAL LETTER S WITH CARON */ 0x0160],\n  KeyG: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  KeyH: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  KeyJ: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  KeyK: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  KeyL: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  Semicolon: [/* LATIN SMALL LETTER U WITH OGONEK */ 0x0173, /* LATIN CAPITAL LETTER U WITH OGONEK */ 0x0172],\n  Quote: [/* LATIN SMALL LETTER E WITH DOT ABOVE */ 0x0117, /* LATIN CAPITAL LETTER E WITH DOT ABOVE */ 0x0116, /* QUOTATION MARK */ 0x0022],\n  IntlBackslash: [/* LESS-THAN SIGN */ 0x003c, /* GREATER-THAN SIGN */ 0x003e, /* EN DASH */ 0x2013],\n  KeyZ: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  KeyX: [/* LATIN SMALL LETTER U WITH MACRON */ 0x016b, /* LATIN CAPITAL LETTER U WITH MACRON */ 0x016a],\n  KeyC: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043],\n  KeyV: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  KeyB: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  KeyN: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e],\n  KeyM: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d],\n  Comma: [/* LATIN SMALL LETTER C WITH CARON */ 0x010d, /* LATIN CAPITAL LETTER C WITH CARON */ 0x010c, /* DOUBLE LOW-9 QUOTATION MARK */ 0x201e],\n  Period: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046, /* LEFT DOUBLE QUOTATION MARK */ 0x201c],\n  Slash: [/* LATIN SMALL LETTER E WITH OGONEK */ 0x0119, /* LATIN CAPITAL LETTER E WITH OGONEK */ 0x0118, /* REVERSE SOLIDUS */ 0x005c],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_NB_KVIKK: CharacterDict = {\n  Backquote: [/* GRAVE ACCENT */ 0x0060, /* TILDE */ 0x007e],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* COMMERCIAL AT */ 0x0040],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* NUMBER SIGN */ 0x0023],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* DOLLAR SIGN */ 0x0024],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* CIRCUMFLEX ACCENT */ 0x005e],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* AMPERSAND */ 0x0026],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* ASTERISK */ 0x002a],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* LEFT PARENTHESIS */ 0x0028],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* RIGHT PARENTHESIS */ 0x0029],\n  Minus: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f],\n  Equal: [/* EQUALS SIGN */ 0x003d, /* PLUS SIGN */ 0x002b],\n  KeyQ: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057],\n  KeyW: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  KeyE: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055],\n  KeyR: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  KeyT: [/* LATIN SMALL LETTER O WITH STROKE */ 0x00f8, /* LATIN CAPITAL LETTER O WITH STROKE */ 0x00d8],\n  KeyY: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  KeyU: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  KeyI: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d],\n  KeyO: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  KeyP: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043],\n  BracketLeft: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051],\n  KeyA: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  KeyS: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  KeyD: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045],\n  KeyF: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041],\n  KeyG: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049],\n  KeyH: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyJ: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyK: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e],\n  KeyL: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053],\n  Semicolon: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  Quote: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  KeyZ: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058],\n  KeyX: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  KeyC: [/* LATIN SMALL LETTER A WITH RING ABOVE */ 0x00e5, /* LATIN CAPITAL LETTER A WITH RING ABOVE */ 0x00c5],\n  KeyV: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  KeyB: [/* LATIN SMALL LETTER AE */ 0x00e6, /* LATIN CAPITAL LETTER AE */ 0x00c6],\n  KeyN: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  KeyM: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  Comma: [/* COMMA */ 0x002c, /* SEMICOLON */ 0x003b],\n  Period: [/* FULL STOP */ 0x002e, /* COLON */ 0x003a],\n  Slash: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_NB_NO: CharacterDict = {\n  Backquote: [/* VERTICAL LINE */ 0x007c, /* SECTION SIGN */ 0x00a7],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* QUOTATION MARK */ 0x0022, /* COMMERCIAL AT */ 0x0040],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* NUMBER SIGN */ 0x0023, /* POUND SIGN */ 0x00a3],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* CURRENCY SIGN */ 0x00a4, /* DOLLAR SIGN */ 0x0024],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025, /* EURO SIGN */ 0x20ac],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* AMPERSAND */ 0x0026],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* SOLIDUS */ 0x002f, /* LEFT CURLY BRACKET */ 0x007b],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* LEFT PARENTHESIS */ 0x0028, /* LEFT SQUARE BRACKET */ 0x005b],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* RIGHT PARENTHESIS */ 0x0029, /* RIGHT SQUARE BRACKET */ 0x005d],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* EQUALS SIGN */ 0x003d, /* RIGHT CURLY BRACKET */ 0x007d],\n  Minus: [/* PLUS SIGN */ 0x002b, /* QUESTION MARK */ 0x003f],\n  Equal: [/* REVERSE SOLIDUS */ 0x005c, { dead: /* COMBINING GRAVE ACCENT */ 0x0300 }, { dead: /* COMBINING ACUTE ACCENT */ 0x0301 }],\n  KeyQ: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051],\n  KeyW: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057],\n  KeyE: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045, /* EURO SIGN */ 0x20ac],\n  KeyR: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  KeyT: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyY: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  KeyU: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055],\n  KeyI: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049],\n  KeyO: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  KeyP: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  BracketLeft: [/* LATIN SMALL LETTER A WITH RING ABOVE */ 0x00e5, /* LATIN CAPITAL LETTER A WITH RING ABOVE */ 0x00c5],\n  BracketRight: [{ dead: /* COMBINING DIAERESIS */ 0x0308 }, { dead: /* COMBINING CIRCUMFLEX ACCENT */ 0x0302 }, { dead: /* COMBINING TILDE */ 0x0303 }],\n  Backslash: [/* APOSTROPHE */ 0x0027, /* ASTERISK */ 0x002a],\n  KeyA: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041],\n  KeyS: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053],\n  KeyD: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyF: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  KeyG: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  KeyH: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  KeyJ: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  KeyK: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  KeyL: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  Semicolon: [/* LATIN SMALL LETTER O WITH STROKE */ 0x00f8, /* LATIN CAPITAL LETTER O WITH STROKE */ 0x00d8],\n  Quote: [/* LATIN SMALL LETTER AE */ 0x00e6, /* LATIN CAPITAL LETTER AE */ 0x00c6],\n  IntlBackslash: [/* LESS-THAN SIGN */ 0x003c, /* GREATER-THAN SIGN */ 0x003e],\n  KeyZ: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  KeyX: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058],\n  KeyC: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043],\n  KeyV: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  KeyB: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  KeyN: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e],\n  KeyM: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d, /* MICRO SIGN */ 0x00b5],\n  Comma: [/* COMMA */ 0x002c, /* SEMICOLON */ 0x003b],\n  Period: [/* FULL STOP */ 0x002e, /* COLON */ 0x003a],\n  Slash: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_NB_SKARP: CharacterDict = {\n  Backquote: [/* GRAVE ACCENT */ 0x0060, /* TILDE */ 0x007e],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* COMMERCIAL AT */ 0x0040],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* NUMBER SIGN */ 0x0023],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* DOLLAR SIGN */ 0x0024],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* CIRCUMFLEX ACCENT */ 0x005e],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* AMPERSAND */ 0x0026],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* ASTERISK */ 0x002a],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* LEFT PARENTHESIS */ 0x0028],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* RIGHT PARENTHESIS */ 0x0029],\n  Minus: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f],\n  Equal: [/* EQUALS SIGN */ 0x003d, /* PLUS SIGN */ 0x002b],\n  KeyQ: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043],\n  KeyW: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  KeyE: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  KeyR: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d],\n  KeyT: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyY: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055],\n  KeyU: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041],\n  KeyI: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  KeyO: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  KeyP: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058],\n  BracketLeft: [/* HYPHEN-MINUS */ 0x002d],\n  KeyA: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  KeyS: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e],\n  KeyD: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyF: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  KeyG: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053],\n  KeyH: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049],\n  KeyJ: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  KeyK: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045],\n  KeyL: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  Semicolon: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  Quote: [/* LATIN SMALL LETTER AE */ 0x00e6, /* LATIN CAPITAL LETTER AE */ 0x00c6],\n  KeyZ: [/* FULL STOP */ 0x002e, /* COLON */ 0x003a],\n  KeyX: [/* COMMA */ 0x002c, /* SEMICOLON */ 0x003b],\n  KeyC: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  KeyV: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  KeyB: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057],\n  KeyN: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  KeyM: [/* LATIN SMALL LETTER A WITH RING ABOVE */ 0x00e5, /* LATIN CAPITAL LETTER A WITH RING ABOVE */ 0x00c5],\n  Comma: [/* LATIN SMALL LETTER O WITH STROKE */ 0x00f8, /* LATIN CAPITAL LETTER O WITH STROKE */ 0x00d8],\n  Period: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  Slash: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_NL_BE: CharacterDict = {\n  Backquote: [/* SUPERSCRIPT TWO */ 0x00b2, /* SUPERSCRIPT THREE */ 0x00b3],\n  Digit1: [/* AMPERSAND */ 0x0026, /* DIGIT ONE */ 0x0031, /* VERTICAL LINE */ 0x007c],\n  Digit2: [/* LATIN SMALL LETTER E WITH ACUTE */ 0x00e9, /* DIGIT TWO */ 0x0032, /* COMMERCIAL AT */ 0x0040],\n  Digit3: [/* QUOTATION MARK */ 0x0022, /* DIGIT THREE */ 0x0033, /* NUMBER SIGN */ 0x0023],\n  Digit4: [/* APOSTROPHE */ 0x0027, /* DIGIT FOUR */ 0x0034, /* LEFT CURLY BRACKET */ 0x007b],\n  Digit5: [/* LEFT PARENTHESIS */ 0x0028, /* DIGIT FIVE */ 0x0035, /* LEFT SQUARE BRACKET */ 0x005b],\n  Digit6: [/* SECTION SIGN */ 0x00a7, /* DIGIT SIX */ 0x0036, /* CIRCUMFLEX ACCENT */ 0x005e],\n  Digit7: [/* LATIN SMALL LETTER E WITH GRAVE */ 0x00e8, /* DIGIT SEVEN */ 0x0037],\n  Digit8: [/* EXCLAMATION MARK */ 0x0021, /* DIGIT EIGHT */ 0x0038],\n  Digit9: [/* LATIN SMALL LETTER C WITH CEDILLA */ 0x00e7, /* DIGIT NINE */ 0x0039, /* LEFT CURLY BRACKET */ 0x007b],\n  Digit0: [/* LATIN SMALL LETTER A WITH GRAVE */ 0x00e0, /* DIGIT ZERO */ 0x0030, /* RIGHT CURLY BRACKET */ 0x007d],\n  Minus: [/* RIGHT PARENTHESIS */ 0x0029, /* DEGREE SIGN */ 0x00b0],\n  Equal: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f],\n  KeyQ: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041],\n  KeyW: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  KeyE: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045, /* EURO SIGN */ 0x20ac],\n  KeyR: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  KeyT: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyY: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  KeyU: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055],\n  KeyI: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049],\n  KeyO: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  KeyP: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  BracketLeft: [{ dead: /* COMBINING CIRCUMFLEX ACCENT */ 0x0302 }, { dead: /* COMBINING DIAERESIS */ 0x0308 }, /* LEFT SQUARE BRACKET */ 0x005b],\n  BracketRight: [/* DOLLAR SIGN */ 0x0024, /* ASTERISK */ 0x002a, /* RIGHT SQUARE BRACKET */ 0x005d],\n  Backslash: [/* MICRO SIGN */ 0x00b5, /* POUND SIGN */ 0x00a3, { dead: /* COMBINING GRAVE ACCENT */ 0x0300 }, { dead: /* COMBINING GRAVE ACCENT */ 0x0300 }],\n  KeyA: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051],\n  KeyS: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053],\n  KeyD: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyF: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  KeyG: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  KeyH: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  KeyJ: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  KeyK: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  KeyL: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  Semicolon: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d],\n  Quote: [/* LATIN SMALL LETTER U WITH GRAVE */ 0x00f9, /* PERCENT SIGN */ 0x0025, { dead: /* COMBINING ACUTE ACCENT */ 0x0301 }, { dead: /* COMBINING ACUTE ACCENT */ 0x0301 }],\n  IntlBackslash: [/* LESS-THAN SIGN */ 0x003c, /* GREATER-THAN SIGN */ 0x003e, /* REVERSE SOLIDUS */ 0x005c],\n  KeyZ: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057],\n  KeyX: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058],\n  KeyC: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043],\n  KeyV: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  KeyB: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  KeyN: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e],\n  KeyM: [/* COMMA */ 0x002c, /* QUESTION MARK */ 0x003f],\n  Comma: [/* SEMICOLON */ 0x003b, /* FULL STOP */ 0x002e],\n  Period: [/* COLON */ 0x003a, /* SOLIDUS */ 0x002f],\n  Slash: [/* EQUALS SIGN */ 0x003d, /* PLUS SIGN */ 0x002b, { dead: /* COMBINING TILDE */ 0x0303 }, { dead: /* COMBINING TILDE */ 0x0303 }],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_NL_NL: CharacterDict = {\n  Backquote: [/* COMMERCIAL AT */ 0x0040, /* SECTION SIGN */ 0x00a7, /* NOT SIGN */ 0x00ac],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021, /* SUPERSCRIPT ONE */ 0x00b9],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* QUOTATION MARK */ 0x0022, /* SUPERSCRIPT TWO */ 0x00b2],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* NUMBER SIGN */ 0x0023, /* SUPERSCRIPT THREE */ 0x00b3],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* DOLLAR SIGN */ 0x0024, /* VULGAR FRACTION ONE QUARTER */ 0x00bc],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025, /* VULGAR FRACTION ONE HALF */ 0x00bd],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* AMPERSAND */ 0x0026, /* VULGAR FRACTION THREE QUARTERS */ 0x00be],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* LOW LINE */ 0x005f, /* POUND SIGN */ 0x00a3],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* LEFT PARENTHESIS */ 0x0028, /* LEFT CURLY BRACKET */ 0x007b],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* RIGHT PARENTHESIS */ 0x0029, /* RIGHT CURLY BRACKET */ 0x007d],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* APOSTROPHE */ 0x0027],\n  Minus: [/* SOLIDUS */ 0x002f, /* QUESTION MARK */ 0x003f, /* REVERSE SOLIDUS */ 0x005c],\n  Equal: [/* DEGREE SIGN */ 0x00b0, { dead: /* COMBINING TILDE */ 0x0303 }, { dead: /* COMBINING CEDILLA */ 0x0327 }],\n  KeyQ: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051],\n  KeyW: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057],\n  KeyE: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045, /* EURO SIGN */ 0x20ac],\n  KeyR: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052, /* PILCROW SIGN */ 0x00b6],\n  KeyT: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyY: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  KeyU: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055],\n  KeyI: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049],\n  KeyO: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  KeyP: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  BracketLeft: [{ dead: /* COMBINING DIAERESIS */ 0x0308 }, { dead: /* COMBINING CIRCUMFLEX ACCENT */ 0x0302 }],\n  BracketRight: [/* ASTERISK */ 0x002a, /* VERTICAL LINE */ 0x007c],\n  Backslash: [/* LESS-THAN SIGN */ 0x003c, /* GREATER-THAN SIGN */ 0x003e],\n  KeyA: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041],\n  KeyS: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053, /* LATIN SMALL LETTER SHARP S */ 0x00df],\n  KeyD: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyF: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  KeyG: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  KeyH: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  KeyJ: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  KeyK: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  KeyL: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  Semicolon: [/* PLUS SIGN */ 0x002b, /* PLUS-MINUS SIGN */ 0x00b1],\n  Quote: [{ dead: /* COMBINING ACUTE ACCENT */ 0x0301 }, { dead: /* COMBINING GRAVE ACCENT */ 0x0300 }],\n  IntlBackslash: [/* RIGHT SQUARE BRACKET */ 0x005d, /* LEFT SQUARE BRACKET */ 0x005b, /* BROKEN BAR */ 0x00a6],\n  KeyZ: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a, /* LEFT-POINTING DOUBLE ANGLE QUOTATION MARK */ 0x00ab],\n  KeyX: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058, /* RIGHT-POINTING DOUBLE ANGLE QUOTATION MARK */ 0x00bb],\n  KeyC: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043, /* CENT SIGN */ 0x00a2],\n  KeyV: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  KeyB: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  KeyN: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e],\n  KeyM: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d, /* MICRO SIGN */ 0x00b5],\n  Comma: [/* COMMA */ 0x002c, /* SEMICOLON */ 0x003b],\n  Period: [/* FULL STOP */ 0x002e, /* COLON */ 0x003a, /* MIDDLE DOT */ 0x00b7],\n  Slash: [/* HYPHEN-MINUS */ 0x002d, /* EQUALS SIGN */ 0x003d],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_PL_FWYR: CharacterDict = {\n  Backquote: [/* GRAVE ACCENT */ 0x0060, /* TILDE */ 0x007e],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* AMPERSAND */ 0x0026],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* COMMERCIAL AT */ 0x0040],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* NUMBER SIGN */ 0x0023],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* DOLLAR SIGN */ 0x0024],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* CIRCUMFLEX ACCENT */ 0x005e],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* VERTICAL LINE */ 0x007c],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* SOLIDUS */ 0x002f],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* LEFT PARENTHESIS */ 0x0028],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* RIGHT PARENTHESIS */ 0x0029],\n  Minus: [/* LEFT SQUARE BRACKET */ 0x005b, /* LEFT CURLY BRACKET */ 0x007b],\n  Equal: [/* RIGHT SQUARE BRACKET */ 0x005d, /* RIGHT CURLY BRACKET */ 0x007d],\n  KeyQ: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  KeyW: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  KeyE: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyR: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f, /* LATIN SMALL LETTER O WITH ACUTE */ 0x00f3, /* LATIN CAPITAL LETTER O WITH ACUTE */ 0x00d3],\n  KeyT: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  KeyY: [/* HYPHEN-MINUS */ 0x002d, /* EQUALS SIGN */ 0x003d, /* PLUS SIGN */ 0x002b],\n  KeyU: [/* ASTERISK */ 0x002a, /* NUMBER SIGN */ 0x0023, /* MIDDLE DOT */ 0x00b7],\n  KeyI: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  KeyO: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057],\n  KeyP: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  BracketLeft: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  BracketRight: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051],\n  Backslash: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053, /* LATIN SMALL LETTER S WITH ACUTE */ 0x015b, /* LATIN CAPITAL LETTER S WITH ACUTE */ 0x015a],\n  KeyA: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  KeyS: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043, /* LATIN SMALL LETTER C WITH ACUTE */ 0x0107, /* LATIN CAPITAL LETTER C WITH ACUTE */ 0x0106],\n  KeyD: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049, /* LATIN SMALL LETTER L WITH STROKE */ 0x0142, /* LATIN CAPITAL LETTER L WITH STROKE */ 0x0141],\n  KeyF: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045, /* LATIN SMALL LETTER E WITH OGONEK */ 0x0119, /* LATIN CAPITAL LETTER E WITH OGONEK */ 0x0118],\n  KeyG: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e, /* LATIN SMALL LETTER N WITH ACUTE */ 0x0144, /* LATIN CAPITAL LETTER N WITH ACUTE */ 0x0143],\n  KeyH: [/* FULL STOP */ 0x002e, /* COLON */ 0x003a, /* EXCLAMATION MARK */ 0x0021],\n  KeyJ: [/* COMMA */ 0x002c, /* SEMICOLON */ 0x003b, /* QUESTION MARK */ 0x003f],\n  KeyK: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyL: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052, /* LATIN SMALL LETTER Z WITH ACUTE */ 0x017a, /* LATIN CAPITAL LETTER Z WITH ACUTE */ 0x0179],\n  Semicolon: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041, /* LATIN SMALL LETTER A WITH OGONEK */ 0x0105, /* LATIN CAPITAL LETTER A WITH OGONEK */ 0x0104],\n  Quote: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a, /* LATIN SMALL LETTER Z WITH DOT ABOVE */ 0x017c, /* LATIN CAPITAL LETTER Z WITH DOT ABOVE */ 0x017b],\n  IntlBackslash: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  KeyZ: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058],\n  KeyX: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056, /* LESS-THAN SIGN */ 0x003c],\n  KeyC: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055, /* GREATER-THAN SIGN */ 0x003e],\n  KeyV: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d],\n  KeyB: [/* SOLIDUS */ 0x002f, /* LESS-THAN SIGN */ 0x003c],\n  KeyN: [/* APOSTROPHE */ 0x0027, /* QUOTATION MARK */ 0x0022, /* LOW LINE */ 0x005f],\n  KeyM: [/* REVERSE SOLIDUS */ 0x005c, /* GREATER-THAN SIGN */ 0x003e],\n  Comma: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  Period: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  Slash: [/* FULL STOP */ 0x002e, /* FULL STOP */ 0x002e],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_PL_PL: CharacterDict = {\n  Backquote: [/* GRAVE ACCENT */ 0x0060, { dead: /* COMBINING TILDE */ 0x0303 }],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* COMMERCIAL AT */ 0x0040],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* NUMBER SIGN */ 0x0023],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* DOLLAR SIGN */ 0x0024],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* CIRCUMFLEX ACCENT */ 0x005e],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* AMPERSAND */ 0x0026],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* ASTERISK */ 0x002a],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* LEFT PARENTHESIS */ 0x0028],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* RIGHT PARENTHESIS */ 0x0029],\n  Minus: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f],\n  Equal: [/* EQUALS SIGN */ 0x003d, /* PLUS SIGN */ 0x002b],\n  KeyQ: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051],\n  KeyW: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057],\n  KeyE: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045, /* LATIN SMALL LETTER E WITH OGONEK */ 0x0119, /* LATIN CAPITAL LETTER E WITH OGONEK */ 0x0118],\n  KeyR: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  KeyT: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyY: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  KeyU: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055, /* EURO SIGN */ 0x20ac],\n  KeyI: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049],\n  KeyO: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f, /* LATIN SMALL LETTER O WITH ACUTE */ 0x00f3, /* LATIN CAPITAL LETTER O WITH ACUTE */ 0x00d3],\n  KeyP: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  BracketLeft: [/* LEFT SQUARE BRACKET */ 0x005b, /* LEFT CURLY BRACKET */ 0x007b],\n  BracketRight: [/* RIGHT SQUARE BRACKET */ 0x005d, /* RIGHT CURLY BRACKET */ 0x007d],\n  Backslash: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  KeyA: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041, /* LATIN SMALL LETTER A WITH OGONEK */ 0x0105, /* LATIN CAPITAL LETTER A WITH OGONEK */ 0x0104],\n  KeyS: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053, /* LATIN SMALL LETTER S WITH ACUTE */ 0x015b, /* LATIN CAPITAL LETTER S WITH ACUTE */ 0x015a],\n  KeyD: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyF: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  KeyG: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  KeyH: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  KeyJ: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  KeyK: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  KeyL: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c, /* LATIN SMALL LETTER L WITH STROKE */ 0x0142, /* LATIN CAPITAL LETTER L WITH STROKE */ 0x0141],\n  Semicolon: [/* SEMICOLON */ 0x003b, /* COLON */ 0x003a],\n  Quote: [/* APOSTROPHE */ 0x0027, /* QUOTATION MARK */ 0x0022],\n  IntlBackslash: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  KeyZ: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a, /* LATIN SMALL LETTER Z WITH DOT ABOVE */ 0x017c, /* LATIN CAPITAL LETTER Z WITH DOT ABOVE */ 0x017b],\n  KeyX: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058, /* LATIN SMALL LETTER Z WITH ACUTE */ 0x017a, /* LATIN CAPITAL LETTER Z WITH ACUTE */ 0x0179],\n  KeyC: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043, /* LATIN SMALL LETTER C WITH ACUTE */ 0x0107, /* LATIN CAPITAL LETTER C WITH ACUTE */ 0x0106],\n  KeyV: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  KeyB: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  KeyN: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e, /* LATIN SMALL LETTER N WITH ACUTE */ 0x0144, /* LATIN CAPITAL LETTER N WITH ACUTE */ 0x0143],\n  KeyM: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d],\n  Comma: [/* COMMA */ 0x002c, /* LESS-THAN SIGN */ 0x003c],\n  Period: [/* FULL STOP */ 0x002e, /* GREATER-THAN SIGN */ 0x003e],\n  Slash: [/* SOLIDUS */ 0x002f, /* QUESTION MARK */ 0x003f],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_PT_BR: CharacterDict = {\n  Backquote: [/* APOSTROPHE */ 0x0027, /* QUOTATION MARK */ 0x0022],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021, /* SUPERSCRIPT ONE */ 0x00b9],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* COMMERCIAL AT */ 0x0040, /* SUPERSCRIPT TWO */ 0x00b2],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* NUMBER SIGN */ 0x0023, /* SUPERSCRIPT THREE */ 0x00b3],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* DOLLAR SIGN */ 0x0024, /* POUND SIGN */ 0x00a3],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025, /* CENT SIGN */ 0x00a2],\n  Digit6: [/* DIGIT SIX */ 0x0036, { dead: /* COMBINING DIAERESIS */ 0x0308 }, /* NOT SIGN */ 0x00ac],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* AMPERSAND */ 0x0026],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* ASTERISK */ 0x002a],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* LEFT PARENTHESIS */ 0x0028],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* RIGHT PARENTHESIS */ 0x0029],\n  Minus: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f],\n  Equal: [/* EQUALS SIGN */ 0x003d, /* PLUS SIGN */ 0x002b, /* SECTION SIGN */ 0x00a7],\n  KeyQ: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051, /* SOLIDUS */ 0x002f],\n  KeyW: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057, /* QUESTION MARK */ 0x003f],\n  KeyE: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045, /* DEGREE SIGN */ 0x00b0],\n  KeyR: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  KeyT: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyY: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  KeyU: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055],\n  KeyI: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049],\n  KeyO: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  KeyP: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  BracketLeft: [{ dead: /* COMBINING ACUTE ACCENT */ 0x0301 }, { dead: /* COMBINING GRAVE ACCENT */ 0x0300 }],\n  BracketRight: [/* LEFT SQUARE BRACKET */ 0x005b, /* LEFT CURLY BRACKET */ 0x007b, /* FEMININE ORDINAL INDICATOR */ 0x00aa],\n  Backslash: [/* RIGHT SQUARE BRACKET */ 0x005d, /* RIGHT CURLY BRACKET */ 0x007d, /* MASCULINE ORDINAL INDICATOR */ 0x00ba],\n  KeyA: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041],\n  KeyS: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053],\n  KeyD: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyF: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  KeyG: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  KeyH: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  KeyJ: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  KeyK: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  KeyL: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  Semicolon: [/* LATIN SMALL LETTER C WITH CEDILLA */ 0x00e7, /* LATIN CAPITAL LETTER C WITH CEDILLA */ 0x00c7],\n  Quote: [{ dead: /* COMBINING TILDE */ 0x0303 }, { dead: /* COMBINING CIRCUMFLEX ACCENT */ 0x0302 }],\n  IntlBackslash: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  KeyZ: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  KeyX: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058],\n  KeyC: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043, /* CRUZEIRO SIGN */ 0x20a2],\n  KeyV: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  KeyB: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  KeyN: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e],\n  KeyM: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d],\n  Comma: [/* COMMA */ 0x002c, /* LESS-THAN SIGN */ 0x003c],\n  Period: [/* FULL STOP */ 0x002e, /* GREATER-THAN SIGN */ 0x003e],\n  Slash: [/* SEMICOLON */ 0x003b, /* COLON */ 0x003a],\n  IntlRo: [/* SOLIDUS */ 0x002f, /* QUESTION MARK */ 0x003f, /* DEGREE SIGN */ 0x00b0],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_PT_PT: CharacterDict = {\n  Backquote: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* QUOTATION MARK */ 0x0022, /* COMMERCIAL AT */ 0x0040],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* NUMBER SIGN */ 0x0023, /* POUND SIGN */ 0x00a3],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* DOLLAR SIGN */ 0x0024, /* SECTION SIGN */ 0x00a7],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025, /* EURO SIGN */ 0x20ac],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* AMPERSAND */ 0x0026],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* SOLIDUS */ 0x002f, /* LEFT CURLY BRACKET */ 0x007b],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* LEFT PARENTHESIS */ 0x0028, /* LEFT SQUARE BRACKET */ 0x005b],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* RIGHT PARENTHESIS */ 0x0029, /* RIGHT SQUARE BRACKET */ 0x005d],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* EQUALS SIGN */ 0x003d, /* RIGHT CURLY BRACKET */ 0x007d],\n  Minus: [/* APOSTROPHE */ 0x0027, /* QUESTION MARK */ 0x003f],\n  Equal: [/* LEFT-POINTING DOUBLE ANGLE QUOTATION MARK */ 0x00ab, /* RIGHT-POINTING DOUBLE ANGLE QUOTATION MARK */ 0x00bb],\n  KeyQ: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051],\n  KeyW: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057],\n  KeyE: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045, /* EURO SIGN */ 0x20ac],\n  KeyR: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  KeyT: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyY: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  KeyU: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055],\n  KeyI: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049],\n  KeyO: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  KeyP: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  BracketLeft: [/* PLUS SIGN */ 0x002b, /* ASTERISK */ 0x002a, { dead: /* COMBINING DIAERESIS */ 0x0308 }],\n  BracketRight: [{ dead: /* COMBINING ACUTE ACCENT */ 0x0301 }, { dead: /* COMBINING GRAVE ACCENT */ 0x0300 }, /* RIGHT SQUARE BRACKET */ 0x005d],\n  Backslash: [{ dead: /* COMBINING TILDE */ 0x0303 }, { dead: /* COMBINING CIRCUMFLEX ACCENT */ 0x0302 }],\n  KeyA: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041],\n  KeyS: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053],\n  KeyD: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyF: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  KeyG: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  KeyH: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  KeyJ: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  KeyK: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  KeyL: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  Semicolon: [/* LATIN SMALL LETTER C WITH CEDILLA */ 0x00e7, /* LATIN CAPITAL LETTER C WITH CEDILLA */ 0x00c7],\n  Quote: [/* MASCULINE ORDINAL INDICATOR */ 0x00ba, /* FEMININE ORDINAL INDICATOR */ 0x00aa],\n  IntlBackslash: [/* LESS-THAN SIGN */ 0x003c, /* GREATER-THAN SIGN */ 0x003e],\n  KeyZ: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  KeyX: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058],\n  KeyC: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043],\n  KeyV: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  KeyB: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  KeyN: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e],\n  KeyM: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d],\n  Comma: [/* COMMA */ 0x002c, /* SEMICOLON */ 0x003b],\n  Period: [/* FULL STOP */ 0x002e, /* COLON */ 0x003a],\n  Slash: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_RO_RO: CharacterDict = {\n  Backquote: [/* DOUBLE LOW-9 QUOTATION MARK */ 0x201e, /* RIGHT DOUBLE QUOTATION MARK */ 0x201d, /* GRAVE ACCENT */ 0x0060, /* TILDE */ 0x007e],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021, { dead: /* COMBINING TILDE */ 0x0303 }],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* COMMERCIAL AT */ 0x0040, { dead: /* COMBINING CARON */ 0x030c }],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* NUMBER SIGN */ 0x0023, { dead: /* COMBINING CIRCUMFLEX ACCENT */ 0x0302 }],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* DOLLAR SIGN */ 0x0024, { dead: /* COMBINING BREVE */ 0x0306 }],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025, { dead: /* COMBINING RING ABOVE */ 0x030a }],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* CIRCUMFLEX ACCENT */ 0x005e, { dead: /* COMBINING OGONEK */ 0x0328 }],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* AMPERSAND */ 0x0026, { dead: /* COMBINING GRAVE ACCENT */ 0x0300 }],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* ASTERISK */ 0x002a, { dead: /* COMBINING DOT ABOVE */ 0x0307 }],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* LEFT PARENTHESIS */ 0x0028, { dead: /* COMBINING ACUTE ACCENT */ 0x0301 }],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* RIGHT PARENTHESIS */ 0x0029, { dead: /* COMBINING DOUBLE ACUTE ACCENT */ 0x030b }],\n  Minus: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f, { dead: /* COMBINING DIAERESIS */ 0x0308 }, /* EN DASH */ 0x2013],\n  Equal: [/* EQUALS SIGN */ 0x003d, /* PLUS SIGN */ 0x002b, { dead: /* COMBINING CEDILLA */ 0x0327 }, /* PLUS-MINUS SIGN */ 0x00b1],\n  KeyQ: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051],\n  KeyW: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057],\n  KeyE: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045, /* EURO SIGN */ 0x20ac],\n  KeyR: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  KeyT: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyY: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  KeyU: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055],\n  KeyI: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049],\n  KeyO: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  KeyP: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050, /* SECTION SIGN */ 0x00a7],\n  BracketLeft: [/* LATIN SMALL LETTER A WITH BREVE */ 0x0103, /* LATIN CAPITAL LETTER A WITH BREVE */ 0x0102, /* LEFT SQUARE BRACKET */ 0x005b, /* LEFT CURLY BRACKET */ 0x007b],\n  BracketRight: [/* LATIN SMALL LETTER I WITH CIRCUMFLEX */ 0x00ee, /* LATIN CAPITAL LETTER I WITH CIRCUMFLEX */ 0x00ce, /* RIGHT SQUARE BRACKET */ 0x005d, /* RIGHT CURLY BRACKET */ 0x007d],\n  Backslash: [/* LATIN SMALL LETTER A WITH CIRCUMFLEX */ 0x00e2, /* LATIN CAPITAL LETTER A WITH CIRCUMFLEX */ 0x00c2, /* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  KeyA: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041],\n  KeyS: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053, /* LATIN SMALL LETTER SHARP S */ 0x00df],\n  KeyD: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044, /* LATIN SMALL LETTER D WITH STROKE */ 0x0111, /* LATIN CAPITAL LETTER D WITH STROKE */ 0x0110],\n  KeyF: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  KeyG: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  KeyH: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  KeyJ: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  KeyK: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  KeyL: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c, /* LATIN SMALL LETTER L WITH STROKE */ 0x0142, /* LATIN CAPITAL LETTER L WITH STROKE */ 0x0141],\n  Semicolon: [/* LATIN SMALL LETTER S WITH COMMA BELOW */ 0x0219, /* LATIN CAPITAL LETTER S WITH COMMA BELOW */ 0x0218, /* SEMICOLON */ 0x003b, /* COLON */ 0x003a],\n  Quote: [/* LATIN SMALL LETTER T WITH COMMA BELOW */ 0x021b, /* LATIN CAPITAL LETTER T WITH COMMA BELOW */ 0x021a, /* APOSTROPHE */ 0x0027, /* QUOTATION MARK */ 0x0022],\n  IntlBackslash: [/* REVERSE SOLIDUS */ 0x005c, /* VERTICAL LINE */ 0x007c],\n  KeyZ: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  KeyX: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058],\n  KeyC: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043, /* COPYRIGHT SIGN */ 0x00a9],\n  KeyV: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  KeyB: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  KeyN: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e],\n  KeyM: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d],\n  Comma: [/* COMMA */ 0x002c, /* SEMICOLON */ 0x003b, /* LESS-THAN SIGN */ 0x003c, /* LEFT-POINTING DOUBLE ANGLE QUOTATION MARK */ 0x00ab],\n  Period: [/* FULL STOP */ 0x002e, /* COLON */ 0x003a, /* GREATER-THAN SIGN */ 0x003e, /* RIGHT-POINTING DOUBLE ANGLE QUOTATION MARK */ 0x00bb],\n  Slash: [/* SOLIDUS */ 0x002f, /* QUESTION MARK */ 0x003f],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_RU_RU: CharacterDict = {\n  Backquote: [/* CYRILLIC SMALL LETTER IO */ 0x0451, /* CYRILLIC CAPITAL LETTER IO */ 0x0401],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* QUOTATION MARK */ 0x0022],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* NUMERO SIGN */ 0x2116],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* SEMICOLON */ 0x003b],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* COLON */ 0x003a],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* QUESTION MARK */ 0x003f],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* ASTERISK */ 0x002a, /* RUBLE SIGN */ 0x20bd],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* LEFT PARENTHESIS */ 0x0028],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* RIGHT PARENTHESIS */ 0x0029],\n  Minus: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f],\n  Equal: [/* EQUALS SIGN */ 0x003d, /* PLUS SIGN */ 0x002b],\n  KeyQ: [/* CYRILLIC SMALL LETTER SHORT I */ 0x0439, /* CYRILLIC CAPITAL LETTER SHORT I */ 0x0419],\n  KeyW: [/* CYRILLIC SMALL LETTER TSE */ 0x0446, /* CYRILLIC CAPITAL LETTER TSE */ 0x0426],\n  KeyE: [/* CYRILLIC SMALL LETTER U */ 0x0443, /* CYRILLIC CAPITAL LETTER U */ 0x0423],\n  KeyR: [/* CYRILLIC SMALL LETTER KA */ 0x043a, /* CYRILLIC CAPITAL LETTER KA */ 0x041a],\n  KeyT: [/* CYRILLIC SMALL LETTER IE */ 0x0435, /* CYRILLIC CAPITAL LETTER IE */ 0x0415],\n  KeyY: [/* CYRILLIC SMALL LETTER EN */ 0x043d, /* CYRILLIC CAPITAL LETTER EN */ 0x041d],\n  KeyU: [/* CYRILLIC SMALL LETTER GHE */ 0x0433, /* CYRILLIC CAPITAL LETTER GHE */ 0x0413],\n  KeyI: [/* CYRILLIC SMALL LETTER SHA */ 0x0448, /* CYRILLIC CAPITAL LETTER SHA */ 0x0428],\n  KeyO: [/* CYRILLIC SMALL LETTER SHCHA */ 0x0449, /* CYRILLIC CAPITAL LETTER SHCHA */ 0x0429],\n  KeyP: [/* CYRILLIC SMALL LETTER ZE */ 0x0437, /* CYRILLIC CAPITAL LETTER ZE */ 0x0417],\n  BracketLeft: [/* CYRILLIC SMALL LETTER HA */ 0x0445, /* CYRILLIC CAPITAL LETTER HA */ 0x0425],\n  BracketRight: [/* CYRILLIC SMALL LETTER HARD SIGN */ 0x044a, /* CYRILLIC CAPITAL LETTER HARD SIGN */ 0x042a],\n  Backslash: [/* REVERSE SOLIDUS */ 0x005c, /* SOLIDUS */ 0x002f],\n  KeyA: [/* CYRILLIC SMALL LETTER EF */ 0x0444, /* CYRILLIC CAPITAL LETTER EF */ 0x0424],\n  KeyS: [/* CYRILLIC SMALL LETTER YERU */ 0x044b, /* CYRILLIC CAPITAL LETTER YERU */ 0x042b],\n  KeyD: [/* CYRILLIC SMALL LETTER VE */ 0x0432, /* CYRILLIC CAPITAL LETTER VE */ 0x0412],\n  KeyF: [/* CYRILLIC SMALL LETTER A */ 0x0430, /* CYRILLIC CAPITAL LETTER A */ 0x0410],\n  KeyG: [/* CYRILLIC SMALL LETTER PE */ 0x043f, /* CYRILLIC CAPITAL LETTER PE */ 0x041f],\n  KeyH: [/* CYRILLIC SMALL LETTER ER */ 0x0440, /* CYRILLIC CAPITAL LETTER ER */ 0x0420],\n  KeyJ: [/* CYRILLIC SMALL LETTER O */ 0x043e, /* CYRILLIC CAPITAL LETTER O */ 0x041e],\n  KeyK: [/* CYRILLIC SMALL LETTER EL */ 0x043b, /* CYRILLIC CAPITAL LETTER EL */ 0x041b],\n  KeyL: [/* CYRILLIC SMALL LETTER DE */ 0x0434, /* CYRILLIC CAPITAL LETTER DE */ 0x0414],\n  Semicolon: [/* CYRILLIC SMALL LETTER ZHE */ 0x0436, /* CYRILLIC CAPITAL LETTER ZHE */ 0x0416],\n  Quote: [/* CYRILLIC SMALL LETTER E */ 0x044d, /* CYRILLIC CAPITAL LETTER E */ 0x042d],\n  IntlBackslash: [/* REVERSE SOLIDUS */ 0x005c, /* SOLIDUS */ 0x002f],\n  KeyZ: [/* CYRILLIC SMALL LETTER YA */ 0x044f, /* CYRILLIC CAPITAL LETTER YA */ 0x042f],\n  KeyX: [/* CYRILLIC SMALL LETTER CHE */ 0x0447, /* CYRILLIC CAPITAL LETTER CHE */ 0x0427],\n  KeyC: [/* CYRILLIC SMALL LETTER ES */ 0x0441, /* CYRILLIC CAPITAL LETTER ES */ 0x0421],\n  KeyV: [/* CYRILLIC SMALL LETTER EM */ 0x043c, /* CYRILLIC CAPITAL LETTER EM */ 0x041c],\n  KeyB: [/* CYRILLIC SMALL LETTER I */ 0x0438, /* CYRILLIC CAPITAL LETTER I */ 0x0418],\n  KeyN: [/* CYRILLIC SMALL LETTER TE */ 0x0442, /* CYRILLIC CAPITAL LETTER TE */ 0x0422],\n  KeyM: [/* CYRILLIC SMALL LETTER SOFT SIGN */ 0x044c, /* CYRILLIC CAPITAL LETTER SOFT SIGN */ 0x042c],\n  Comma: [/* CYRILLIC SMALL LETTER BE */ 0x0431, /* CYRILLIC CAPITAL LETTER BE */ 0x0411],\n  Period: [/* CYRILLIC SMALL LETTER YU */ 0x044e, /* CYRILLIC CAPITAL LETTER YU */ 0x042e],\n  Slash: [/* FULL STOP */ 0x002e, /* COMMA */ 0x002c],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_SL_SI: CharacterDict = {\n  Backquote: [{ dead: /* COMBINING CEDILLA */ 0x0327 }, { dead: /* COMBINING DIAERESIS */ 0x0308 }],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021, /* TILDE */ 0x007e],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* QUOTATION MARK */ 0x0022, { dead: /* COMBINING CARON */ 0x030c }],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* NUMBER SIGN */ 0x0023, { dead: /* COMBINING CIRCUMFLEX ACCENT */ 0x0302 }],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* DOLLAR SIGN */ 0x0024, { dead: /* COMBINING BREVE */ 0x0306 }],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025, { dead: /* COMBINING RING ABOVE */ 0x030a }],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* AMPERSAND */ 0x0026, { dead: /* COMBINING OGONEK */ 0x0328 }],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* SOLIDUS */ 0x002f, /* GRAVE ACCENT */ 0x0060],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* LEFT PARENTHESIS */ 0x0028, { dead: /* COMBINING DOT ABOVE */ 0x0307 }],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* RIGHT PARENTHESIS */ 0x0029, { dead: /* COMBINING ACUTE ACCENT */ 0x0301 }],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* EQUALS SIGN */ 0x003d, { dead: /* COMBINING DOUBLE ACUTE ACCENT */ 0x030b }],\n  Minus: [/* APOSTROPHE */ 0x0027, /* QUESTION MARK */ 0x003f, { dead: /* COMBINING DIAERESIS */ 0x0308 }],\n  Equal: [/* PLUS SIGN */ 0x002b, /* ASTERISK */ 0x002a, { dead: /* COMBINING CEDILLA */ 0x0327 }],\n  KeyQ: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051, /* REVERSE SOLIDUS */ 0x005c],\n  KeyW: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057, /* VERTICAL LINE */ 0x007c],\n  KeyE: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045, /* EURO SIGN */ 0x20ac],\n  KeyR: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  KeyT: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyY: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  KeyU: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055],\n  KeyI: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049],\n  KeyO: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  KeyP: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  BracketLeft: [/* LATIN SMALL LETTER S WITH CARON */ 0x0161, /* LATIN CAPITAL LETTER S WITH CARON */ 0x0160, /* DIVISION SIGN */ 0x00f7],\n  BracketRight: [/* LATIN SMALL LETTER D WITH STROKE */ 0x0111, /* LATIN CAPITAL LETTER D WITH STROKE */ 0x0110, /* MULTIPLICATION SIGN */ 0x00d7],\n  Backslash: [/* LATIN SMALL LETTER Z WITH CARON */ 0x017e, /* LATIN CAPITAL LETTER Z WITH CARON */ 0x017d, /* CURRENCY SIGN */ 0x00a4],\n  KeyA: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041],\n  KeyS: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053],\n  KeyD: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyF: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046, /* LEFT SQUARE BRACKET */ 0x005b],\n  KeyG: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047, /* RIGHT SQUARE BRACKET */ 0x005d],\n  KeyH: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  KeyJ: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  KeyK: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b, /* LATIN SMALL LETTER L WITH STROKE */ 0x0142],\n  KeyL: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c, /* LATIN CAPITAL LETTER L WITH STROKE */ 0x0141],\n  Semicolon: [/* LATIN SMALL LETTER C WITH CARON */ 0x010d, /* LATIN CAPITAL LETTER C WITH CARON */ 0x010c],\n  Quote: [/* LATIN SMALL LETTER C WITH ACUTE */ 0x0107, /* LATIN CAPITAL LETTER C WITH ACUTE */ 0x0106, /* LATIN SMALL LETTER SHARP S */ 0x00df],\n  IntlBackslash: [/* LESS-THAN SIGN */ 0x003c, /* GREATER-THAN SIGN */ 0x003e],\n  KeyZ: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  KeyX: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058],\n  KeyC: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043],\n  KeyV: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056, /* COMMERCIAL AT */ 0x0040],\n  KeyB: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042, /* LEFT CURLY BRACKET */ 0x007b],\n  KeyN: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e, /* RIGHT CURLY BRACKET */ 0x007d],\n  KeyM: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d, /* SECTION SIGN */ 0x00a7],\n  Comma: [/* COMMA */ 0x002c, /* SEMICOLON */ 0x003b, /* LESS-THAN SIGN */ 0x003c],\n  Period: [/* FULL STOP */ 0x002e, /* COLON */ 0x003a, /* GREATER-THAN SIGN */ 0x003e],\n  Slash: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_SV_SE: CharacterDict = {\n  Backquote: [/* SECTION SIGN */ 0x00a7, /* VULGAR FRACTION ONE HALF */ 0x00bd],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* QUOTATION MARK */ 0x0022, /* COMMERCIAL AT */ 0x0040],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* NUMBER SIGN */ 0x0023, /* POUND SIGN */ 0x00a3],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* CURRENCY SIGN */ 0x00a4, /* DOLLAR SIGN */ 0x0024],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025, /* EURO SIGN */ 0x20ac],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* AMPERSAND */ 0x0026],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* SOLIDUS */ 0x002f, /* LEFT CURLY BRACKET */ 0x007b],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* LEFT PARENTHESIS */ 0x0028, /* LEFT SQUARE BRACKET */ 0x005b],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* RIGHT PARENTHESIS */ 0x0029, /* RIGHT SQUARE BRACKET */ 0x005d],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* EQUALS SIGN */ 0x003d, /* RIGHT CURLY BRACKET */ 0x007d],\n  Minus: [/* PLUS SIGN */ 0x002b, /* QUESTION MARK */ 0x003f, /* REVERSE SOLIDUS */ 0x005c],\n  Equal: [{ dead: /* COMBINING ACUTE ACCENT */ 0x0301 }, { dead: /* COMBINING GRAVE ACCENT */ 0x0300 }],\n  KeyQ: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051],\n  KeyW: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057],\n  KeyE: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045, /* EURO SIGN */ 0x20ac],\n  KeyR: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  KeyT: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054],\n  KeyY: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  KeyU: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055],\n  KeyI: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I */ 0x0049],\n  KeyO: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  KeyP: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  BracketLeft: [/* LATIN SMALL LETTER A WITH RING ABOVE */ 0x00e5, /* LATIN CAPITAL LETTER A WITH RING ABOVE */ 0x00c5],\n  BracketRight: [{ dead: /* COMBINING DIAERESIS */ 0x0308 }, { dead: /* COMBINING CIRCUMFLEX ACCENT */ 0x0302 }, { dead: /* COMBINING TILDE */ 0x0303 }],\n  Backslash: [/* APOSTROPHE */ 0x0027, /* ASTERISK */ 0x002a],\n  KeyA: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041],\n  KeyS: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053],\n  KeyD: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyF: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  KeyG: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  KeyH: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  KeyJ: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  KeyK: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  KeyL: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  Semicolon: [/* LATIN SMALL LETTER O WITH DIAERESIS */ 0x00f6, /* LATIN CAPITAL LETTER O WITH DIAERESIS */ 0x00d6],\n  Quote: [/* LATIN SMALL LETTER A WITH DIAERESIS */ 0x00e4, /* LATIN CAPITAL LETTER A WITH DIAERESIS */ 0x00c4],\n  IntlBackslash: [/* LESS-THAN SIGN */ 0x003c, /* GREATER-THAN SIGN */ 0x003e, /* VERTICAL LINE */ 0x007c],\n  KeyZ: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  KeyX: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058],\n  KeyC: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043],\n  KeyV: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  KeyB: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  KeyN: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e],\n  KeyM: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d, /* MICRO SIGN */ 0x00b5],\n  Comma: [/* COMMA */ 0x002c, /* SEMICOLON */ 0x003b],\n  Period: [/* FULL STOP */ 0x002e, /* COLON */ 0x003a],\n  Slash: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_TH_TH_MAN: CharacterDict = {\n  Backquote: [/* GRAVE ACCENT */ 0x0060, /* TILDE */ 0x007e],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021, /* THAI DIGIT ONE */ 0x0e51],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* COMMERCIAL AT */ 0x0040, /* THAI DIGIT TWO */ 0x0e52],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* NUMBER SIGN */ 0x0023, /* THAI DIGIT THREE */ 0x0e53],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* DOLLAR SIGN */ 0x0024, /* THAI DIGIT FOUR */ 0x0e54],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025, /* THAI DIGIT FIVE */ 0x0e55],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* CIRCUMFLEX ACCENT */ 0x005e, /* THAI DIGIT SIX */ 0x0e56],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* AMPERSAND */ 0x0026, /* THAI DIGIT SEVEN */ 0x0e57],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* ASTERISK */ 0x002a, /* THAI DIGIT EIGHT */ 0x0e58],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* LEFT PARENTHESIS */ 0x0028, /* THAI DIGIT NINE */ 0x0e59],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* RIGHT PARENTHESIS */ 0x0029, /* THAI DIGIT ZERO */ 0x0e50],\n  Minus: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f, /* DIVISION SIGN */ 0x00f7],\n  Equal: [/* EQUALS SIGN */ 0x003d, /* PLUS SIGN */ 0x002b, /* MULTIPLICATION SIGN */ 0x00d7],\n  KeyQ: [/* THAI CHARACTER SARA AI MAIMUAN */ 0x0e43, /* THAI CHARACTER THO PHUTHAO */ 0x0e12],\n  KeyW: [/* THAI CHARACTER TO TAO */ 0x0e15, /* THAI CHARACTER TO PATAK */ 0x0e0f],\n  KeyE: [/* THAI CHARACTER HO HIP */ 0x0e2b, /* THAI CHARACTER SO SO */ 0x0e0b],\n  KeyR: [/* THAI CHARACTER LO LING */ 0x0e25, /* THAI CHARACTER YO YING */ 0x0e0d],\n  KeyT: [/* THAI CHARACTER SO SUA */ 0x0e2a, /* THAI CHARACTER FO FAN */ 0x0e1f],\n  KeyY: [/* THAI CHARACTER PO PLA */ 0x0e1b, /* THAI CHARACTER CHO CHING */ 0x0e09],\n  KeyU: [/* THAI CHARACTER MAI HAN-AKAT */ 0x0e31, /* THAI CHARACTER SARA UE */ 0x0e36],\n  KeyI: [/* THAI CHARACTER KO KAI */ 0x0e01, /* THAI CHARACTER THO THONG */ 0x0e18],\n  KeyO: [/* THAI CHARACTER SARA I */ 0x0e34, /* THAI CHARACTER THO THAN */ 0x0e10],\n  KeyP: [/* THAI CHARACTER BO BAIMAI */ 0x0e1a, /* THAI CHARACTER DO CHADA */ 0x0e0e],\n  BracketLeft: [/* THAI CHARACTER MAITAIKHU */ 0x0e47, /* THAI CHARACTER KHO RAKHANG */ 0x0e06],\n  BracketRight: [/* THAI CHARACTER LO CHULA */ 0x0e2c, /* THAI CHARACTER THO NANGMONTHO */ 0x0e11],\n  Backslash: [/* THAI CHARACTER PAIYANNOI */ 0x0e2f, /* THAI CHARACTER CHO CHOE */ 0x0e0c],\n  KeyA: [/* THAI CHARACTER NGO NGU */ 0x0e07, /* THAI CHARACTER SO RUSI */ 0x0e29],\n  KeyS: [/* THAI CHARACTER SARA E */ 0x0e40, /* THAI CHARACTER THO THUNG */ 0x0e16],\n  KeyD: [/* THAI CHARACTER RO RUA */ 0x0e23, /* THAI CHARACTER SARA AE */ 0x0e41],\n  KeyF: [/* THAI CHARACTER NO NU */ 0x0e19, /* THAI CHARACTER CHO CHANG */ 0x0e0a],\n  KeyG: [/* THAI CHARACTER MO MA */ 0x0e21, /* THAI CHARACTER PHO PHAN */ 0x0e1e],\n  KeyH: [/* THAI CHARACTER O ANG */ 0x0e2d, /* THAI CHARACTER PHO PHUNG */ 0x0e1c],\n  KeyJ: [/* THAI CHARACTER SARA AA */ 0x0e32, /* THAI CHARACTER SARA AM */ 0x0e33, /* THAI CHARACTER LAKKHANGYAO */ 0x0e45],\n  KeyK: [/* THAI CHARACTER MAI EK */ 0x0e48, /* THAI CHARACTER KHO KHAI */ 0x0e02, /* THAI CHARACTER KHO KHUAT */ 0x0e03],\n  KeyL: [/* THAI CHARACTER MAI THO */ 0x0e49, /* THAI CHARACTER SARA O */ 0x0e42],\n  Semicolon: [/* THAI CHARACTER WO WAEN */ 0x0e27, /* THAI CHARACTER PHO SAMPHAO */ 0x0e20],\n  Quote: [/* THAI CHARACTER SARA UEE */ 0x0e37, /* QUOTATION MARK */ 0x0022],\n  KeyZ: [/* THAI CHARACTER SARA U */ 0x0e38, /* THAI CHARACTER RU */ 0x0e24, /* THAI CHARACTER LU */ 0x0e26],\n  KeyX: [/* THAI CHARACTER SARA AI MAIMALAI */ 0x0e44, /* THAI CHARACTER FO FA */ 0x0e1d],\n  KeyC: [/* THAI CHARACTER THO THAHAN */ 0x0e17, /* THAI CHARACTER MAIYAMOK */ 0x0e46],\n  KeyV: [/* THAI CHARACTER YO YAK */ 0x0e22, /* THAI CHARACTER NO NEN */ 0x0e13],\n  KeyB: [/* THAI CHARACTER CHO CHAN */ 0x0e08, /* THAI CHARACTER MAI TRI */ 0x0e4a],\n  KeyN: [/* THAI CHARACTER KHO KHWAI */ 0x0e04, /* THAI CHARACTER MAI CHATTAWA */ 0x0e4b, /* THAI CHARACTER KHO KHON */ 0x0e05],\n  KeyM: [/* THAI CHARACTER SARA II */ 0x0e35, /* THAI CHARACTER THANTHAKHAT */ 0x0e4c],\n  Comma: [/* THAI CHARACTER DO DEK */ 0x0e14, /* THAI CHARACTER SO SALA */ 0x0e28],\n  Period: [/* THAI CHARACTER SARA A */ 0x0e30, /* THAI CHARACTER HO NOKHUK */ 0x0e2e],\n  Slash: [/* THAI CHARACTER SARA UU */ 0x0e39, /* QUESTION MARK */ 0x003f],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_TH_TH_PAT: CharacterDict = {\n  Backquote: [/* LOW LINE */ 0x005f, /* THAI CURRENCY SYMBOL BAHT */ 0x0e3f],\n  Digit1: [/* EQUALS SIGN */ 0x003d, /* PLUS SIGN */ 0x002b],\n  Digit2: [/* THAI DIGIT TWO */ 0x0e52, /* QUOTATION MARK */ 0x0022],\n  Digit3: [/* THAI DIGIT THREE */ 0x0e53, /* SOLIDUS */ 0x002f],\n  Digit4: [/* THAI DIGIT FOUR */ 0x0e54, /* COMMA */ 0x002c],\n  Digit5: [/* THAI DIGIT FIVE */ 0x0e55, /* QUESTION MARK */ 0x003f],\n  Digit6: [/* THAI CHARACTER SARA UU */ 0x0e39, /* THAI CHARACTER SARA U */ 0x0e38],\n  Digit7: [/* THAI DIGIT SEVEN */ 0x0e57, /* LOW LINE */ 0x005f],\n  Digit8: [/* THAI DIGIT EIGHT */ 0x0e58, /* FULL STOP */ 0x002e],\n  Digit9: [/* THAI DIGIT NINE */ 0x0e59, /* LEFT PARENTHESIS */ 0x0028],\n  Digit0: [/* THAI DIGIT ZERO */ 0x0e50, /* RIGHT PARENTHESIS */ 0x0029],\n  Minus: [/* THAI DIGIT ONE */ 0x0e51, /* HYPHEN-MINUS */ 0x002d],\n  Equal: [/* THAI DIGIT SIX */ 0x0e56, /* PERCENT SIGN */ 0x0025],\n  KeyQ: [/* THAI CHARACTER MAITAIKHU */ 0x0e47, /* THAI CHARACTER MAI TRI */ 0x0e4a],\n  KeyW: [/* THAI CHARACTER TO TAO */ 0x0e15, /* THAI CHARACTER RU */ 0x0e24],\n  KeyE: [/* THAI CHARACTER YO YAK */ 0x0e22, /* THAI CHARACTER MAIYAMOK */ 0x0e46],\n  KeyR: [/* THAI CHARACTER O ANG */ 0x0e2d, /* THAI CHARACTER YO YING */ 0x0e0d],\n  KeyT: [/* THAI CHARACTER RO RUA */ 0x0e23, /* THAI CHARACTER SO RUSI */ 0x0e29],\n  KeyY: [/* THAI CHARACTER MAI EK */ 0x0e48, /* THAI CHARACTER SARA UE */ 0x0e36],\n  KeyU: [/* THAI CHARACTER DO DEK */ 0x0e14, /* THAI CHARACTER FO FA */ 0x0e1d],\n  KeyI: [/* THAI CHARACTER MO MA */ 0x0e21, /* THAI CHARACTER SO SO */ 0x0e0b],\n  KeyO: [/* THAI CHARACTER WO WAEN */ 0x0e27, /* THAI CHARACTER THO THUNG */ 0x0e16],\n  KeyP: [/* THAI CHARACTER SARA AE */ 0x0e41, /* THAI CHARACTER THO PHUTHAO */ 0x0e12],\n  BracketLeft: [/* THAI CHARACTER SARA AI MAIMUAN */ 0x0e43, /* THAI CHARACTER PAIYANNOI */ 0x0e2f],\n  BracketRight: [/* THAI CHARACTER CHO CHOE */ 0x0e0c, /* THAI CHARACTER LU */ 0x0e26],\n  Backslash: [/* Private Use */ 0xf8c7, /* THAI CHARACTER NIKHAHIT */ 0x0e4d],\n  KeyA: [/* THAI CHARACTER MAI THO */ 0x0e49, /* THAI CHARACTER MAI CHATTAWA */ 0x0e4b],\n  KeyS: [/* THAI CHARACTER THO THAHAN */ 0x0e17, /* THAI CHARACTER THO THONG */ 0x0e18],\n  KeyD: [/* THAI CHARACTER NGO NGU */ 0x0e07, /* THAI CHARACTER SARA AM */ 0x0e33],\n  KeyF: [/* THAI CHARACTER KO KAI */ 0x0e01, /* THAI CHARACTER NO NEN */ 0x0e13],\n  KeyG: [/* THAI CHARACTER MAI HAN-AKAT */ 0x0e31, /* THAI CHARACTER THANTHAKHAT */ 0x0e4c],\n  KeyH: [/* THAI CHARACTER SARA II */ 0x0e35, /* THAI CHARACTER SARA UEE */ 0x0e37],\n  KeyJ: [/* THAI CHARACTER SARA AA */ 0x0e32, /* THAI CHARACTER PHO PHUNG */ 0x0e1c],\n  KeyK: [/* THAI CHARACTER NO NU */ 0x0e19, /* THAI CHARACTER CHO CHANG */ 0x0e0a],\n  KeyL: [/* THAI CHARACTER SARA E */ 0x0e40, /* THAI CHARACTER SARA O */ 0x0e42],\n  Semicolon: [/* THAI CHARACTER SARA AI MAIMALAI */ 0x0e44, /* THAI CHARACTER KHO RAKHANG */ 0x0e06],\n  Quote: [/* THAI CHARACTER KHO KHAI */ 0x0e02, /* THAI CHARACTER THO NANGMONTHO */ 0x0e11],\n  IntlBackslash: [/* Private Use */ 0xf8c7, /* THAI CHARACTER NIKHAHIT */ 0x0e4d],\n  KeyZ: [/* THAI CHARACTER BO BAIMAI */ 0x0e1a, /* THAI CHARACTER DO CHADA */ 0x0e0e],\n  KeyX: [/* THAI CHARACTER PO PLA */ 0x0e1b, /* THAI CHARACTER TO PATAK */ 0x0e0f],\n  KeyC: [/* THAI CHARACTER LO LING */ 0x0e25, /* THAI CHARACTER THO THAN */ 0x0e10],\n  KeyV: [/* THAI CHARACTER HO HIP */ 0x0e2b, /* THAI CHARACTER PHO SAMPHAO */ 0x0e20],\n  KeyB: [/* THAI CHARACTER SARA I */ 0x0e34, /* THAI CHARACTER MAI HAN-AKAT */ 0x0e31],\n  KeyN: [/* THAI CHARACTER KHO KHWAI */ 0x0e04, /* THAI CHARACTER SO SALA */ 0x0e28],\n  KeyM: [/* THAI CHARACTER SO SUA */ 0x0e2a, /* THAI CHARACTER HO NOKHUK */ 0x0e2e],\n  Comma: [/* THAI CHARACTER SARA A */ 0x0e30, /* THAI CHARACTER FO FAN */ 0x0e1f],\n  Period: [/* THAI CHARACTER CHO CHAN */ 0x0e08, /* THAI CHARACTER CHO CHING */ 0x0e09],\n  Slash: [/* THAI CHARACTER PHO PHAN */ 0x0e1e, /* THAI CHARACTER LO CHULA */ 0x0e2c],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_TH_TH: CharacterDict = {\n  Backquote: [/* LOW LINE */ 0x005f, /* PERCENT SIGN */ 0x0025],\n  Digit1: [/* THAI CHARACTER LAKKHANGYAO */ 0x0e45, /* PLUS SIGN */ 0x002b],\n  Digit2: [/* SOLIDUS */ 0x002f, /* THAI DIGIT ONE */ 0x0e51],\n  Digit3: [/* HYPHEN-MINUS */ 0x002d, /* THAI DIGIT TWO */ 0x0e52],\n  Digit4: [/* THAI CHARACTER PHO SAMPHAO */ 0x0e20, /* THAI DIGIT THREE */ 0x0e53],\n  Digit5: [/* THAI CHARACTER THO THUNG */ 0x0e16, /* THAI DIGIT FOUR */ 0x0e54],\n  Digit6: [/* THAI CHARACTER SARA U */ 0x0e38, /* THAI CHARACTER SARA UU */ 0x0e39],\n  Digit7: [/* THAI CHARACTER SARA UE */ 0x0e36, /* THAI CURRENCY SYMBOL BAHT */ 0x0e3f],\n  Digit8: [/* THAI CHARACTER KHO KHWAI */ 0x0e04, /* THAI DIGIT FIVE */ 0x0e55],\n  Digit9: [/* THAI CHARACTER TO TAO */ 0x0e15, /* THAI DIGIT SIX */ 0x0e56],\n  Digit0: [/* THAI CHARACTER CHO CHAN */ 0x0e08, /* THAI DIGIT SEVEN */ 0x0e57],\n  Minus: [/* THAI CHARACTER KHO KHAI */ 0x0e02, /* THAI DIGIT EIGHT */ 0x0e58],\n  Equal: [/* THAI CHARACTER CHO CHANG */ 0x0e0a, /* THAI DIGIT NINE */ 0x0e59],\n  KeyQ: [/* THAI CHARACTER MAIYAMOK */ 0x0e46, /* THAI DIGIT ZERO */ 0x0e50],\n  KeyW: [/* THAI CHARACTER SARA AI MAIMALAI */ 0x0e44, /* QUOTATION MARK */ 0x0022],\n  KeyE: [/* THAI CHARACTER SARA AM */ 0x0e33, /* THAI CHARACTER DO CHADA */ 0x0e0e],\n  KeyR: [/* THAI CHARACTER PHO PHAN */ 0x0e1e, /* THAI CHARACTER THO NANGMONTHO */ 0x0e11],\n  KeyT: [/* THAI CHARACTER SARA A */ 0x0e30, /* THAI CHARACTER THO THONG */ 0x0e18],\n  KeyY: [/* THAI CHARACTER MAI HAN-AKAT */ 0x0e31, /* THAI CHARACTER NIKHAHIT */ 0x0e4d],\n  KeyU: [/* THAI CHARACTER SARA II */ 0x0e35, /* THAI CHARACTER MAI TRI */ 0x0e4a],\n  KeyI: [/* THAI CHARACTER RO RUA */ 0x0e23, /* THAI CHARACTER NO NEN */ 0x0e13],\n  KeyO: [/* THAI CHARACTER NO NU */ 0x0e19, /* THAI CHARACTER PAIYANNOI */ 0x0e2f],\n  KeyP: [/* THAI CHARACTER YO YAK */ 0x0e22, /* THAI CHARACTER YO YING */ 0x0e0d],\n  BracketLeft: [/* THAI CHARACTER BO BAIMAI */ 0x0e1a, /* THAI CHARACTER THO THAN */ 0x0e10],\n  BracketRight: [/* THAI CHARACTER LO LING */ 0x0e25, /* COMMA */ 0x002c],\n  Backslash: [/* THAI CHARACTER KHO KHUAT */ 0x0e03, /* THAI CHARACTER KHO KHON */ 0x0e05],\n  KeyA: [/* THAI CHARACTER FO FAN */ 0x0e1f, /* THAI CHARACTER RU */ 0x0e24],\n  KeyS: [/* THAI CHARACTER HO HIP */ 0x0e2b, /* THAI CHARACTER KHO RAKHANG */ 0x0e06],\n  KeyD: [/* THAI CHARACTER KO KAI */ 0x0e01, /* THAI CHARACTER TO PATAK */ 0x0e0f],\n  KeyF: [/* THAI CHARACTER DO DEK */ 0x0e14, /* THAI CHARACTER SARA O */ 0x0e42],\n  KeyG: [/* THAI CHARACTER SARA E */ 0x0e40, /* THAI CHARACTER CHO CHOE */ 0x0e0c],\n  KeyH: [/* THAI CHARACTER MAI THO */ 0x0e49, /* THAI CHARACTER MAITAIKHU */ 0x0e47],\n  KeyJ: [/* THAI CHARACTER MAI EK */ 0x0e48, /* THAI CHARACTER MAI CHATTAWA */ 0x0e4b],\n  KeyK: [/* THAI CHARACTER SARA AA */ 0x0e32, /* THAI CHARACTER SO RUSI */ 0x0e29],\n  KeyL: [/* THAI CHARACTER SO SUA */ 0x0e2a, /* THAI CHARACTER SO SALA */ 0x0e28],\n  Semicolon: [/* THAI CHARACTER WO WAEN */ 0x0e27, /* THAI CHARACTER SO SO */ 0x0e0b],\n  Quote: [/* THAI CHARACTER NGO NGU */ 0x0e07, /* FULL STOP */ 0x002e],\n  IntlBackslash: [/* THAI CHARACTER KHO KHUAT */ 0x0e03, /* THAI CHARACTER KHO KHON */ 0x0e05],\n  KeyZ: [/* THAI CHARACTER PHO PHUNG */ 0x0e1c, /* LEFT PARENTHESIS */ 0x0028],\n  KeyX: [/* THAI CHARACTER PO PLA */ 0x0e1b, /* RIGHT PARENTHESIS */ 0x0029],\n  KeyC: [/* THAI CHARACTER SARA AE */ 0x0e41, /* THAI CHARACTER CHO CHING */ 0x0e09],\n  KeyV: [/* THAI CHARACTER O ANG */ 0x0e2d, /* THAI CHARACTER HO NOKHUK */ 0x0e2e],\n  KeyB: [/* THAI CHARACTER SARA I */ 0x0e34, /* THAI CHARACTER PHINTHU */ 0x0e3a],\n  KeyN: [/* THAI CHARACTER SARA UEE */ 0x0e37, /* THAI CHARACTER THANTHAKHAT */ 0x0e4c],\n  KeyM: [/* THAI CHARACTER THO THAHAN */ 0x0e17, /* QUESTION MARK */ 0x003f],\n  Comma: [/* THAI CHARACTER MO MA */ 0x0e21, /* THAI CHARACTER THO PHUTHAO */ 0x0e12],\n  Period: [/* THAI CHARACTER SARA AI MAIMUAN */ 0x0e43, /* THAI CHARACTER LO CHULA */ 0x0e2c],\n  Slash: [/* THAI CHARACTER FO FA */ 0x0e1d, /* THAI CHARACTER LU */ 0x0e26],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_TR_TR_F: CharacterDict = {\n  Backquote: [/* PLUS SIGN */ 0x002b, /* ASTERISK */ 0x002a, /* NOT SIGN */ 0x00ac],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021, /* SUPERSCRIPT ONE */ 0x00b9, /* INVERTED EXCLAMATION MARK */ 0x00a1],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* QUOTATION MARK */ 0x0022, /* SUPERSCRIPT TWO */ 0x00b2],\n  Digit3: [/* DIGIT THREE */ 0x0033, { dead: /* COMBINING CIRCUMFLEX ACCENT */ 0x0302 }, /* NUMBER SIGN */ 0x0023, /* SUPERSCRIPT THREE */ 0x00b3],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* DOLLAR SIGN */ 0x0024, /* VULGAR FRACTION ONE QUARTER */ 0x00bc, /* CURRENCY SIGN */ 0x00a4],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025, /* VULGAR FRACTION ONE HALF */ 0x00bd],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* AMPERSAND */ 0x0026, /* VULGAR FRACTION THREE QUARTERS */ 0x00be],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* APOSTROPHE */ 0x0027, /* LEFT CURLY BRACKET */ 0x007b],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* LEFT PARENTHESIS */ 0x0028, /* LEFT SQUARE BRACKET */ 0x005b],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* RIGHT PARENTHESIS */ 0x0029, /* RIGHT SQUARE BRACKET */ 0x005d],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* EQUALS SIGN */ 0x003d, /* RIGHT CURLY BRACKET */ 0x007d],\n  Minus: [/* SOLIDUS */ 0x002f, /* QUESTION MARK */ 0x003f, /* REVERSE SOLIDUS */ 0x005c, /* INVERTED QUESTION MARK */ 0x00bf],\n  Equal: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f, /* VERTICAL LINE */ 0x007c],\n  KeyQ: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046, /* COMMERCIAL AT */ 0x0040],\n  KeyW: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  KeyE: [/* LATIN SMALL LETTER G WITH BREVE */ 0x011f, /* LATIN CAPITAL LETTER G WITH BREVE */ 0x011e],\n  KeyR: [/* LATIN SMALL LETTER DOTLESS I */ 0x0131, /* LATIN CAPITAL LETTER I */ 0x0049, /* PILCROW SIGN */ 0x00b6, /* REGISTERED SIGN */ 0x00ae],\n  KeyT: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  KeyY: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044, /* YEN SIGN */ 0x00a5],\n  KeyU: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  KeyI: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e],\n  KeyO: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048, /* LATIN SMALL LETTER O WITH STROKE */ 0x00f8, /* LATIN CAPITAL LETTER O WITH STROKE */ 0x00d8],\n  KeyP: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050, /* POUND SIGN */ 0x00a3],\n  BracketLeft: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051, { dead: /* COMBINING DIAERESIS */ 0x0308 }],\n  BracketRight: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057, { dead: /* COMBINING TILDE */ 0x0303 }],\n  Backslash: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058, { dead: /* COMBINING GRAVE ACCENT */ 0x0300 }],\n  KeyA: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055, /* LATIN SMALL LETTER AE */ 0x00e6, /* LATIN CAPITAL LETTER AE */ 0x00c6],\n  KeyS: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I WITH DOT ABOVE */ 0x0130, /* LATIN SMALL LETTER SHARP S */ 0x00df, /* SECTION SIGN */ 0x00a7],\n  KeyD: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045, /* EURO SIGN */ 0x20ac],\n  KeyF: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041, null, /* FEMININE ORDINAL INDICATOR */ 0x00aa],\n  KeyG: [/* LATIN SMALL LETTER U WITH DIAERESIS */ 0x00fc, /* LATIN CAPITAL LETTER U WITH DIAERESIS */ 0x00dc],\n  KeyH: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054, /* TURKISH LIRA SIGN */ 0x20ba],\n  KeyJ: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  KeyK: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d],\n  KeyL: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  Semicolon: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059, { dead: /* COMBINING ACUTE ACCENT */ 0x0301 }],\n  Quote: [/* LATIN SMALL LETTER S WITH CEDILLA */ 0x015f, /* LATIN CAPITAL LETTER S WITH CEDILLA */ 0x015e],\n  IntlBackslash: [/* LESS-THAN SIGN */ 0x003c, /* GREATER-THAN SIGN */ 0x003e, /* VERTICAL LINE */ 0x007c, /* BROKEN BAR */ 0x00a6],\n  KeyZ: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a, /* LEFT-POINTING DOUBLE ANGLE QUOTATION MARK */ 0x00ab, /* LESS-THAN SIGN */ 0x003c],\n  KeyX: [/* LATIN SMALL LETTER O WITH DIAERESIS */ 0x00f6, /* LATIN CAPITAL LETTER O WITH DIAERESIS */ 0x00d6, /* RIGHT-POINTING DOUBLE ANGLE QUOTATION MARK */ 0x00bb, /* GREATER-THAN SIGN */ 0x003e],\n  KeyC: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056, /* CENT SIGN */ 0x00a2, /* COPYRIGHT SIGN */ 0x00a9],\n  KeyV: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043],\n  KeyB: [/* LATIN SMALL LETTER C WITH CEDILLA */ 0x00e7, /* LATIN CAPITAL LETTER C WITH CEDILLA */ 0x00c7],\n  KeyN: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  KeyM: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053, /* MICRO SIGN */ 0x00b5, /* MASCULINE ORDINAL INDICATOR */ 0x00ba],\n  Comma: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042, /* MULTIPLICATION SIGN */ 0x00d7],\n  Period: [/* FULL STOP */ 0x002e, /* COLON */ 0x003a, /* DIVISION SIGN */ 0x00f7],\n  Slash: [/* COMMA */ 0x002c, /* SEMICOLON */ 0x003b, /* SOFT HYPHEN */ 0x00ad],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_TR_TR_Q: CharacterDict = {\n  Backquote: [/* QUOTATION MARK */ 0x0022, /* LATIN SMALL LETTER E WITH ACUTE */ 0x00e9, /* LESS-THAN SIGN */ 0x003c],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021, /* GREATER-THAN SIGN */ 0x003e],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* APOSTROPHE */ 0x0027, /* POUND SIGN */ 0x00a3],\n  Digit3: [/* DIGIT THREE */ 0x0033, { dead: /* COMBINING CIRCUMFLEX ACCENT */ 0x0302 }, /* NUMBER SIGN */ 0x0023],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* PLUS SIGN */ 0x002b, /* DOLLAR SIGN */ 0x0024],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025, /* VULGAR FRACTION ONE HALF */ 0x00bd],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* AMPERSAND */ 0x0026],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* SOLIDUS */ 0x002f, /* LEFT CURLY BRACKET */ 0x007b],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* LEFT PARENTHESIS */ 0x0028, /* LEFT SQUARE BRACKET */ 0x005b],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* RIGHT PARENTHESIS */ 0x0029, /* RIGHT SQUARE BRACKET */ 0x005d],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* EQUALS SIGN */ 0x003d, /* RIGHT CURLY BRACKET */ 0x007d],\n  Minus: [/* ASTERISK */ 0x002a, /* QUESTION MARK */ 0x003f, /* REVERSE SOLIDUS */ 0x005c],\n  Equal: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f, /* VERTICAL LINE */ 0x007c],\n  KeyQ: [/* LATIN SMALL LETTER Q */ 0x0071, /* LATIN CAPITAL LETTER Q */ 0x0051, /* COMMERCIAL AT */ 0x0040],\n  KeyW: [/* LATIN SMALL LETTER W */ 0x0077, /* LATIN CAPITAL LETTER W */ 0x0057],\n  KeyE: [/* LATIN SMALL LETTER E */ 0x0065, /* LATIN CAPITAL LETTER E */ 0x0045, /* EURO SIGN */ 0x20ac],\n  KeyR: [/* LATIN SMALL LETTER R */ 0x0072, /* LATIN CAPITAL LETTER R */ 0x0052],\n  KeyT: [/* LATIN SMALL LETTER T */ 0x0074, /* LATIN CAPITAL LETTER T */ 0x0054, /* TURKISH LIRA SIGN */ 0x20ba],\n  KeyY: [/* LATIN SMALL LETTER Y */ 0x0079, /* LATIN CAPITAL LETTER Y */ 0x0059],\n  KeyU: [/* LATIN SMALL LETTER U */ 0x0075, /* LATIN CAPITAL LETTER U */ 0x0055],\n  KeyI: [/* LATIN SMALL LETTER DOTLESS I */ 0x0131, /* LATIN CAPITAL LETTER I */ 0x0049, /* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I WITH DOT ABOVE */ 0x0130],\n  KeyO: [/* LATIN SMALL LETTER O */ 0x006f, /* LATIN CAPITAL LETTER O */ 0x004f],\n  KeyP: [/* LATIN SMALL LETTER P */ 0x0070, /* LATIN CAPITAL LETTER P */ 0x0050],\n  BracketLeft: [/* LATIN SMALL LETTER G WITH BREVE */ 0x011f, /* LATIN CAPITAL LETTER G WITH BREVE */ 0x011e, { dead: /* COMBINING DIAERESIS */ 0x0308 }],\n  BracketRight: [/* LATIN SMALL LETTER U WITH DIAERESIS */ 0x00fc, /* LATIN CAPITAL LETTER U WITH DIAERESIS */ 0x00dc, { dead: /* COMBINING TILDE */ 0x0303 }],\n  Backslash: [/* COMMA */ 0x002c, /* SEMICOLON */ 0x003b, { dead: /* COMBINING GRAVE ACCENT */ 0x0300 }],\n  KeyA: [/* LATIN SMALL LETTER A */ 0x0061, /* LATIN CAPITAL LETTER A */ 0x0041, /* LATIN SMALL LETTER AE */ 0x00e6, /* LATIN CAPITAL LETTER AE */ 0x00c6],\n  KeyS: [/* LATIN SMALL LETTER S */ 0x0073, /* LATIN CAPITAL LETTER S */ 0x0053, /* LATIN SMALL LETTER SHARP S */ 0x00df],\n  KeyD: [/* LATIN SMALL LETTER D */ 0x0064, /* LATIN CAPITAL LETTER D */ 0x0044],\n  KeyF: [/* LATIN SMALL LETTER F */ 0x0066, /* LATIN CAPITAL LETTER F */ 0x0046],\n  KeyG: [/* LATIN SMALL LETTER G */ 0x0067, /* LATIN CAPITAL LETTER G */ 0x0047],\n  KeyH: [/* LATIN SMALL LETTER H */ 0x0068, /* LATIN CAPITAL LETTER H */ 0x0048],\n  KeyJ: [/* LATIN SMALL LETTER J */ 0x006a, /* LATIN CAPITAL LETTER J */ 0x004a],\n  KeyK: [/* LATIN SMALL LETTER K */ 0x006b, /* LATIN CAPITAL LETTER K */ 0x004b],\n  KeyL: [/* LATIN SMALL LETTER L */ 0x006c, /* LATIN CAPITAL LETTER L */ 0x004c],\n  Semicolon: [/* LATIN SMALL LETTER S WITH CEDILLA */ 0x015f, /* LATIN CAPITAL LETTER S WITH CEDILLA */ 0x015e, { dead: /* COMBINING ACUTE ACCENT */ 0x0301 }],\n  Quote: [/* LATIN SMALL LETTER I */ 0x0069, /* LATIN CAPITAL LETTER I WITH DOT ABOVE */ 0x0130],\n  IntlBackslash: [/* LESS-THAN SIGN */ 0x003c, /* GREATER-THAN SIGN */ 0x003e, /* VERTICAL LINE */ 0x007c],\n  KeyZ: [/* LATIN SMALL LETTER Z */ 0x007a, /* LATIN CAPITAL LETTER Z */ 0x005a],\n  KeyX: [/* LATIN SMALL LETTER X */ 0x0078, /* LATIN CAPITAL LETTER X */ 0x0058],\n  KeyC: [/* LATIN SMALL LETTER C */ 0x0063, /* LATIN CAPITAL LETTER C */ 0x0043],\n  KeyV: [/* LATIN SMALL LETTER V */ 0x0076, /* LATIN CAPITAL LETTER V */ 0x0056],\n  KeyB: [/* LATIN SMALL LETTER B */ 0x0062, /* LATIN CAPITAL LETTER B */ 0x0042],\n  KeyN: [/* LATIN SMALL LETTER N */ 0x006e, /* LATIN CAPITAL LETTER N */ 0x004e],\n  KeyM: [/* LATIN SMALL LETTER M */ 0x006d, /* LATIN CAPITAL LETTER M */ 0x004d],\n  Comma: [/* LATIN SMALL LETTER O WITH DIAERESIS */ 0x00f6, /* LATIN CAPITAL LETTER O WITH DIAERESIS */ 0x00d6],\n  Period: [/* LATIN SMALL LETTER C WITH CEDILLA */ 0x00e7, /* LATIN CAPITAL LETTER C WITH CEDILLA */ 0x00c7],\n  Slash: [/* FULL STOP */ 0x002e, /* COLON */ 0x003a],\n  Space: [/* SPACE */ 0x0020],\n};\n","// Generated file, do not edit.\n\nimport { type CharacterDict } from \"../types.ts\";\n\n// prettier-ignore\nexport const LAYOUT_UK_UA: CharacterDict = {\n  Backquote: [/* CYRILLIC SMALL LETTER IO */ 0x0451, /* CYRILLIC CAPITAL LETTER IO */ 0x0401],\n  Digit1: [/* DIGIT ONE */ 0x0031, /* EXCLAMATION MARK */ 0x0021],\n  Digit2: [/* DIGIT TWO */ 0x0032, /* QUOTATION MARK */ 0x0022],\n  Digit3: [/* DIGIT THREE */ 0x0033, /* NUMERO SIGN */ 0x2116],\n  Digit4: [/* DIGIT FOUR */ 0x0034, /* SEMICOLON */ 0x003b],\n  Digit5: [/* DIGIT FIVE */ 0x0035, /* PERCENT SIGN */ 0x0025],\n  Digit6: [/* DIGIT SIX */ 0x0036, /* COLON */ 0x003a],\n  Digit7: [/* DIGIT SEVEN */ 0x0037, /* QUESTION MARK */ 0x003f],\n  Digit8: [/* DIGIT EIGHT */ 0x0038, /* ASTERISK */ 0x002a],\n  Digit9: [/* DIGIT NINE */ 0x0039, /* LEFT PARENTHESIS */ 0x0028],\n  Digit0: [/* DIGIT ZERO */ 0x0030, /* RIGHT PARENTHESIS */ 0x0029],\n  Minus: [/* HYPHEN-MINUS */ 0x002d, /* LOW LINE */ 0x005f],\n  Equal: [/* EQUALS SIGN */ 0x003d, /* PLUS SIGN */ 0x002b],\n  KeyQ: [/* CYRILLIC SMALL LETTER SHORT I */ 0x0439, /* CYRILLIC CAPITAL LETTER SHORT I */ 0x0419],\n  KeyW: [/* CYRILLIC SMALL LETTER TSE */ 0x0446, /* CYRILLIC CAPITAL LETTER TSE */ 0x0426],\n  KeyE: [/* CYRILLIC SMALL LETTER U */ 0x0443, /* CYRILLIC CAPITAL LETTER U */ 0x0423],\n  KeyR: [/* CYRILLIC SMALL LETTER KA */ 0x043a, /* CYRILLIC CAPITAL LETTER KA */ 0x041a],\n  KeyT: [/* CYRILLIC SMALL LETTER IE */ 0x0435, /* CYRILLIC CAPITAL LETTER IE */ 0x0415],\n  KeyY: [/* CYRILLIC SMALL LETTER EN */ 0x043d, /* CYRILLIC CAPITAL LETTER EN */ 0x041d],\n  KeyU: [/* CYRILLIC SMALL LETTER GHE */ 0x0433, /* CYRILLIC CAPITAL LETTER GHE */ 0x0413, /* CYRILLIC SMALL LETTER GHE WITH UPTURN */ 0x0491, /* CYRILLIC CAPITAL LETTER GHE WITH UPTURN */ 0x0490],\n  KeyI: [/* CYRILLIC SMALL LETTER SHA */ 0x0448, /* CYRILLIC CAPITAL LETTER SHA */ 0x0428],\n  KeyO: [/* CYRILLIC SMALL LETTER SHCHA */ 0x0449, /* CYRILLIC CAPITAL LETTER SHCHA */ 0x0429],\n  KeyP: [/* CYRILLIC SMALL LETTER ZE */ 0x0437, /* CYRILLIC CAPITAL LETTER ZE */ 0x0417],\n  BracketLeft: [/* CYRILLIC SMALL LETTER HA */ 0x0445, /* CYRILLIC CAPITAL LETTER HA */ 0x0425],\n  BracketRight: [/* CYRILLIC SMALL LETTER YI */ 0x0457, /* CYRILLIC CAPITAL LETTER YI */ 0x0407],\n  Backslash: [/* REVERSE SOLIDUS */ 0x005c, /* SOLIDUS */ 0x002f],\n  KeyA: [/* CYRILLIC SMALL LETTER EF */ 0x0444, /* CYRILLIC CAPITAL LETTER EF */ 0x0424],\n  KeyS: [/* CYRILLIC SMALL LETTER BYELORUSSIAN-UKRAINIAN I */ 0x0456, /* CYRILLIC CAPITAL LETTER BYELORUSSIAN-UKRAINIAN I */ 0x0406],\n  KeyD: [/* CYRILLIC SMALL LETTER VE */ 0x0432, /* CYRILLIC CAPITAL LETTER VE */ 0x0412],\n  KeyF: [/* CYRILLIC SMALL LETTER A */ 0x0430, /* CYRILLIC CAPITAL LETTER A */ 0x0410],\n  KeyG: [/* CYRILLIC SMALL LETTER PE */ 0x043f, /* CYRILLIC CAPITAL LETTER PE */ 0x041f],\n  KeyH: [/* CYRILLIC SMALL LETTER ER */ 0x0440, /* CYRILLIC CAPITAL LETTER ER */ 0x0420],\n  KeyJ: [/* CYRILLIC SMALL LETTER O */ 0x043e, /* CYRILLIC CAPITAL LETTER O */ 0x041e],\n  KeyK: [/* CYRILLIC SMALL LETTER EL */ 0x043b, /* CYRILLIC CAPITAL LETTER EL */ 0x041b],\n  KeyL: [/* CYRILLIC SMALL LETTER DE */ 0x0434, /* CYRILLIC CAPITAL LETTER DE */ 0x0414],\n  Semicolon: [/* CYRILLIC SMALL LETTER ZHE */ 0x0436, /* CYRILLIC CAPITAL LETTER ZHE */ 0x0416],\n  Quote: [/* CYRILLIC SMALL LETTER UKRAINIAN IE */ 0x0454, /* CYRILLIC CAPITAL LETTER UKRAINIAN IE */ 0x0404],\n  IntlBackslash: [/* CYRILLIC SMALL LETTER GHE WITH UPTURN */ 0x0491, /* CYRILLIC CAPITAL LETTER GHE WITH UPTURN */ 0x0490],\n  KeyZ: [/* CYRILLIC SMALL LETTER YA */ 0x044f, /* CYRILLIC CAPITAL LETTER YA */ 0x042f],\n  KeyX: [/* CYRILLIC SMALL LETTER CHE */ 0x0447, /* CYRILLIC CAPITAL LETTER CHE */ 0x0427],\n  KeyC: [/* CYRILLIC SMALL LETTER ES */ 0x0441, /* CYRILLIC CAPITAL LETTER ES */ 0x0421],\n  KeyV: [/* CYRILLIC SMALL LETTER EM */ 0x043c, /* CYRILLIC CAPITAL LETTER EM */ 0x041c],\n  KeyB: [/* CYRILLIC SMALL LETTER I */ 0x0438, /* CYRILLIC CAPITAL LETTER I */ 0x0418],\n  KeyN: [/* CYRILLIC SMALL LETTER TE */ 0x0442, /* CYRILLIC CAPITAL LETTER TE */ 0x0422],\n  KeyM: [/* CYRILLIC SMALL LETTER SOFT SIGN */ 0x044c, /* CYRILLIC CAPITAL LETTER SOFT SIGN */ 0x042c],\n  Comma: [/* CYRILLIC SMALL LETTER BE */ 0x0431, /* CYRILLIC CAPITAL LETTER BE */ 0x0411],\n  Period: [/* CYRILLIC SMALL LETTER YU */ 0x044e, /* CYRILLIC CAPITAL LETTER YU */ 0x042e],\n  Slash: [/* FULL STOP */ 0x002e, /* COMMA */ 0x002c],\n  Space: [/* SPACE */ 0x0020],\n};\n","import { type GeometryDict } from \"../types.ts\";\n\nexport const MATRIX: GeometryDict = {\n  // ---\n  Equal: {\n    x: 0,\n    y: 0,\n    w: 1.5,\n    h: 1,\n    zones: [\"pinky\", \"left\", \"digit\"],\n  },\n  Digit1: {\n    x: 1.5,\n    y: 0,\n    zones: [\"pinky\", \"left\", \"digit\"],\n  },\n  Digit2: {\n    x: 2.5,\n    y: 0,\n    zones: [\"ring\", \"left\", \"digit\"],\n  },\n  Digit3: {\n    x: 3.5,\n    y: 0,\n    zones: [\"middle\", \"left\", \"digit\"],\n  },\n  Digit4: {\n    x: 4.5,\n    y: 0,\n    zones: [\"leftIndex\", \"left\", \"digit\"],\n  },\n  Digit5: {\n    x: 5.5,\n    y: 0,\n    zones: [\"leftIndex\", \"left\", \"digit\"],\n  },\n  Digit6: {\n    x: 7.5,\n    y: 0,\n    zones: [\"rightIndex\", \"right\", \"digit\"],\n  },\n  Digit7: {\n    x: 8.5,\n    y: 0,\n    zones: [\"rightIndex\", \"right\", \"digit\"],\n  },\n  Digit8: {\n    x: 9.5,\n    y: 0,\n    zones: [\"middle\", \"right\", \"digit\"],\n  },\n  Digit9: {\n    x: 10.5,\n    y: 0,\n    zones: [\"ring\", \"right\", \"digit\"],\n  },\n  Digit0: {\n    x: 11.5,\n    y: 0,\n    zones: [\"pinky\", \"right\", \"digit\"],\n  },\n  Minus: {\n    x: 12.5,\n    y: 0,\n    w: 1.5,\n    h: 1,\n    zones: [\"pinky\", \"right\", \"digit\"],\n  },\n  // ---\n  Tab: {\n    x: 0,\n    y: 1,\n    w: 1.5,\n    h: 1,\n    labels: [{ text: \"Tab\" }],\n    zones: [\"pinky\", \"left\", \"top\"],\n  },\n  KeyQ: {\n    x: 1.5,\n    y: 1,\n    zones: [\"pinky\", \"left\", \"top\"],\n  },\n  KeyW: {\n    x: 2.5,\n    y: 1,\n    zones: [\"ring\", \"left\", \"top\"],\n  },\n  KeyE: {\n    x: 3.5,\n    y: 1,\n    zones: [\"middle\", \"left\", \"top\"],\n  },\n  KeyR: {\n    x: 4.5,\n    y: 1,\n    zones: [\"leftIndex\", \"left\", \"top\"],\n  },\n  KeyT: {\n    x: 5.5,\n    y: 1,\n    zones: [\"leftIndex\", \"left\", \"top\"],\n  },\n  KeyY: {\n    x: 7.5,\n    y: 1,\n    zones: [\"rightIndex\", \"right\", \"top\"],\n  },\n  KeyU: {\n    x: 8.5,\n    y: 1,\n    zones: [\"rightIndex\", \"right\", \"top\"],\n  },\n  KeyI: {\n    x: 9.5,\n    y: 1,\n    zones: [\"middle\", \"right\", \"top\"],\n  },\n  KeyO: {\n    x: 10.5,\n    y: 1,\n    zones: [\"ring\", \"right\", \"top\"],\n  },\n  KeyP: {\n    x: 11.5,\n    y: 1,\n    zones: [\"pinky\", \"right\", \"top\"],\n  },\n  Backslash: {\n    x: 12.5,\n    y: 1,\n    w: 1.5,\n    h: 1,\n    zones: [\"pinky\", \"right\", \"top\"],\n  },\n  // ---\n  CapsLock: {\n    x: 0,\n    y: 2,\n    w: 1.5,\n    h: 1,\n    labels: [{ text: \"Caps Lock\" }],\n    zones: [\"pinky\", \"left\", \"home\"],\n  },\n  KeyA: {\n    x: 1.5,\n    y: 2,\n    zones: [\"pinky\", \"left\", \"home\"],\n  },\n  KeyS: {\n    x: 2.5,\n    y: 2,\n    zones: [\"ring\", \"left\", \"home\"],\n  },\n  KeyD: {\n    x: 3.5,\n    y: 2,\n    zones: [\"middle\", \"left\", \"home\"],\n  },\n  KeyF: {\n    x: 4.5,\n    y: 2,\n    zones: [\"leftIndex\", \"left\", \"home\"],\n    homing: true,\n  },\n  KeyG: {\n    x: 5.5,\n    y: 2,\n    zones: [\"leftIndex\", \"left\", \"home\"],\n  },\n  KeyH: {\n    x: 7.5,\n    y: 2,\n    zones: [\"rightIndex\", \"right\", \"home\"],\n  },\n  KeyJ: {\n    x: 8.5,\n    y: 2,\n    zones: [\"rightIndex\", \"right\", \"home\"],\n    homing: true,\n  },\n  KeyK: {\n    x: 9.5,\n    y: 2,\n    zones: [\"middle\", \"right\", \"home\"],\n  },\n  KeyL: {\n    x: 10.5,\n    y: 2,\n    zones: [\"ring\", \"right\", \"home\"],\n  },\n  Semicolon: {\n    x: 11.5,\n    y: 2,\n    zones: [\"pinky\", \"right\", \"home\"],\n  },\n  Quote: {\n    x: 12.5,\n    y: 2,\n    w: 1.5,\n    h: 1,\n    zones: [\"pinky\", \"right\", \"home\"],\n  },\n  // ---\n  ShiftLeft: {\n    x: 0,\n    y: 3,\n    w: 1.5,\n    h: 1,\n    labels: [{ text: \"Shift\" }],\n    zones: [\"pinky\", \"left\", \"bottom\"],\n  },\n  KeyZ: {\n    x: 1.5,\n    y: 3,\n    zones: [\"pinky\", \"left\", \"bottom\"],\n  },\n  KeyX: {\n    x: 2.5,\n    y: 3,\n    zones: [\"ring\", \"left\", \"bottom\"],\n  },\n  KeyC: {\n    x: 3.5,\n    y: 3,\n    zones: [\"middle\", \"left\", \"bottom\"],\n  },\n  KeyV: {\n    x: 4.5,\n    y: 3,\n    zones: [\"leftIndex\", \"left\", \"bottom\"],\n  },\n  KeyB: {\n    x: 5.5,\n    y: 3,\n    zones: [\"leftIndex\", \"left\", \"bottom\"],\n  },\n  KeyN: {\n    x: 7.5,\n    y: 3,\n    zones: [\"rightIndex\", \"right\", \"bottom\"],\n  },\n  KeyM: {\n    x: 8.5,\n    y: 3,\n    zones: [\"rightIndex\", \"right\", \"bottom\"],\n  },\n  Comma: {\n    x: 9.5,\n    y: 3,\n    zones: [\"middle\", \"right\", \"bottom\"],\n  },\n  Period: {\n    x: 10.5,\n    y: 3,\n    zones: [\"ring\", \"right\", \"bottom\"],\n  },\n  Slash: {\n    x: 11.5,\n    y: 3,\n    zones: [\"pinky\", \"right\", \"bottom\"],\n  },\n  ShiftRight: {\n    x: 12.5,\n    y: 3,\n    w: 1.5,\n    labels: [{ text: \"Shift\" }],\n    zones: [\"pinky\", \"right\", \"bottom\"],\n  },\n};\n","import { useSettings } from \"@keybr/settings\";\nimport { createContext, type ReactNode, useContext, useMemo } from \"react\";\nimport { type Keyboard } from \"./keyboard.ts\";\nimport { loadKeyboard } from \"./load.ts\";\nimport { KeyboardOptions } from \"./settings.ts\";\n\nexport const KeyboardContext = createContext<Keyboard>(null!);\n\nexport function useKeyboard(): Keyboard {\n  const value = useContext(KeyboardContext);\n  if (value == null) {\n    throw new Error(\n      process.env.NODE_ENV !== \"production\"\n        ? \"KeyboardContext is missing\"\n        : undefined,\n    );\n  }\n  return value;\n}\n\nexport function KeyboardProvider({\n  children,\n}: {\n  readonly children: ReactNode;\n}): ReactNode {\n  const { settings } = useSettings();\n  const keyboard = useMemo(\n    () => loadKeyboard(KeyboardOptions.from(settings)),\n    [settings],\n  );\n  return (\n    <KeyboardContext.Provider value={keyboard}>\n      {children}\n    </KeyboardContext.Provider>\n  );\n}\n","import {\n  type CodePoint,\n  type CodePointSet,\n  expand,\n  isControl,\n  isDiacritic,\n  isLinebreak,\n  isWhitespace,\n  replace,\n  toCodePoints,\n} from \"@keybr/unicode\";\n\n/**\n * Removes any illegal characters from the specified text, collapses whitespace.\n */\nexport function filterText(text: string, set: CodePointSet): string {\n  let result = \"\";\n  let ws = \"\";\n\n  const append = (\n    codePoint: CodePoint,\n    s = String.fromCodePoint(codePoint),\n  ) => {\n    if (set.has(codePoint)) {\n      if (ws !== \"\") {\n        result += ws;\n        ws = \"\";\n      }\n      result += s;\n      return true;\n    }\n    return false;\n  };\n\n  const space = (char: string) => {\n    if (result !== \"\" && ws !== \"\\n\") {\n      ws = char;\n    }\n  };\n\n  for (let codePoint of toCodePoints(text.normalize())) {\n    if (isLinebreak(codePoint)) {\n      space(\"\\n\");\n      continue;\n    }\n    if (isWhitespace(codePoint)) {\n      space(\" \");\n      continue;\n    }\n    if (isControl(codePoint)) {\n      space(\" \");\n      continue;\n    }\n    if (isDiacritic(codePoint)) {\n      continue;\n    }\n    if (!append(codePoint)) {\n      const a = expand(codePoint);\n      if (a != null) {\n        for (const letter of a) {\n          append(letter);\n        }\n        continue;\n      }\n      const b = replace(codePoint);\n      if (b != null) {\n        if (!append(b, String.fromCodePoint(codePoint))) {\n          space(\" \");\n        }\n        continue;\n      }\n      space(\" \");\n    }\n  }\n  return result;\n}\n\nfilterText.normalize = (codePoint: CodePoint): CodePoint => {\n  return replace(codePoint) ?? codePoint;\n};\n","export enum KeyCode {\n  //\n  // Writing System Keys\n  //\n\n  /** ` and ~ on a US keyboard. */\n  Backquote,\n  /** \\ and | on a US keyboard. Found only on standard 101-key layouts. */\n  Backslash,\n  /** Labelled Delete on Macintosh keyboards. */\n  Backspace,\n  /** [ and { on a US keyboard. */\n  BracketLeft,\n  /** ] and } on a US keyboard. */\n  BracketRight,\n  /** , and < on a US keyboard. */\n  Comma,\n  /** 0 and ) on a US keyboard. */\n  Digit0,\n  /** 1 and ! on a US keyboard. */\n  Digit1,\n  /** 2 and @ on a US keyboard. */\n  Digit2,\n  /** 3 and # on a US keyboard. */\n  Digit3,\n  /** 4 and $ on a US keyboard. */\n  Digit4,\n  /** 5 and % on a US keyboard. */\n  Digit5,\n  /** 6 and ^ on a US keyboard. */\n  Digit6,\n  /** 7 and & on a US keyboard. */\n  Digit7,\n  /** 8 and * on a US keyboard. */\n  Digit8,\n  /** 9 and ( on a US keyboard. */\n  Digit9,\n  /** = and + on a US keyboard. */\n  Equal,\n  /** Located between the ShiftLeft and KeyZ keys. The \\ and | key on a UK keyboard. */\n  IntlBackslash,\n  /** Located between the Quote and Enter keys on row E of the keyboard. The # and ~ key on a UK keyboard. */\n  IntlHash,\n  /** Located between the Slash and ShiftRight keys. The \\ and ろ (ro) key on a Japanese keyboard. */\n  IntlRo,\n  /** Located between the Equal and Backspace keys. The ¥ (yen) key on a Japanese keyboard. The \\ and / key on a Russian keyboard. */\n  IntlYen,\n  /** a on a US keyboard. Labelled q on an AZERTY (e.g., French) keyboard. */\n  KeyA,\n  /** b on a US keyboard. */\n  KeyB,\n  /** c on a US keyboard. */\n  KeyC,\n  /** d on a US keyboard. */\n  KeyD,\n  /** e on a US keyboard. */\n  KeyE,\n  /** f on a US keyboard. */\n  KeyF,\n  /** g on a US keyboard. */\n  KeyG,\n  /** h on a US keyboard. */\n  KeyH,\n  /** i on a US keyboard. */\n  KeyI,\n  /** j on a US keyboard. */\n  KeyJ,\n  /** k on a US keyboard. */\n  KeyK,\n  /** l on a US keyboard. */\n  KeyL,\n  /** m on a US keyboard. */\n  KeyM,\n  /** n on a US keyboard. */\n  KeyN,\n  /** o on a US keyboard. */\n  KeyO,\n  /** p on a US keyboard. */\n  KeyP,\n  /** q on a US keyboard. Labelled a on an AZERTY (e.g., French) keyboard. */\n  KeyQ,\n  /** r on a US keyboard. */\n  KeyR,\n  /** s on a US keyboard. */\n  KeyS,\n  /** t on a US keyboard. */\n  KeyT,\n  /** u on a US keyboard. */\n  KeyU,\n  /** v on a US keyboard. */\n  KeyV,\n  /** w on a US keyboard. Labelled z on an AZERTY (e.g., French) keyboard. */\n  KeyW,\n  /** x on a US keyboard. */\n  KeyX,\n  /** y on a US keyboard. Labelled z on a QWERTZ (e.g., German) keyboard. */\n  KeyY,\n  /** z on a US keyboard. Labelled w on an AZERTY (e.g., French) keyboard, and y on a QWERTZ (e.g., German) keyboard. */\n  KeyZ,\n  /** - and _ on a US keyboard. */\n  Minus,\n  /** . and > on a US keyboard. */\n  Period,\n  /** and \" on a US keyboard. */\n  Quote,\n  /** ; and : on a US keyboard. */\n  Semicolon,\n  /** / and ? on a US keyboard. */\n  Slash,\n\n  //\n  // Functional keys\n  //\n\n  /** Labelled Alt or Option. */\n  AltLeft,\n  /** Labelled Alt or Option. This is the AltGr key on many keyboard layouts. */\n  AltRight,\n  /** The Caps Lock key. */\n  CapsLock,\n  /** The application context menu key, which is typically found between the right OS key and the right Control key. */\n  ContextMenu,\n  /** The left Control key. */\n  ControlLeft,\n  /** The right Control key. */\n  ControlRight,\n  /** Labelled Enter and Return on Macintosh keyboards. */\n  Enter,\n  /** The Windows, ⌘, Command or other OS symbol key. */\n  OSLeft,\n  /** The Windows, ⌘, Command or other OS symbol key. */\n  OSRight,\n  /** The left Shift key. */\n  ShiftLeft,\n  /** The right Shift key. */\n  ShiftRight,\n  /** The space key. */\n  Space,\n  /** The tab key. */\n  Tab,\n  /** The 半角/全角 (Hankaku/Zenkaku) key */\n  IntlHanZen,\n  /** The 無変換 (Muhenkan) key found on Japanese keyboards to the left of the\n   * Space key */\n  IntlMuhenkan,\n  /** The 変換 (Henkan) key found on Japanese keyboards to the right of the\n   * Space key */\n  IntlHenkan,\n  /** The ひらがな・カタカナ (Hiragana/Katakana) key found on Japanese keyboards\n   * to the right of the Henkan key */\n  IntlHiraKata,\n  /** The Menu key typically located to the left of the Right Shift key on\n   * Japanese Keyboards. */\n  IntlMenu,\n\n  //\n  // Control Pad Section\n  //\n\n  /** ? */\n  Delete,\n  /** ?  */\n  End,\n  /** ? */\n  Home,\n  /** Not present on Apple keyboards. */\n  Insert,\n  /** ? */\n  PageDown,\n  /** ? */\n  PageUp,\n\n  //\n  // Arrow Pad Section\n  //\n\n  /** ? */\n  ArrowDown,\n  /** ? */\n  ArrowLeft,\n  /** ? */\n  ArrowRight,\n  /** ? */\n  ArrowUp,\n\n  //\n  // Numpad Section\n  //\n\n  /** On the Mac, the 'NumLock' code should be used for the numpad 'Clear' key. */\n  NumLock,\n  /** 0/Insert on a keyboard; 0 on a phone or remote control */\n  Numpad0,\n  /** 1/End on a keyboard; 1 or 1/QZ on a phone or remote control */\n  Numpad1,\n  /** 2/ArrowDown on a keyboard; 2/ABC on a phone or remote control */\n  Numpad2,\n  /** 3/PageDown on a keyboard; 3/DEF on a phone or remote control */\n  Numpad3,\n  /** 4/ArrowLeft on a keyboard; 4/GHI on a phone or remote control */\n  Numpad4,\n  /** 5 on a keyboard; 5/JKL on a phone or remote control */\n  Numpad5,\n  /** 6/ArrowRight on a keyboard; 6/MNO on a phone or remote control */\n  Numpad6,\n  /** 7/Home on a keyboard; 7/PQRS or 7/PRS on a phone or remote control */\n  Numpad7,\n  /** 8/ArrowUp on a keyboard; 8/TUV on a phone or remote control */\n  Numpad8,\n  /** 9/PageUp on a keyboard; 9/WXYZ or 9/WXY on a phone or remote control */\n  Numpad9,\n  /** + */\n  NumpadAdd,\n  /** For use with numpads that have a 'Clear' key that is separate from the 'NumLock' key. On the Mac, the numpad 'Clear' key should always be encoded as 'NumLock'. */\n  NumpadClear,\n  /** , (thousands separator). For locales where the thousands separator is a '.' (e.g., Brazil), this key may generate a '.' */\n  NumpadComma,\n  /** . (decimal separator) and Delete. For locales where the decimal separator is ',' (e.g., Brazil), this key may generate a ','. */\n  NumpadDecimal,\n  /** / */\n  NumpadDivide,\n  /** ? */\n  NumpadEnter,\n  /** * on a keyboard. For use with numpads that provide mathematical operations (+, -, * and /). See 'NumpadStar' for the * key on phones and remote controls. */\n  NumpadMultiply,\n  /** - */\n  NumpadSubtract,\n\n  //\n  // Function Section\n  //\n\n  /** ? */\n  Escape,\n  /** ? */\n  F1,\n  /** ? */\n  F2,\n  /** ? */\n  F3,\n  /** ? */\n  F4,\n  /** ? */\n  F5,\n  /** ? */\n  F6,\n  /** ? */\n  F7,\n  /** ? */\n  F8,\n  /** ? */\n  F9,\n  /** ? */\n  F10,\n  /** ? */\n  F11,\n  /** ? */\n  F12,\n  /** PrintScreen and SysReq */\n  PrintScreen,\n  /** ? */\n  ScrollLock,\n  /** Pause and Break */\n  Pause,\n}\n","import { type CodePoint } from \"@keybr/unicode\";\n\ntype Entry1 = [codePoint: CodePoint, f: number];\n\n/**\n * The unigram frequency table.\n */\nexport class Ngram1 implements Iterable<Entry1> {\n  readonly #alphabet: readonly CodePoint[];\n  readonly #data: Float64Array;\n\n  constructor(alphabet: readonly CodePoint[]) {\n    if (alphabet.length === 0) {\n      throw new TypeError();\n    }\n\n    this.#alphabet = alphabet;\n    this.#data = new Float64Array(alphabet.length);\n  }\n\n  *[Symbol.iterator](): IterableIterator<Entry1> {\n    const size = this.#alphabet.length;\n    for (let i = 0; i < size; i++) {\n      const f = this.#data[i];\n      if (f > 0) {\n        yield [this.#alphabet[i], f];\n      }\n    }\n  }\n\n  set(a: CodePoint, f: number): void {\n    this.#data[this.#indexOf(a)] = f;\n  }\n\n  add(a: CodePoint, f: number): void {\n    this.#data[this.#indexOf(a)] += f;\n  }\n\n  get(a: CodePoint): number {\n    return this.#data[this.#indexOf(a)];\n  }\n\n  normalize(): void {\n    normalize(this.#data);\n  }\n\n  toJSON() {\n    return [...this];\n  }\n\n  #indexOf(codePoint: CodePoint): number {\n    const index = this.#alphabet.indexOf(codePoint);\n    if (index < 0) {\n      throw new TypeError();\n    }\n    return index;\n  }\n}\n\ntype Entry2 = [codePoint0: CodePoint, codePoint1: CodePoint, f: number];\n\n/**\n * The bigram frequency table.\n */\nexport class Ngram2 implements Iterable<Entry2> {\n  readonly #alphabet: readonly CodePoint[];\n  readonly #data: Float64Array;\n\n  constructor(alphabet: readonly CodePoint[]) {\n    if (alphabet.length === 0) {\n      throw new TypeError();\n    }\n    this.#alphabet = alphabet;\n    this.#data = new Float64Array(alphabet.length * alphabet.length);\n  }\n\n  *[Symbol.iterator](): IterableIterator<Entry2> {\n    const size = this.#alphabet.length;\n    for (let i = 0; i < size; i++) {\n      for (let j = 0; j < size; j++) {\n        const f = this.#data[i * size + j];\n        if (f > 0) {\n          yield [this.#alphabet[i], this.#alphabet[j], f];\n        }\n      }\n    }\n  }\n\n  set(a: CodePoint, b: CodePoint, f: number): void {\n    const size = this.#alphabet.length;\n    const i = this.#indexOf(a);\n    const j = this.#indexOf(b);\n    this.#data[i * size + j] = f;\n  }\n\n  add(a: CodePoint, b: CodePoint, f: number): void {\n    const size = this.#alphabet.length;\n    const i = this.#indexOf(a);\n    const j = this.#indexOf(b);\n    this.#data[i * size + j] += f;\n  }\n\n  get(a: CodePoint, b: CodePoint): number {\n    const size = this.#alphabet.length;\n    const i = this.#indexOf(a);\n    const j = this.#indexOf(b);\n    return this.#data[i * size + j];\n  }\n\n  normalize(): void {\n    normalize(this.#data);\n  }\n\n  toJSON() {\n    return [...this];\n  }\n\n  #indexOf(codePoint: CodePoint): number {\n    const index = this.#alphabet.indexOf(codePoint);\n    if (index < 0) {\n      throw new TypeError();\n    }\n    return index;\n  }\n}\n\nfunction normalize(data: Float64Array): void {\n  const { length } = data;\n  const sum = data.reduce((sum, f) => sum + f, 0);\n  if (sum > 0) {\n    for (let i = 0; i < length; i++) {\n      data[i] = data[i] / sum;\n    }\n  }\n}\n","import { type CodePoint } from \"@keybr/unicode\";\nimport { type Keyboard } from \"./keyboard.ts\";\nimport { type KeyShape } from \"./keyshape.ts\";\nimport { type Ngram1, type Ngram2 } from \"./ngram.ts\";\nimport { type ZoneId } from \"./types.ts\";\n\nexport type KeyboardStats = {\n  readonly homeRow: number;\n  readonly topRow: number;\n  readonly bottomRow: number;\n  readonly handSwitches: number;\n  readonly fingerSwitches: number;\n};\n\nexport function computeStats(\n  keyboard: Keyboard,\n  ng1: Ngram1,\n  ng2: Ngram2,\n): KeyboardStats {\n  return {\n    homeRow: keysInZone(\"home\"),\n    topRow: keysInZone(\"top\"),\n    bottomRow: keysInZone(\"bottom\"),\n    handSwitches: handSwitches(),\n    fingerSwitches: fingerSwitches(),\n  };\n\n  function keysInZone(zone: ZoneId): number {\n    let a = 0;\n    let b = 0;\n    for (const [codePoint, f] of ng1) {\n      const shape = getShape(codePoint);\n      if (shape != null) {\n        if (shape.inZone(zone)) {\n          a += f;\n        } else {\n          b += f;\n        }\n      }\n    }\n    return a / (a + b);\n  }\n\n  function handSwitches(): number {\n    let a = 0;\n    let b = 0;\n    for (const [codePoint0, codePoint1, f] of ng2) {\n      const shape0 = getShape(codePoint0);\n      const shape1 = getShape(codePoint1);\n      if (\n        shape0 != null &&\n        shape1 != null &&\n        shape0.hand != null &&\n        shape1.hand != null\n      ) {\n        if (shape0.hand !== shape1.hand) {\n          a += f;\n        } else {\n          b += f;\n        }\n      }\n    }\n    return a / (a + b);\n  }\n\n  function fingerSwitches(): number {\n    let a = 0;\n    let b = 0;\n    for (const [codePoint0, codePoint1, f] of ng2) {\n      const shape0 = getShape(codePoint0);\n      const shape1 = getShape(codePoint1);\n      if (\n        shape0 != null &&\n        shape1 != null &&\n        shape0.finger != null &&\n        shape1.finger != null\n      ) {\n        if (shape0.finger !== shape1.finger) {\n          a += f;\n        } else {\n          b += f;\n        }\n      }\n    }\n    return a / (a + b);\n  }\n\n  function getShape(codePoint: CodePoint): KeyShape | null {\n    if (codePoint !== 0x0020) {\n      const combo = keyboard.getCombo(codePoint);\n      if (combo != null) {\n        const shape = keyboard.getShape(combo.id);\n        if (shape != null) {\n          return shape;\n        }\n      }\n    }\n    return null;\n  }\n}\n","import { useIntlDisplayNames } from \"@keybr/intl\";\nimport { type Language } from \"./language.ts\";\nimport { type Layout } from \"./layout.ts\";\n\nexport const useFormattedNames = () => {\n  const dn = useIntlDisplayNames();\n  const formatLanguageName = (language: Language): string => {\n    return dn.formatLanguageName(language.id);\n  };\n  const formatLayoutName = (layout: Layout): string => {\n    return layout.name.replaceAll(/\\{([-A-Z]+)\\}/g, (regionId) => {\n      return dn.formatRegionName(regionId.substring(1, regionId.length - 1));\n    });\n  };\n  const formatFullLayoutName = (layout: Layout): string => {\n    return `${formatLanguageName(layout.language)}/${formatLayoutName(layout)}`;\n  };\n  return {\n    formatLanguageName,\n    formatLayoutName,\n    formatFullLayoutName,\n  };\n};\n"],"names":["STANDARD_MOD","ANGLE_MOD","Backquote","Digit1","Digit2","Digit3","Digit4","Digit5","Digit6","Digit7","Digit8","Digit9","Digit0","Minus","Equal","Backspace","Tab","KeyQ","KeyW","KeyE","KeyR","KeyT","KeyY","KeyU","KeyI","KeyO","KeyP","BracketLeft","BracketRight","Backslash","CapsLock","KeyA","KeyS","KeyD","KeyF","KeyG","KeyH","KeyJ","KeyK","KeyL","Semicolon","Quote","Enter","ShiftLeft","KeyZ","KeyX","KeyC","KeyV","KeyB","KeyN","KeyM","Comma","Period","Slash","ShiftRight","ControlLeft","AltLeft","Space","AltRight","ControlRight","ANGLE_WIDE_MOD","SYMMETRIC_MOD","IntlBackslash","ZoneMod","id","name","mod","static","STANDARD","SYMMETRIC","first","items","Symbol","iterator","next","value","toString","this","toJSON","Geometry","form","zones","ALL","ANSI_101","ANSI_101_FULL","ISO_102","ISO_102_FULL","KOREAN_103","KOREAN_103_FULL","BRAZILIAN_104","BRAZILIAN_104_FULL","JAPANESE_106","JAPANESE_106_FULL","MATRIX","x","y","w","h","labels","text","homing","EXTRA","Insert","pos","align","Home","PageUp","Delete","End","PageDown","ArrowUp","ArrowLeft","ArrowDown","ArrowRight","NumLock","NumpadDivide","NumpadMultiply","NumpadSubtract","Numpad7","Numpad8","Numpad9","NumpadAdd","Numpad4","Numpad5","Numpad6","Numpad1","Numpad2","Numpad3","NumpadEnter","Numpad0","NumpadDecimal","shape","IntlRo","IntlHanZen","IntlYen","IntlMuhenkan","IntlHenkan","IntlHiraKata","Lang2","Lang1","KeyModifier","from","shift","alt","ShiftAlt","Shift","Alt","None","complexity","complexityOf","KeyCharacters","ch","a","b","c","d","constructor","getCodePoint","modifier","Error","valid","Boolean","characters","character","isCodePoint","KeyCombo","codePoint","prefix","combo","KeyShape","finger","hand","row","geometryConf","characterConf","selectZone","fingerZones","handZones","rowZones","inZone","includes","inAnyZone","ids","some","inAllZones","every","subset","zone","Language","AR","BE","CS","DE","EL","EN","ES","FA","FR","HE","HR","HU","IT","LT","NB","NL","PL","PT","RO","RU","SL","SV","TH","TR","UK","script","direction","alphabet","locale","collator","compare","upperCase","lowerCase","capitalCase","Intl","Locale","maximize","Collator","Object","freeze","v","toLocaleUpperCase","toLocaleLowerCase","substring","test","letterName","String","fromCodePoint","Keyboard","layout","geometry","characterDict","geometryDict","combos","shapes","Map","entries","set","values","addCombo","isDead","addDeadCombo","data","list","get","push","getCharacters","getCombo","getShape","getCodePoints","dead","weights","codePoints","Set","sort","size","has","weight","getExampleText","language","getExampleLetters","filter","setCombo","map","oldCombo","combinedCodePoint","nullMod","dict","angleMod","remapZones","angleWideMod","fromEntries","Layout","xid","family","emulate","geometries","custom","EN_US","EN_DVORAK","EN_DVORAK_PROG","EN_COLEMAK","EN_COLEMAK_DH_ANSI","EN_COLEMAK_DH_ANSI_WIDE","EN_COLEMAK_DH_ISO","EN_COLEMAK_DH_ISO_WIDE","EN_COLEMAK_DH_MATRIX","EN_WORKMAN","EN_CANARY","EN_CANARY_MATRIX","EN_NERPS","EN_NERPS_MATRIX","EN_HANDS_DOWN_NEU","EN_HANDS_DOWN_PROMETHIUM","EN_STURDY","EN_NORMAN","EN_HALMAK","EN_ENGRAM","EN_GALLIUM","EN_GALLIUM_MATRIX","EN_GRAPHITE","EN_UK","EN_JP","EL_GR","CS_CZ","DE_DE","DE_CH","DE_NEO_2","DE_BONE","DE_MINE","DE_NOTED","DE_CMOS","FR_FR","FR_CA","FR_CH","FR_BEPO","FR_ERGO_L","FR_ERGLACE","FR_OPTIMOT_ERGO","HE_IL","HE_IL_ARKN","HU_HU","IT_IT","LT_LT","NB_NO","NB_KVIKK","NB_SKARP","NL_NL","NL_BE","ES_ES","ES_MX","PL_PL","PL_FWYR","PT_BR","PT_PT","BE_BY","SL_SI","SV_SE","UK_UA","RU_RU","TR_TR_Q","TR_TR_F","AR_SA","AR_SA_102","FA_IR","FA_IR_LEGACY","TH_TH","TH_PAT","TH_MAN","RO_RO","findLayout","localeId","region","toLowerCase","startsWith","selectableLayouts","selectLayout","Emulation","keyboardProps","emulation","Forward","colors","pointers","KeyboardOptions","settings","default","withLanguage","withLayout","withGeometry","withZones","selectableLanguages","selectableGeometries","selectableZones","save","layouts","ligature","special","loadKeyboard","args","length","options","loadImpl","TypeError","KeyboardContext","createContext","useKeyboard","useContext","undefined","KeyboardProvider","children","keyboard","useMemo","Provider","filterText","result","ws","append","s","space","char","normalize","letter","KeyCode","Ngram1","Float64Array","i","f","add","index","indexOf","Ngram2","j","sum","reduce","computeStats","ng1","ng2","homeRow","keysInZone","topRow","bottomRow","handSwitches","codePoint0","codePoint1","shape0","shape1","fingerSwitches","useFormattedNames","dn","formatLanguageName","formatLayoutName","replaceAll","regionId","formatRegionName","formatFullLayoutName"],"sourceRoot":""}