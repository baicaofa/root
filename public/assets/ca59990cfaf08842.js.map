{"version":3,"file":"ca59990cfaf08842.js","mappings":"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","sources":["webpack://keybr.com/./packages/keybr-chart/lib/Chart.tsx","webpack://keybr.com/./packages/keybr-chart/lib/geometry.ts","webpack://keybr.com/./packages/keybr-chart/lib/decoration.ts","webpack://keybr.com/./packages/keybr-chart/lib/styles.module.less?b708","webpack://keybr.com/./packages/keybr-chart/lib/use-chart-styles.ts","webpack://keybr.com/./packages/keybr-chart/lib/AccuracyHistogram.tsx","webpack://keybr.com/./packages/keybr-chart/lib/dist/util.ts","webpack://keybr.com/./packages/keybr-chart/lib/dist/dist.ts","webpack://keybr.com/./packages/keybr-chart/lib/graph.ts","webpack://keybr.com/./packages/keybr-chart/lib/KeyDetailsChart.tsx","webpack://keybr.com/./packages/keybr-chart/lib/keyusage.ts","webpack://keybr.com/./packages/keybr-chart/lib/KeyFrequencyHeatmap.tsx","webpack://keybr.com/./packages/keybr-chart/lib/KeyFrequencyHistogram.tsx","webpack://keybr.com/./packages/keybr-chart/lib/KeySpeedChart.tsx","webpack://keybr.com/./packages/keybr-chart/lib/KeySpeedHistogram.tsx","webpack://keybr.com/./packages/keybr-chart/lib/Marker.module.less?0f0d","webpack://keybr.com/./packages/keybr-chart/lib/Marker.tsx","webpack://keybr.com/./packages/keybr-chart/lib/ProgressOverviewChart.tsx","webpack://keybr.com/./packages/keybr-chart/lib/SpeedChart.tsx","webpack://keybr.com/./packages/keybr-chart/lib/SpeedHistogram.tsx","webpack://keybr.com/./packages/keybr-chart/lib/TimeToTypeHistogram.tsx"],"sourcesContent":["import { Rect, type ShapeList, Shapes, type Size } from \"@keybr/widget\";\nimport { type ReactNode } from \"react\";\nimport { type ChartStyles } from \"./use-chart-styles.ts\";\n\nexport type SizeProps = {\n  readonly width: string;\n  readonly height: string;\n};\n\nexport function Chart({\n  children,\n  width,\n  height,\n}: {\n  readonly children: ReactNode;\n} & SizeProps): ReactNode {\n  return (\n    <div\n      style={{\n        display: \"block\",\n        position: \"relative\",\n        insetInlineStart: \"0px\",\n        insetBlockStart: \"0px\",\n        inlineSize: width,\n        blockSize: height,\n        margin: \"0px\",\n        padding: \"0px\",\n        borderStyle: \"none\",\n      }}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport function chartArea(styles: ChartStyles, cb: (d: Rect) => ShapeList) {\n  return ({ width, height }: Size) => {\n    const h = styles.lineHeight * 5;\n    const v = styles.lineHeight * 2;\n    const area = new Rect(h, v, width - h * 2, height - v * 2).round();\n    return [Shapes.clear(), cb(area)];\n  };\n}\n","import { Point, Rect } from \"@keybr/widget\";\n\nexport type Tick<T> = { readonly value: T; readonly point: Point };\nexport type Box<T> = { readonly value: T; readonly rect: Rect };\n\nexport function vTicks<T>(box: Rect, items: readonly T[]): Tick<T>[] {\n  const { length } = items;\n  if (length < 2) {\n    throw new Error();\n  }\n  return items.map((value, index) => ({\n    value,\n    point: new Point(\n      box.x + (box.width / (length - 1)) * index, // x\n      box.y, // y\n    ).round(),\n  }));\n}\n\nexport function hTicks<T>(box: Rect, items: readonly T[]): Tick<T>[] {\n  const { length } = items;\n  if (length < 2) {\n    throw new Error();\n  }\n  return items.map((value, index) => ({\n    value,\n    point: new Point(\n      box.x, // x\n      box.y + (box.height - (box.height / (length - 1)) * index), // y\n    ).round(),\n  }));\n}\n\nexport function vBoxes<T>(\n  box: Rect,\n  items: readonly T[],\n  { margin = 0 }: { margin?: number } = {},\n): Box<T>[] {\n  const { length } = items;\n  if (length === 0) {\n    throw new Error();\n  }\n  if (length === 1) {\n    return [{ value: items[0], rect: box.round() }];\n  }\n  const size = (box.width + margin) / length;\n  const w = size - margin;\n  const h = box.height;\n  return items.map((value, index) => ({\n    value,\n    rect: new Rect(box.x + index * size, box.y, w, h).round(),\n  }));\n}\n\nexport function hBoxes<T>(\n  box: Rect,\n  items: readonly T[],\n  { margin = 0 }: { margin?: number } = {},\n): Box<T>[] {\n  const { length } = items;\n  if (length === 0) {\n    throw new Error();\n  }\n  if (length === 1) {\n    return [{ value: items[0], rect: box.round() }];\n  }\n  const size = (box.height + margin) / length;\n  const w = box.width;\n  const h = size - margin;\n  return items.map((value, index) => ({\n    value,\n    rect: new Rect(box.x, box.y + index * size, w, h).round(),\n  }));\n}\n","import { type Range } from \"@keybr/math\";\nimport {\n  type GraphicsStyle,\n  type Rect,\n  type ShapeList,\n  Shapes,\n} from \"@keybr/widget\";\nimport { type MessageDescriptor } from \"react-intl\";\nimport { hBoxes, hTicks, vBoxes, vTicks } from \"./geometry.ts\";\nimport { type ChartStyles } from \"./use-chart-styles.ts\";\n\nexport type Edge = \"left\" | \"right\" | \"top\" | \"bottom\";\n\nexport function withStyles(styles: ChartStyles) {\n  function paintGrid(\n    box: Rect,\n    direction: \"vertical\" | \"horizontal\",\n    {\n      lines = 3,\n      style = styles.frame,\n    }: {\n      readonly lines?: number;\n      readonly style?: GraphicsStyle;\n    } = {},\n  ): ShapeList {\n    switch (direction) {\n      case \"vertical\":\n        return Shapes.fill(\n          style,\n          vTicks(box, makeRange(0, lines)).map(({ point }) =>\n            Shapes.rect({\n              x: point.x,\n              y: point.y,\n              width: 1,\n              height: box.height,\n            }),\n          ),\n        );\n      case \"horizontal\":\n        return Shapes.fill(\n          style,\n          hTicks(box, makeRange(0, lines)).map(({ point }) =>\n            Shapes.rect({\n              x: point.x,\n              y: point.y,\n              width: box.width,\n              height: 1,\n            }),\n          ),\n        );\n    }\n  }\n\n  function paintFrame(\n    box: Rect,\n    {\n      style = styles.frame,\n    }: {\n      readonly style?: GraphicsStyle;\n    } = {},\n  ): ShapeList {\n    return Shapes.fill(style, [\n      // top\n      Shapes.rect({\n        x: box.x - 1,\n        y: box.y - 1,\n        width: box.width + 2,\n        height: 1,\n      }),\n      // bottom\n      Shapes.rect({\n        x: box.x - 1,\n        y: box.y + box.height,\n        width: box.width + 2,\n        height: 1,\n      }),\n      // left\n      Shapes.rect({\n        x: box.x - 1,\n        y: box.y - 1,\n        width: 1,\n        height: box.height + 2,\n      }),\n      // right\n      Shapes.rect({\n        x: box.x + box.width,\n        y: box.y - 1,\n        width: 1,\n        height: box.height + 2,\n      }),\n    ]);\n  }\n\n  function paintAxis(\n    box: Rect,\n    edge: Edge,\n    {\n      margin = 20,\n      style = styles.frame,\n    }: {\n      readonly margin?: number;\n      readonly style?: GraphicsStyle;\n    } = {},\n  ): ShapeList {\n    switch (edge) {\n      case \"left\":\n        return Shapes.fill(\n          style,\n          Shapes.rect({\n            x: box.x - 1,\n            y: box.y - margin,\n            width: 3,\n            height: box.height + margin,\n          }),\n        );\n      case \"right\":\n        return Shapes.fill(\n          style,\n          Shapes.rect({\n            x: box.x + box.width + 1,\n            y: box.y - margin,\n            width: 3,\n            height: box.height + margin,\n          }),\n        );\n      case \"top\":\n        return Shapes.fill(\n          style,\n          Shapes.rect({\n            x: box.x,\n            y: box.y - 1,\n            width: box.width + margin,\n            height: 3,\n          }),\n        );\n      case \"bottom\":\n        return Shapes.fill(\n          style,\n          Shapes.rect({\n            x: box.x,\n            y: box.y + box.height - 1,\n            width: box.width + margin,\n            height: 3,\n          }),\n        );\n    }\n  }\n\n  function paintTicks(\n    box: Rect,\n    range: Range,\n    edge: Edge,\n    {\n      lines = 3,\n      fmt = String,\n      style = styles.valueLabel,\n    }: {\n      readonly lines?: number;\n      readonly fmt?: (value: number) => unknown;\n      readonly style?: GraphicsStyle;\n    } = {},\n  ): ShapeList {\n    switch (edge) {\n      case \"left\": {\n        style = { ...style, textAlign: \"right\", textBaseline: \"middle\" };\n        return hTicks(box, makeTicks(range, lines)).map(\n          ({ value, point: { x, y } }) =>\n            Shapes.fillText({\n              value: fmt(value),\n              x: x - 5,\n              y,\n              style,\n            }),\n        );\n      }\n      case \"right\": {\n        style = { ...style, textAlign: \"left\", textBaseline: \"middle\" };\n        return hTicks(box, makeTicks(range, lines)).map(\n          ({ value, point: { x, y } }) =>\n            Shapes.fillText({\n              value: fmt(value),\n              x: x + box.width + 5,\n              y,\n              style,\n            }),\n        );\n      }\n      case \"top\": {\n        style = { ...style, textAlign: \"center\", textBaseline: \"bottom\" };\n        return vTicks(box, makeTicks(range, lines)).map(\n          ({ value, point: { x, y } }) =>\n            Shapes.fillText({\n              value: fmt(value),\n              x,\n              y: y - 5,\n              style,\n            }),\n        );\n      }\n      case \"bottom\": {\n        style = { ...style, textAlign: \"center\", textBaseline: \"top\" };\n        return vTicks(box, makeTicks(range, lines)).map(\n          ({ value, point: { x, y } }) =>\n            Shapes.fillText({\n              value: fmt(value),\n              x,\n              y: y + box.height + 5,\n              style,\n            }),\n        );\n      }\n    }\n  }\n\n  function paintKeyTicks<T>(\n    box: Rect,\n    items: readonly T[],\n    edge: Edge,\n    {\n      margin = 5,\n      fmt = String,\n      style = styles.keyLabel,\n    }: {\n      readonly margin?: number;\n      readonly fmt?: (item: T) => unknown;\n      readonly style?: GraphicsStyle;\n    } = {},\n  ): ShapeList {\n    switch (edge) {\n      case \"left\": {\n        style = { ...style, textAlign: \"right\", textBaseline: \"middle\" };\n        return hBoxes(box, items, { margin }).map(({ value, rect }) =>\n          Shapes.fillText({\n            value: fmt(value),\n            x: box.x - 4,\n            y: rect.cy,\n            style,\n          }),\n        );\n      }\n      case \"right\": {\n        style = { ...style, textAlign: \"left\", textBaseline: \"middle\" };\n        return hBoxes(box, items, { margin }).map(({ value, rect }) =>\n          Shapes.fillText({\n            value: fmt(value),\n            x: box.x + box.width + 4,\n            y: rect.cy,\n            style,\n          }),\n        );\n      }\n      case \"top\": {\n        style = { ...style, textAlign: \"center\", textBaseline: \"bottom\" };\n        return vBoxes(box, items, { margin }).map(({ value, rect }) =>\n          Shapes.fillText({\n            value: fmt(value),\n            x: rect.cx,\n            y: box.y - 3,\n            style,\n          }),\n        );\n      }\n      case \"bottom\": {\n        style = { ...style, textAlign: \"center\", textBaseline: \"top\" };\n        return vBoxes(box, items, { margin }).map(({ value, rect }) =>\n          Shapes.fillText({\n            value: fmt(value),\n            x: rect.cx,\n            y: box.y + box.height + 3,\n            style,\n          }),\n        );\n      }\n    }\n  }\n\n  function paintNoData(\n    box: Rect,\n    formatMessage: (d: MessageDescriptor) => string,\n  ): ShapeList {\n    return [\n      Shapes.fillText({\n        value: formatMessage({\n          id: \"profile.emptyChart.header\",\n          defaultMessage: \"Not enough data\",\n        }),\n        x: box.cx,\n        y: box.cy,\n        style: {\n          ...styles.headerText,\n          textAlign: \"center\",\n          textBaseline: \"bottom\",\n        },\n      }),\n      Shapes.fillText({\n        value: formatMessage({\n          id: \"profile.emptyChart.description\",\n          defaultMessage:\n            \"Complete a few more lessons to get more data points.\",\n        }),\n        x: box.cx,\n        y: box.cy,\n        style: {\n          ...styles.subheaderText,\n          textAlign: \"center\",\n          textBaseline: \"top\",\n        },\n      }),\n    ];\n  }\n\n  return {\n    styles,\n    paintGrid,\n    paintFrame,\n    paintAxis,\n    paintTicks,\n    paintKeyTicks,\n    paintNoData,\n  };\n}\n\nfunction makeTicks({ min, max }: Range, count: number): number[] {\n  if (count < 2) {\n    throw new Error();\n  }\n  const result = [];\n  for (let i = 0; i < count; i++) {\n    result.push(((max - min) / (count - 1)) * i + min);\n  }\n  return result;\n}\n\nfunction makeRange(from: number, to: number): number[] {\n  return new Array<number>(to - from).fill(0).map((_, index) => index + from);\n}\n","// extracted by mini-css-extract-plugin\nvar _1 = \"NC44Rs0CTo\";\nvar _2 = \"pWYo9c1p3G\";\nvar _3 = \"X8blXgLP9h\";\nvar _4 = \"Bl5i8Guvoq\";\nvar _5 = \"iu6Z_P5Q89\";\nvar _6 = \"_LiPGXOtAF\";\nvar _7 = \"n26Ww1YCGs\";\nvar _8 = \"UZw_9tTo2O\";\nvar _9 = \"zJp9DCBlHg\";\nvar _a = \"jWUXD6TfLq\";\nvar _b = \"vCWXyPeDiD\";\nvar _c = \"p4mR9TJfXn\";\nvar _d = \"imKpBel9gF\";\nexport { _1 as \"accuracy\", _2 as \"complexity\", _3 as \"frame\", _4 as \"headerText\", _5 as \"hist_h\", _6 as \"hist_m\", _7 as \"hist_r\", _8 as \"keyFont\", _9 as \"speed\", _a as \"subheaderText\", _b as \"threshold\", _c as \"value\", _d as \"valueFont\" }\n","import { useComputedStyles } from \"@keybr/themes\";\nimport { useMemo } from \"react\";\nimport * as styles from \"./styles.module.less\";\n\nexport type ChartStyles = ReturnType<typeof useChartStyles>;\n\nexport function useChartStyles() {\n  const { computeStyle, computeLineHeight } = useComputedStyles();\n  return useMemo(() => {\n    return {\n      frame: computeStyle(styles.frame),\n      headerText: computeStyle(styles.headerText),\n      subheaderText: computeStyle(styles.subheaderText),\n      keyLabel: computeStyle(styles.value, styles.keyFont),\n      value: computeStyle(styles.value),\n      valueLabel: computeStyle(styles.value, styles.valueFont),\n      threshold: computeStyle(styles.threshold),\n      thresholdLabel: computeStyle(styles.threshold, styles.valueFont),\n      complexity: computeStyle(styles.complexity),\n      accuracy: computeStyle(styles.accuracy),\n      speed: computeStyle(styles.speed),\n      histHit: computeStyle(styles.hist_h),\n      histMiss: computeStyle(styles.hist_m),\n      histRatio: computeStyle(styles.hist_r),\n      lineHeight: computeLineHeight(null),\n    };\n  }, [computeStyle, computeLineHeight]);\n}\n","import { useIntlNumbers } from \"@keybr/intl\";\nimport { type Distribution, Range, Vector } from \"@keybr/math\";\nimport { Canvas, type Rect, type ShapeList, Shapes } from \"@keybr/widget\";\nimport { type ReactNode } from \"react\";\nimport { useIntl } from \"react-intl\";\nimport { Chart, chartArea, type SizeProps } from \"./Chart.tsx\";\nimport { withStyles } from \"./decoration.ts\";\nimport { type Threshold } from \"./types.ts\";\nimport { type ChartStyles, useChartStyles } from \"./use-chart-styles.ts\";\n\nexport function AccuracyHistogram({\n  distribution,\n  thresholds,\n  width,\n  height,\n}: {\n  readonly distribution: Distribution;\n  readonly thresholds: readonly Threshold[];\n} & SizeProps): ReactNode {\n  const styles = useChartStyles();\n  const paint = usePaint(styles, distribution, thresholds);\n  return (\n    <Chart width={width} height={height}>\n      <Canvas paint={chartArea(styles, paint)} />\n    </Chart>\n  );\n}\n\nfunction usePaint(\n  styles: ChartStyles,\n  dist: Distribution,\n  thresholds: readonly Threshold[],\n) {\n  const { formatMessage } = useIntl();\n  const { formatPercents } = useIntlNumbers();\n  const g = withStyles(styles);\n\n  const vIndex = new Vector();\n  const vPmf = new Vector();\n  const vCdf = new Vector();\n  for (const { index, pmf, cdf } of dist) {\n    vIndex.add(index);\n    vPmf.add(pmf);\n    vCdf.add(cdf);\n  }\n  const rIndex = new Range(dist.scale(0.8), dist.scale(1.0));\n  const rPmf = Range.from(vPmf);\n  const rCdf = Range.from(vCdf);\n\n  return (box: Rect): ShapeList => {\n    return [\n      g.paintGrid(box, \"vertical\", { lines: 5 }),\n      g.paintGrid(box, \"horizontal\", { lines: 5 }),\n      paintPmfHistogram(),\n      paintCdfHistogram(),\n      thresholds.length > 0\n        ? [thresholds.map(paintPmfLine), thresholds.map(paintCdfLine)]\n        : g.paintNoData(box, formatMessage),\n      g.paintAxis(box, \"bottom\"),\n      g.paintAxis(box, \"left\"),\n      g.paintTicks(box, rIndex, \"bottom\", {\n        lines: 5,\n        fmt: (value) => formatPercents(dist.unscale(value)),\n        style: styles.valueLabel,\n      }),\n      g.paintTicks(box, rCdf, \"right\", {\n        lines: 5,\n        fmt: formatPercents,\n        style: styles.thresholdLabel,\n      }),\n    ];\n\n    function paintPmfHistogram(): ShapeList {\n      return Shapes.fill(\n        styles.speed,\n        [...rIndex.steps()].map((index) => {\n          const w = Math.ceil(box.width / rIndex.span);\n          const x = Math.round(rIndex.normalize(index, 1) * box.width);\n          const y = Math.round(rPmf.normalize(vPmf.at(index)) * box.height);\n          return Shapes.rect({\n            x: box.x + x,\n            y: box.y + box.height - y,\n            width: w,\n            height: y,\n          });\n        }),\n      );\n    }\n\n    function paintCdfHistogram(): ShapeList {\n      return Shapes.fill(\n        styles.threshold,\n        [...rIndex.steps()].map((index) => {\n          const w = Math.ceil(box.width / rIndex.span);\n          const x = Math.round(rIndex.normalize(index, 1) * box.width);\n          const y = Math.round(rCdf.normalize(vCdf.at(index)) * box.height);\n          return Shapes.rect({\n            x: box.x + x,\n            y: box.y + box.height - y - 1,\n            width: w,\n            height: 1,\n          });\n        }),\n      );\n    }\n\n    function paintPmfLine({\n      label,\n      value,\n    }: {\n      label: string;\n      value: number;\n    }): ShapeList {\n      const index = dist.scale(value);\n      if (index < rIndex.min || index > rIndex.max) {\n        return [];\n      }\n      const x = Math.round(rIndex.normalize(index) * box.width);\n      return [\n        Shapes.fill(styles.value, [\n          Shapes.rect({\n            x: box.x + x,\n            y: box.y - 10,\n            width: 1,\n            height: box.height + 20,\n          }),\n        ]),\n        Shapes.fillText({\n          x: box.x + x + 5,\n          y: box.y + box.height - 5,\n          value: formatPercents(value),\n          style: {\n            ...styles.valueLabel,\n            textAlign: \"left\",\n            textBaseline: \"bottom\",\n          },\n        }),\n      ];\n    }\n\n    function paintCdfLine({\n      label,\n      value,\n    }: {\n      label: string;\n      value: number;\n    }): ShapeList {\n      const index = dist.scale(value);\n      if (index < rIndex.min || index > rIndex.max) {\n        return [];\n      }\n      const y = Math.round(rCdf.normalize(dist.cdf(index)) * box.height);\n      return [\n        Shapes.fill(styles.threshold, [\n          Shapes.rect({\n            x: box.x - 10,\n            y: box.y + box.height - y,\n            width: box.width + 20,\n            height: 1,\n          }),\n        ]),\n        Shapes.fillText({\n          x: box.x + box.width - 5,\n          y: box.y + box.height - y - 5,\n          value: formatPercents(dist.cdf(index)),\n          style: {\n            ...styles.thresholdLabel,\n            textAlign: \"right\",\n            textBaseline: \"bottom\",\n          },\n        }),\n      ];\n    }\n  };\n}\n","export function smooth(data: readonly number[], wnd: number): number[] {\n  const result = [...data];\n  for (let i = 0; i < data.length; i++) {\n    const a = Math.max(0, i - wnd);\n    const b = Math.min(data.length, i + wnd + 1);\n    let sum = 0;\n    for (let j = a; j < b; j++) {\n      sum += data[j];\n    }\n    result[i] = sum / (b - a);\n  }\n  return result;\n}\n\nexport function bucketize(data: readonly number[], buckets: number): number[] {\n  const result = [...data];\n  const bucketSize = data.length / buckets;\n  for (let i = 0; i < buckets; i++) {\n    const a = Math.floor(i * bucketSize);\n    const b = Math.floor((i + 1) * bucketSize);\n    let sum = 0;\n    for (let j = a; j < b; j++) {\n      sum += data[j];\n    }\n    for (let j = a; j < b; j++) {\n      result[j] = sum / (b - a);\n    }\n  }\n  return result;\n}\n","import { Distribution } from \"@keybr/math\";\nimport accuracy from \"./dist_accuracy.json\" with { type: \"json\" };\nimport speed from \"./dist_speed.json\" with { type: \"json\" };\nimport { bucketize, smooth } from \"./util.ts\";\n\nexport function makeSpeedDistribution(): Distribution {\n  return new Distribution(\n    bucketize(smooth(smooth(smooth(speed, 5), 5), 5), 150),\n  );\n}\n\nexport function makeAccuracyDistribution(): Distribution {\n  return new Distribution(smooth(smooth(smooth(accuracy, 5), 5), 5));\n}\n","import { type Model, type Range, type Vector } from \"@keybr/math\";\nimport {\n  type Graphics,\n  type GraphicsStyle,\n  type Rect,\n  type ShapeList,\n  Shapes,\n} from \"@keybr/widget\";\nimport { vBoxes } from \"./geometry.ts\";\n\nexport type Projection = {\n  readonly box: Rect;\n  readonly xmin: number;\n  readonly xmax: number;\n  readonly ymin: number;\n  readonly ymax: number;\n  readonly x: (v: number) => number;\n  readonly y: (v: number) => number;\n};\n\nexport function projection(box: Rect, xr: Range, yr: Range): Projection {\n  const { x, y, width, height } = box;\n  const xmin = xr.min;\n  const xmax = xr.max;\n  const ymin = yr.min;\n  const ymax = yr.max;\n  const dx = xmax - xmin;\n  const dy = ymax - ymin;\n  return {\n    box,\n    xmin,\n    xmax,\n    ymin,\n    ymax,\n    x: (v: number): number => x + ((v - xmin) / dx) * width,\n    y: (v: number): number => y + (height - ((v - ymin) / dy) * height),\n  };\n}\n\nexport function paintScatterPlot(\n  proj: Projection,\n  dx: Vector,\n  dy: Vector,\n  {\n    style,\n  }: {\n    readonly style: GraphicsStyle;\n  },\n): ShapeList {\n  return (g: Graphics): void => {\n    g.withStyle(style, () => {\n      const r = Math.round(\n        Math.min(Math.max(proj.box.width / dx.length, 2), 6),\n      );\n      for (let i = 0; i < dx.length; i++) {\n        g.fillCircle(proj.x(dx.at(i)), proj.y(dy.at(i)), r);\n      }\n    });\n  };\n}\n\nexport function paintCurve(\n  proj: Projection,\n  model: Model,\n  {\n    style,\n  }: {\n    readonly style: GraphicsStyle;\n  },\n): ShapeList {\n  return (g: Graphics): void => {\n    g.withStyle(style, () => {\n      const d = proj.box.width / 20;\n      const s = (proj.xmax - proj.xmin) / d;\n      for (let i = 0; i < d; i++) {\n        const a = proj.xmin + i * s;\n        const b = proj.xmin + (i + 1) * s;\n        g.strokeLine(\n          proj.x(a),\n          proj.y(model.eval(a)),\n          proj.x(b),\n          proj.y(model.eval(b)),\n        );\n      }\n    });\n  };\n}\n\nexport function paintHistogram(\n  box: Rect,\n  data: Vector,\n  range: Range,\n  {\n    margin = 5,\n    style,\n  }: {\n    readonly margin?: number;\n    readonly style: GraphicsStyle;\n  },\n): ShapeList {\n  const { min, max } = range;\n  return Shapes.fill(\n    style,\n    vBoxes(box, [...data], { margin }).map(({ value, rect }) => {\n      if (value > 0) {\n        const width = rect.width;\n        const height = Math.round(((value - min) / (max - min)) * box.height);\n        const x = rect.x;\n        const y = Math.round(box.y + box.height - height);\n        return Shapes.rect({ x, y, width, height });\n      } else {\n        return null;\n      }\n    }),\n  );\n}\n","import { useIntlNumbers } from \"@keybr/intl\";\nimport { type LearningRate, type LessonKey, Target } from \"@keybr/lesson\";\nimport { useFormatter } from \"@keybr/lesson-ui\";\nimport { constModel, Range } from \"@keybr/math\";\nimport { useSettings } from \"@keybr/settings\";\nimport { Canvas, type Rect, type ShapeList, Shapes } from \"@keybr/widget\";\nimport { type ReactNode } from \"react\";\nimport { useIntl } from \"react-intl\";\nimport { Chart, chartArea, type SizeProps } from \"./Chart.tsx\";\nimport { withStyles } from \"./decoration.ts\";\nimport { paintCurve, paintScatterPlot, projection } from \"./graph.ts\";\nimport { type ChartStyles, useChartStyles } from \"./use-chart-styles.ts\";\n\nexport function KeyDetailsChart({\n  lessonKey,\n  learningRate,\n  width,\n  height,\n}: {\n  readonly lessonKey: LessonKey;\n  readonly learningRate: LearningRate | null;\n} & SizeProps): ReactNode {\n  const styles = useChartStyles();\n  const paint = usePaint(styles, lessonKey, learningRate);\n  return (\n    <Chart width={width} height={height}>\n      <Canvas paint={chartArea(styles, paint)} />\n    </Chart>\n  );\n}\n\nfunction usePaint(\n  styles: ChartStyles,\n  lessonKey: LessonKey,\n  learningRate: LearningRate | null,\n) {\n  const { formatMessage } = useIntl();\n  const { formatInteger } = useIntlNumbers();\n  const { formatSpeed } = useFormatter();\n  const { settings } = useSettings();\n  const target = new Target(settings);\n  const g = withStyles(styles);\n\n  if (learningRate == null) {\n    return (box: Rect): ShapeList => {\n      return [\n        g.paintGrid(box, \"vertical\", { lines: 5 }),\n        g.paintGrid(box, \"horizontal\", { lines: 5 }),\n        g.paintAxis(box, \"left\"),\n        g.paintAxis(box, \"bottom\"),\n        g.paintNoData(box, formatMessage),\n      ];\n    };\n  }\n\n  const { vIndex, vSpeed, mSpeed } = learningRate;\n\n  const rIndex = Range.from(vIndex);\n  const rSpeed = Range.from(vSpeed);\n  rSpeed.min = target.targetSpeed;\n  rSpeed.max = target.targetSpeed;\n  rSpeed.round(5);\n\n  let now = 0;\n  if ((lessonKey.bestConfidence ?? 0) < 1) {\n    now = rIndex.max;\n    rIndex.max = now + 10;\n  }\n\n  return (box: Rect): ShapeList => {\n    const proj = projection(box, rIndex, rSpeed);\n    return [\n      g.paintGrid(box, \"vertical\", { lines: 5 }),\n      g.paintGrid(box, \"horizontal\", { lines: 5 }),\n      now > 0 && paintThresholdLine({ label: \"Now\", value: now }),\n      paintScatterPlot(proj, vIndex, vSpeed, {\n        style: styles.speed,\n      }),\n      paintCurve(proj, mSpeed, {\n        style: {\n          ...styles.speed,\n          lineWidth: 2,\n        },\n      }),\n      paintCurve(proj, constModel(target.targetSpeed), {\n        style: {\n          ...styles.threshold,\n          lineWidth: 2,\n        },\n      }),\n      g.paintAxis(box, \"left\"),\n      g.paintAxis(box, \"bottom\"),\n      g.paintTicks(box, rSpeed, \"left\", { fmt: formatSpeed }),\n      g.paintTicks(box, rIndex, \"bottom\", { lines: 5, fmt: formatInteger }),\n    ];\n\n    function paintThresholdLine({\n      label,\n      value,\n    }: {\n      label: string;\n      value: number;\n    }): ShapeList {\n      const x = proj.x(value);\n      return [\n        Shapes.fill(styles.threshold, [\n          Shapes.rect({\n            x: Math.round(x),\n            y: box.y - 10,\n            width: 1,\n            height: box.height + 20,\n          }),\n        ]),\n        Shapes.fillText({\n          x: Math.round(x) + 2,\n          y: box.y - 1,\n          value: label,\n          style: {\n            ...styles.thresholdLabel,\n            textAlign: \"left\",\n            textBaseline: \"bottom\",\n          },\n        }),\n      ];\n    }\n  };\n}\n","import { Histogram, KeySet } from \"@keybr/math\";\nimport { type KeyStatsMap } from \"@keybr/result\";\n\nexport function keyUsage(keyStatsMap: KeyStatsMap) {\n  const { letters } = keyStatsMap;\n  const keySet = new KeySet(letters);\n  const hit = new Histogram(keySet);\n  const miss = new Histogram(keySet);\n  const ratio = new Histogram(keySet);\n  for (const letter of letters) {\n    const keyStats = keyStatsMap.get(letter);\n    for (const { hitCount, missCount } of keyStats.samples) {\n      hit.add(letter, hitCount);\n      miss.add(letter, missCount);\n    }\n  }\n  for (const letter of letters) {\n    const hitCount = hit.get(letter);\n    const missCount = miss.get(letter);\n    if (hitCount > 0 && missCount > 0) {\n      ratio.set(letter, missCount / hitCount);\n    }\n  }\n  return { keySet, hit, miss, ratio };\n}\n","import { type Keyboard } from \"@keybr/keyboard\";\nimport {\n  flatten,\n  HeatmapLayer,\n  KeyLayer,\n  VirtualKeyboard,\n} from \"@keybr/keyboard-ui\";\nimport { type KeyStatsMap } from \"@keybr/result\";\nimport { type ReactNode } from \"react\";\nimport { keyUsage } from \"./keyusage.ts\";\n\nexport function KeyFrequencyHeatmap({\n  keyStatsMap,\n  keyboard,\n}: {\n  readonly keyStatsMap: KeyStatsMap;\n  readonly keyboard: Keyboard;\n}): ReactNode {\n  const { hit, miss } = keyUsage(keyStatsMap);\n  return (\n    <VirtualKeyboard keyboard={keyboard}>\n      <KeyLayer />\n      <HeatmapLayer histogram={flatten(miss)} modifier=\"m\" />\n      <HeatmapLayer histogram={flatten(hit)} modifier=\"h\" />\n    </VirtualKeyboard>\n  );\n}\n","import { hasData, Range } from \"@keybr/math\";\nimport { type KeyStatsMap } from \"@keybr/result\";\nimport { Canvas, Rect, type ShapeList } from \"@keybr/widget\";\nimport { type ReactNode } from \"react\";\nimport { useIntl } from \"react-intl\";\nimport { Chart, chartArea, type SizeProps } from \"./Chart.tsx\";\nimport { withStyles } from \"./decoration.ts\";\nimport { paintHistogram } from \"./graph.ts\";\nimport { keyUsage } from \"./keyusage.ts\";\nimport { type ChartStyles, useChartStyles } from \"./use-chart-styles.ts\";\n\nexport function KeyFrequencyHistogram({\n  keyStatsMap,\n  width,\n  height,\n}: {\n  readonly keyStatsMap: KeyStatsMap;\n} & SizeProps): ReactNode {\n  const styles = useChartStyles();\n  const paint = usePaint(styles, keyStatsMap);\n  return (\n    <Chart width={width} height={height}>\n      <Canvas paint={chartArea(styles, paint)} />\n    </Chart>\n  );\n}\n\nfunction usePaint(styles: ChartStyles, keyStatsMap: KeyStatsMap) {\n  const { formatMessage } = useIntl();\n  const g = withStyles(styles);\n  const { letters, results } = keyStatsMap;\n\n  if (!hasData(results)) {\n    return (box: Rect): ShapeList => {\n      const [boxHit, boxMiss, boxRatio] = boxes(box);\n      return [\n        g.paintFrame(boxHit),\n        g.paintFrame(boxMiss),\n        g.paintFrame(boxRatio),\n        g.paintKeyTicks(box, letters, \"bottom\"),\n        g.paintNoData(boxHit, formatMessage),\n      ];\n    };\n  }\n\n  const { hit, miss, ratio } = keyUsage(keyStatsMap);\n  const vHit = hit.asVector();\n  const vMiss = miss.asVector();\n  const vRatio = ratio.asVector();\n  const rHit = Range.from(vHit);\n  const rMiss = Range.from(vMiss);\n  const rRatio = Range.from(vRatio);\n  return (box: Rect): ShapeList => {\n    const [boxHit, boxMiss, boxRatio] = boxes(box);\n    return [\n      paintHistogram(boxHit, vHit, rHit, {\n        style: styles.histHit,\n      }),\n      paintHistogram(boxMiss, vMiss, rMiss, {\n        style: styles.histMiss,\n      }),\n      paintHistogram(boxRatio, vRatio, rRatio, {\n        style: styles.histRatio,\n      }),\n      g.paintFrame(boxHit),\n      g.paintFrame(boxMiss),\n      g.paintFrame(boxRatio),\n      g.paintKeyTicks(box, letters, \"bottom\"),\n    ];\n  };\n}\n\nfunction boxes(box: Rect) {\n  const boxHit = new Rect(box.x, box.y, box.width, box.height * 0.34);\n  const boxMiss = new Rect(\n    box.x,\n    boxHit.y + boxHit.height + 10,\n    box.width,\n    box.height * 0.33 - 10,\n  );\n  const boxRatio = new Rect(\n    box.x,\n    boxMiss.y + boxMiss.height + 10,\n    box.width,\n    box.height * 0.33 - 10,\n  );\n  return [boxHit.round(), boxMiss.round(), boxRatio.round()];\n}\n","import { useIntlNumbers } from \"@keybr/intl\";\nimport { Target } from \"@keybr/lesson\";\nimport { useFormatter } from \"@keybr/lesson-ui\";\nimport {\n  constModel,\n  hasData,\n  linearRegression,\n  Range,\n  smooth,\n  Vector,\n} from \"@keybr/math\";\nimport { type KeySample, timeToSpeed } from \"@keybr/result\";\nimport { useSettings } from \"@keybr/settings\";\nimport { Canvas, type Rect, type ShapeList } from \"@keybr/widget\";\nimport { type ReactNode } from \"react\";\nimport { useIntl } from \"react-intl\";\nimport { Chart, chartArea, type SizeProps } from \"./Chart.tsx\";\nimport { withStyles } from \"./decoration.ts\";\nimport { paintCurve, paintScatterPlot, projection } from \"./graph.ts\";\nimport { type ChartStyles, useChartStyles } from \"./use-chart-styles.ts\";\n\nexport function KeySpeedChart({\n  samples,\n  smoothness,\n  width,\n  height,\n}: {\n  readonly samples: readonly KeySample[];\n  readonly smoothness: number;\n} & SizeProps): ReactNode {\n  const styles = useChartStyles();\n  const paint = usePaint(styles, samples, smoothness);\n  return (\n    <Chart width={width} height={height}>\n      <Canvas paint={chartArea(styles, paint)} />\n    </Chart>\n  );\n}\n\nfunction usePaint(\n  styles: ChartStyles,\n  samples: readonly KeySample[],\n  smoothness: number,\n) {\n  const { formatMessage } = useIntl();\n  const { formatInteger } = useIntlNumbers();\n  const { formatSpeed } = useFormatter();\n  const { settings } = useSettings();\n  const target = new Target(settings);\n  const g = withStyles(styles);\n\n  if (!hasData(samples)) {\n    return (box: Rect): ShapeList => {\n      return [\n        g.paintGrid(box, \"vertical\", { lines: 5 }),\n        g.paintGrid(box, \"horizontal\", { lines: 5 }),\n        g.paintAxis(box, \"left\"),\n        g.paintAxis(box, \"bottom\"),\n        g.paintNoData(box, formatMessage),\n      ];\n    };\n  }\n\n  const vIndex = new Vector();\n  const vSpeed = new Vector();\n  const sSpeed = smooth(smoothness);\n  for (let index = 0; index < samples.length; index++) {\n    const sample = samples[index];\n    vIndex.add(index + 1);\n    vSpeed.add(sSpeed(timeToSpeed(sample.timeToType)));\n  }\n  const rIndex = Range.from(vIndex);\n  const rSpeed = Range.from(vSpeed);\n  rSpeed.min = target.targetSpeed;\n  rSpeed.max = target.targetSpeed;\n  rSpeed.round(5);\n\n  const mSpeed = linearRegression(vIndex, vSpeed);\n\n  return (box: Rect): ShapeList => {\n    const proj = projection(box, rIndex, rSpeed);\n    return [\n      g.paintGrid(box, \"vertical\", { lines: 5 }),\n      g.paintGrid(box, \"horizontal\", { lines: 5 }),\n      paintScatterPlot(proj, vIndex, vSpeed, {\n        style: styles.speed,\n      }),\n      paintCurve(proj, mSpeed, {\n        style: {\n          ...styles.speed,\n          lineWidth: 2,\n        },\n      }),\n      paintCurve(proj, constModel(target.targetSpeed), {\n        style: {\n          ...styles.threshold,\n          lineWidth: 2,\n        },\n      }),\n      g.paintAxis(box, \"left\"),\n      g.paintAxis(box, \"bottom\"),\n      g.paintTicks(box, rSpeed, \"left\", { fmt: formatSpeed }),\n      g.paintTicks(box, rIndex, \"bottom\", { lines: 5, fmt: formatInteger }),\n    ];\n  };\n}\n","import { useFormatter } from \"@keybr/lesson-ui\";\nimport { hasData, Histogram, KeySet, Range } from \"@keybr/math\";\nimport { type KeyStatsMap, timeToSpeed } from \"@keybr/result\";\nimport { Canvas, type Rect, type ShapeList } from \"@keybr/widget\";\nimport { type ReactNode } from \"react\";\nimport { useIntl } from \"react-intl\";\nimport { Chart, chartArea, type SizeProps } from \"./Chart.tsx\";\nimport { withStyles } from \"./decoration.ts\";\nimport { paintHistogram } from \"./graph.ts\";\nimport { type ChartStyles, useChartStyles } from \"./use-chart-styles.ts\";\n\nexport function KeySpeedHistogram({\n  keyStatsMap,\n  width,\n  height,\n}: {\n  readonly keyStatsMap: KeyStatsMap;\n} & SizeProps): ReactNode {\n  const styles = useChartStyles();\n  const paint = usePaint(styles, keyStatsMap);\n  return (\n    <Chart width={width} height={height}>\n      <Canvas paint={chartArea(styles, paint)} />\n    </Chart>\n  );\n}\n\nfunction usePaint(styles: ChartStyles, keyStatsMap: KeyStatsMap) {\n  const { formatMessage } = useIntl();\n  const { formatSpeed } = useFormatter();\n  const g = withStyles(styles);\n  const { letters, results } = keyStatsMap;\n\n  if (!hasData(results)) {\n    return (box: Rect): ShapeList => {\n      return [\n        g.paintFrame(box),\n        g.paintKeyTicks(box, letters, \"bottom\"),\n        g.paintNoData(box, formatMessage),\n      ];\n    };\n  }\n\n  const keySet = new KeySet(letters);\n  const hSpeed = new Histogram(keySet);\n  for (const letter of letters) {\n    const keyStats = keyStatsMap.get(letter);\n    const { timeToType } = keyStats;\n    if (timeToType != null) {\n      hSpeed.set(letter, timeToSpeed(timeToType));\n    }\n  }\n  const vSpeed = hSpeed.asVector();\n  const rSpeed = Range.from(vSpeed).round(5);\n  rSpeed.min = 0;\n  return (box: Rect): ShapeList => {\n    return [\n      g.paintGrid(box, \"horizontal\"),\n      paintHistogram(box, vSpeed, rSpeed, { style: styles.speed }),\n      g.paintFrame(box),\n      g.paintTicks(box, rSpeed, \"left\", { fmt: formatSpeed }),\n      g.paintKeyTicks(box, letters, \"bottom\"),\n    ];\n  };\n}\n","// extracted by mini-css-extract-plugin\nvar _1 = \"g628cqG0th wJu5g9Lwtj\";\nvar _2 = \"mPp_FEWRe1 wJu5g9Lwtj\";\nvar _3 = \"H07fuJxw7v wJu5g9Lwtj\";\nvar _4 = \"cTnUf13ztV wJu5g9Lwtj\";\nvar _5 = \"arGGAYEazN wJu5g9Lwtj\";\nvar _6 = \"ff4ieFYodQ wJu5g9Lwtj\";\nvar _7 = \"wJu5g9Lwtj\";\nvar _8 = \"_GMFvQ8ywW wJu5g9Lwtj\";\nvar _9 = \"d2j9W4AaiM wJu5g9Lwtj\";\nvar _a = \"jj45bKZkwX wJu5g9Lwtj\";\nexport { _1 as \"accuracy\", _2 as \"complexity\", _3 as \"fast\", _4 as \"histogram_h\", _5 as \"histogram_m\", _6 as \"histogram_r\", _7 as \"root\", _8 as \"slow\", _9 as \"speed\", _a as \"threshold\" }\n","import { type ReactNode } from \"react\";\nimport * as styles from \"./Marker.module.less\";\n\ntype Props = {\n  readonly type:\n    | \"slow\"\n    | \"fast\"\n    | \"speed\"\n    | \"accuracy\"\n    | \"complexity\"\n    | \"threshold\"\n    | \"histogram-h\"\n    | \"histogram-m\"\n    | \"histogram-r\";\n};\n\nexport function Marker({ type }: Props): ReactNode {\n  let cn;\n  switch (type) {\n    case \"slow\":\n      cn = styles.slow;\n      break;\n    case \"fast\":\n      cn = styles.fast;\n      break;\n    case \"speed\":\n      cn = styles.speed;\n      break;\n    case \"accuracy\":\n      cn = styles.accuracy;\n      break;\n    case \"complexity\":\n      cn = styles.complexity;\n      break;\n    case \"threshold\":\n      cn = styles.threshold;\n      break;\n    case \"histogram-h\":\n      cn = styles.histogram_h;\n      break;\n    case \"histogram-m\":\n      cn = styles.histogram_m;\n      break;\n    case \"histogram-r\":\n      cn = styles.histogram_r;\n      break;\n  }\n  return <span className={cn}>{\"\\u00A0\"}</span>;\n}\n","import { useIntlNumbers } from \"@keybr/intl\";\nimport { Target } from \"@keybr/lesson\";\nimport { useKeyStyles } from \"@keybr/lesson-ui\";\nimport { hasData, Range, resample, Vector } from \"@keybr/math\";\nimport { type KeyStats, type KeyStatsMap } from \"@keybr/result\";\nimport { useSettings } from \"@keybr/settings\";\nimport {\n  Canvas,\n  type Graphics,\n  type Rect,\n  type ShapeList,\n  Shapes,\n} from \"@keybr/widget\";\nimport { type ReactNode } from \"react\";\nimport { useIntl } from \"react-intl\";\nimport { Chart, chartArea, type SizeProps } from \"./Chart.tsx\";\nimport { withStyles } from \"./decoration.ts\";\nimport { hBoxes } from \"./geometry.ts\";\nimport { type ChartStyles, useChartStyles } from \"./use-chart-styles.ts\";\n\nexport function ProgressOverviewChart({\n  keyStatsMap,\n  width,\n  height,\n}: {\n  readonly keyStatsMap: KeyStatsMap;\n} & SizeProps): ReactNode {\n  const styles = useChartStyles();\n  const paint = usePaint(styles, keyStatsMap);\n  return (\n    <Chart width={width} height={height}>\n      <Canvas paint={chartArea(styles, paint)} />\n    </Chart>\n  );\n}\n\nfunction usePaint(styles: ChartStyles, keyStatsMap: KeyStatsMap) {\n  const { formatMessage } = useIntl();\n  const { formatInteger } = useIntlNumbers();\n  const { settings } = useSettings();\n  const { confidenceColor } = useKeyStyles();\n  const target = new Target(settings);\n  const g = withStyles(styles);\n  const { letters, results } = keyStatsMap;\n\n  const vIndex = new Vector();\n  for (let index = 0; index < results.length; index++) {\n    vIndex.add(index + 1);\n  }\n  const rIndex = Range.from(vIndex);\n\n  return (box: Rect): ShapeList => {\n    const boxes = hBoxes(box, letters, { margin: 4 });\n    return [\n      paintGrid1(),\n      hasData(results)\n        ? [\n            g.paintGrid(box, \"vertical\", { lines: 5 }),\n            g.paintTicks(box, rIndex, \"bottom\", {\n              lines: 5,\n              fmt: formatInteger,\n            }),\n            paintGraph,\n          ]\n        : g.paintNoData(box, formatMessage),\n      g.paintFrame(box),\n      g.paintKeyTicks(box, letters, \"left\", { margin: 4 }),\n    ];\n\n    function paintGrid1(): ShapeList {\n      return Shapes.fill(styles.frame, [\n        boxes.map(({ rect }) =>\n          Shapes.rect({\n            x: rect.x,\n            y: rect.cy,\n            width: rect.width,\n            height: 1,\n          }),\n        ),\n      ]);\n    }\n\n    function paintGraph(g: Graphics): void {\n      for (const {\n        value: letter,\n        rect: { x, y, width, height },\n      } of boxes) {\n        const keyData = resample(\n          makeKeyData(keyStatsMap.get(letter)),\n          Math.floor(width),\n        );\n        for (let i = 0; i < keyData.length; i++) {\n          const value = keyData[i];\n          if (value === value) {\n            g.fillStyle = confidenceColor(value);\n            g.fillRect(x + i, y, 1, height);\n          }\n        }\n      }\n    }\n\n    function makeKeyData({ samples }: KeyStats): number[] {\n      const data = new Array<number>(results.length).fill(NaN);\n      for (const { index, timeToType } of samples) {\n        if (timeToType != null) {\n          data[index] = target.confidence(timeToType);\n        }\n      }\n      return data;\n    }\n  };\n}\n","import { useIntlNumbers } from \"@keybr/intl\";\nimport { useFormatter } from \"@keybr/lesson-ui\";\nimport { hasData, linearRegression, Range, smooth, Vector } from \"@keybr/math\";\nimport { type Result } from \"@keybr/result\";\nimport { Canvas, type Rect, type ShapeList } from \"@keybr/widget\";\nimport { type ReactNode } from \"react\";\nimport { useIntl } from \"react-intl\";\nimport { Chart, chartArea, type SizeProps } from \"./Chart.tsx\";\nimport { withStyles } from \"./decoration.ts\";\nimport { paintCurve, paintScatterPlot, projection } from \"./graph.ts\";\nimport { type ChartStyles, useChartStyles } from \"./use-chart-styles.ts\";\n\nexport function SpeedChart({\n  results,\n  smoothness,\n  width,\n  height,\n}: {\n  readonly results: readonly Result[];\n  readonly smoothness: number;\n} & SizeProps): ReactNode {\n  const styles = useChartStyles();\n  const paint = usePaint(styles, results, smoothness);\n  return (\n    <Chart width={width} height={height}>\n      <Canvas paint={chartArea(styles, paint)} />\n    </Chart>\n  );\n}\n\nfunction usePaint(\n  styles: ChartStyles,\n  results: readonly Result[],\n  smoothness: number,\n) {\n  const { formatMessage } = useIntl();\n  const { formatInteger, formatPercents } = useIntlNumbers();\n  const { formatSpeed } = useFormatter();\n  const g = withStyles(styles);\n\n  if (!hasData(results)) {\n    return (box: Rect): ShapeList => {\n      return [\n        g.paintGrid(box, \"vertical\", { lines: 5 }),\n        g.paintGrid(box, \"horizontal\", { lines: 5 }),\n        g.paintAxis(box, \"left\"),\n        g.paintAxis(box, \"bottom\"),\n        g.paintNoData(box, formatMessage),\n      ];\n    };\n  }\n\n  const vIndex = new Vector();\n  const vComplexity = new Vector();\n  const sComplexity = smooth(smoothness);\n  const vAccuracy = new Vector();\n  const sAccuracy = smooth(smoothness);\n  const vSpeed = new Vector();\n  const sSpeed = smooth(smoothness);\n  for (let index = 0; index < results.length; index++) {\n    const result = results[index];\n    vIndex.add(index + 1);\n    vComplexity.add(sComplexity(result.histogram.complexity));\n    vAccuracy.add(sAccuracy(result.accuracy));\n    vSpeed.add(sSpeed(result.speed));\n  }\n  const rIndex = Range.from(vIndex);\n  const rComplexity = Range.from(vComplexity).round(1);\n  const rAccuracy = Range.from(vAccuracy).round(0.01);\n  const rSpeed = Range.from(vSpeed).round(5);\n  rComplexity.min = 3;\n\n  const mSpeed = linearRegression(vIndex, vSpeed);\n\n  return (box: Rect): ShapeList => {\n    const projComplexity = projection(box, rIndex, rComplexity);\n    const projAccuracy = projection(box, rIndex, rAccuracy);\n    const projSpeed = projection(box, rIndex, rSpeed);\n    return [\n      g.paintGrid(box, \"vertical\", { lines: 5 }),\n      g.paintGrid(box, \"horizontal\", { lines: 5 }),\n      paintScatterPlot(projComplexity, vIndex, vComplexity, {\n        style: styles.complexity,\n      }),\n      paintScatterPlot(projAccuracy, vIndex, vAccuracy, {\n        style: styles.accuracy,\n      }),\n      paintScatterPlot(projSpeed, vIndex, vSpeed, {\n        style: styles.speed,\n      }),\n      paintCurve(projSpeed, mSpeed, {\n        style: {\n          ...styles.speed,\n          lineWidth: 2,\n        },\n      }),\n      g.paintAxis(box, \"left\"),\n      g.paintAxis(box, \"bottom\"),\n      g.paintTicks(box, rIndex, \"bottom\", { lines: 5, fmt: formatInteger }),\n      g.paintTicks(box, rSpeed, \"left\", { fmt: formatSpeed }),\n      g.paintTicks(box, rAccuracy, \"right\", { fmt: formatPercents }),\n    ];\n  };\n}\n","import { useIntlNumbers } from \"@keybr/intl\";\nimport { useFormatter } from \"@keybr/lesson-ui\";\nimport { type Distribution, Range, Vector } from \"@keybr/math\";\nimport { Canvas, type Rect, type ShapeList, Shapes } from \"@keybr/widget\";\nimport { type ReactNode } from \"react\";\nimport { useIntl } from \"react-intl\";\nimport { Chart, chartArea, type SizeProps } from \"./Chart.tsx\";\nimport { withStyles } from \"./decoration.ts\";\nimport { type Threshold } from \"./types.ts\";\nimport { type ChartStyles, useChartStyles } from \"./use-chart-styles.ts\";\n\nexport function SpeedHistogram({\n  distribution,\n  thresholds,\n  width,\n  height,\n}: {\n  readonly distribution: Distribution;\n  readonly thresholds: readonly Threshold[];\n} & SizeProps): ReactNode {\n  const styles = useChartStyles();\n  const paint = usePaint(styles, distribution, thresholds);\n  return (\n    <Chart width={width} height={height}>\n      <Canvas paint={chartArea(styles, paint)} />\n    </Chart>\n  );\n}\n\nfunction usePaint(\n  styles: ChartStyles,\n  dist: Distribution,\n  thresholds: readonly Threshold[],\n) {\n  const { formatMessage } = useIntl();\n  const { formatPercents } = useIntlNumbers();\n  const { formatSpeed } = useFormatter();\n  const g = withStyles(styles);\n\n  const vIndex = new Vector();\n  const vPmf = new Vector();\n  const vCdf = new Vector();\n  for (const { index, pmf, cdf } of dist) {\n    vIndex.add(index);\n    vPmf.add(pmf);\n    vCdf.add(cdf);\n  }\n  const rIndex = Range.from(vIndex);\n  const rPmf = Range.from(vPmf);\n  const rCdf = Range.from(vCdf);\n\n  return (box: Rect): ShapeList => {\n    return [\n      g.paintGrid(box, \"vertical\", { lines: 5 }),\n      g.paintGrid(box, \"horizontal\", { lines: 5 }),\n      paintPmfHistogram(),\n      paintCdfHistogram(),\n      thresholds.length > 0\n        ? [thresholds.map(paintPmfLine), thresholds.map(paintCdfLine)]\n        : g.paintNoData(box, formatMessage),\n      g.paintAxis(box, \"bottom\"),\n      g.paintAxis(box, \"left\"),\n      g.paintTicks(box, rIndex, \"bottom\", {\n        lines: 5,\n        fmt: formatSpeed,\n        style: styles.valueLabel,\n      }),\n      g.paintTicks(box, rCdf, \"right\", {\n        lines: 5,\n        fmt: formatPercents,\n        style: styles.thresholdLabel,\n      }),\n    ];\n\n    function paintPmfHistogram(): ShapeList {\n      return Shapes.fill(\n        styles.speed,\n        [...rIndex.steps()].map((index) => {\n          const w = Math.ceil(box.width / rIndex.span);\n          const x = Math.round(rIndex.normalize(index, 1) * box.width);\n          const y = Math.round(rPmf.normalize(vPmf.at(index)) * box.height);\n          return Shapes.rect({\n            x: box.x + x,\n            y: box.y + box.height - y,\n            width: w,\n            height: y,\n          });\n        }),\n      );\n    }\n\n    function paintCdfHistogram(): ShapeList {\n      return Shapes.fill(\n        styles.threshold,\n        [...rIndex.steps()].map((index) => {\n          const w = Math.ceil(box.width / rIndex.span);\n          const x = Math.round(rIndex.normalize(index, 1) * box.width);\n          const y = Math.round(rCdf.normalize(vCdf.at(index)) * box.height);\n          return Shapes.rect({\n            x: box.x + x,\n            y: box.y + box.height - y - 1,\n            width: w,\n            height: 1,\n          });\n        }),\n      );\n    }\n\n    function paintPmfLine({\n      label,\n      value,\n    }: {\n      label: string;\n      value: number;\n    }): ShapeList {\n      if (value < rIndex.min || value > rIndex.max) {\n        return [];\n      }\n      const x = Math.round(rIndex.normalize(value) * box.width);\n      return [\n        Shapes.fill(styles.value, [\n          Shapes.rect({\n            x: box.x + x,\n            y: box.y - 10,\n            width: 1,\n            height: box.height + 20,\n          }),\n        ]),\n        Shapes.fillText({\n          x: box.x + x + 5,\n          y: box.y + box.height - 5,\n          value: formatSpeed(value),\n          style: {\n            ...styles.valueLabel,\n            textAlign: \"left\",\n            textBaseline: \"bottom\",\n          },\n        }),\n      ];\n    }\n\n    function paintCdfLine({\n      label,\n      value,\n    }: {\n      label: string;\n      value: number;\n    }): ShapeList {\n      if (value < rIndex.min || value > rIndex.max) {\n        return [];\n      }\n      const y = Math.round(rCdf.normalize(dist.cdf(value)) * box.height);\n      return [\n        Shapes.fill(styles.threshold, [\n          Shapes.rect({\n            x: box.x - 10,\n            y: box.y + box.height - y,\n            width: box.width + 20,\n            height: 1,\n          }),\n        ]),\n        Shapes.fillText({\n          x: box.x + box.width - 5,\n          y: box.y + box.height - y - 5,\n          value: formatPercents(dist.cdf(value)),\n          style: {\n            ...styles.thresholdLabel,\n            textAlign: \"right\",\n            textBaseline: \"bottom\",\n          },\n        }),\n      ];\n    }\n  };\n}\n","import { useFormatter } from \"@keybr/lesson-ui\";\nimport { Range, Vector } from \"@keybr/math\";\nimport { timeToSpeed } from \"@keybr/result\";\nimport { Canvas, type Rect, type ShapeList, Shapes } from \"@keybr/widget\";\nimport { type ReactNode } from \"react\";\nimport { Chart, chartArea, type SizeProps } from \"./Chart.tsx\";\nimport { withStyles } from \"./decoration.ts\";\nimport { bucketize } from \"./dist/util.ts\";\nimport { type TimeToType } from \"./types.ts\";\nimport { type ChartStyles, useChartStyles } from \"./use-chart-styles.ts\";\n\nexport function TimeToTypeHistogram({\n  steps,\n  width,\n  height,\n}: {\n  readonly steps: readonly TimeToType[];\n} & SizeProps): ReactNode {\n  const styles = useChartStyles();\n  const paint = usePaint(styles, steps);\n  return (\n    <Chart width={width} height={height}>\n      <Canvas paint={chartArea(styles, paint)} />\n    </Chart>\n  );\n}\n\nfunction usePaint(styles: ChartStyles, steps: readonly TimeToType[]) {\n  const { formatSpeed } = useFormatter();\n  const g = withStyles(styles);\n\n  const histogram = buildHistogram(steps);\n\n  const vIndex = new Vector();\n  const vValue = new Vector();\n  for (let index = 0; index < histogram.length; index++) {\n    vIndex.add(index);\n    vValue.add(histogram[index]);\n  }\n  const rIndex = Range.from(vIndex);\n  const rValue = Range.from(vValue);\n\n  return (box: Rect): ShapeList => {\n    return [\n      g.paintGrid(box, \"vertical\", { lines: 5 }),\n      g.paintGrid(box, \"horizontal\", { lines: 5 }),\n      paintHistogram(),\n      g.paintAxis(box, \"bottom\"),\n      g.paintAxis(box, \"left\"),\n      g.paintTicks(box, rIndex, \"bottom\", {\n        lines: 5,\n        fmt: formatSpeed,\n        style: styles.valueLabel,\n      }),\n    ];\n\n    function paintHistogram(): ShapeList {\n      return Shapes.fill(\n        styles.speed,\n        [...rIndex.steps()].map((index) => {\n          const w = Math.ceil(box.width / rIndex.span);\n          const x = Math.round(rIndex.normalize(index, 1) * box.width);\n          const y = Math.round(rValue.normalize(vValue.at(index)) * box.height);\n          return Shapes.rect({\n            x: box.x + x,\n            y: box.y + box.height - y,\n            width: w,\n            height: y,\n          });\n        }),\n      );\n    }\n  };\n}\n\nfunction buildHistogram(steps: readonly TimeToType[]) {\n  const histogram = new Array(1501).fill(0);\n  for (const { timeToType } of steps) {\n    if (timeToType > 0) {\n      const index = Math.round(timeToSpeed(timeToType));\n      if (index >= 0 && index < histogram.length) {\n        histogram[index] += 1;\n      }\n    }\n  }\n  return bucketize(histogram, 15);\n}\n"],"names":["Chart","children","width","height","style","display","position","insetInlineStart","insetBlockStart","inlineSize","blockSize","margin","padding","borderStyle","chartArea","styles","cb","h","lineHeight","v","area","round","clear","vTicks","box","items","length","Error","map","value","index","point","x","y","hTicks","vBoxes","rect","size","w","hBoxes","withStyles","paintGrid","direction","lines","frame","fill","makeRange","paintFrame","paintAxis","edge","paintTicks","range","fmt","String","valueLabel","textAlign","textBaseline","makeTicks","fillText","paintKeyTicks","keyLabel","cy","cx","paintNoData","formatMessage","headerText","subheaderText","min","max","count","result","i","push","from","to","Array","_","_1","_2","_3","_4","_5","_6","_7","_8","_9","_a","_b","_c","_d","useChartStyles","computeStyle","computeLineHeight","useMemo","threshold","thresholdLabel","complexity","accuracy","speed","histHit","histMiss","histRatio","AccuracyHistogram","distribution","thresholds","paint","dist","useIntl","formatPercents","g","vIndex","vPmf","vCdf","pmf","cdf","add","rIndex","scale","rPmf","rCdf","paintPmfHistogram","paintCdfHistogram","paintPmfLine","paintCdfLine","unscale","steps","Math","ceil","span","normalize","at","label","usePaint","Canvas","smooth","data","wnd","a","b","sum","j","bucketize","buckets","bucketSize","floor","makeSpeedDistribution","makeAccuracyDistribution","projection","xr","yr","xmin","xmax","ymin","ymax","dx","dy","paintScatterPlot","proj","withStyle","r","fillCircle","paintCurve","model","d","s","strokeLine","eval","paintHistogram","KeyDetailsChart","lessonKey","learningRate","formatInteger","formatSpeed","settings","target","vSpeed","mSpeed","rSpeed","targetSpeed","now","bestConfidence","paintThresholdLine","lineWidth","keyUsage","keyStatsMap","letters","keySet","hit","miss","ratio","letter","keyStats","get","hitCount","missCount","samples","set","KeyFrequencyHeatmap","keyboard","histogram","modifier","KeyFrequencyHistogram","results","boxHit","boxMiss","boxRatio","boxes","vHit","asVector","vMiss","vRatio","rHit","rMiss","rRatio","KeySpeedChart","smoothness","sSpeed","sample","timeToType","KeySpeedHistogram","hSpeed","Marker","type","cn","className","ProgressOverviewChart","confidenceColor","paintGrid1","paintGraph","keyData","makeKeyData","fillStyle","fillRect","NaN","confidence","SpeedChart","vComplexity","sComplexity","vAccuracy","sAccuracy","rComplexity","rAccuracy","projComplexity","projAccuracy","projSpeed","SpeedHistogram","TimeToTypeHistogram","buildHistogram","vValue","rValue"],"sourceRoot":""}